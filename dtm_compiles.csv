864001	"Tuple{typeof(Pkg.API.dir), String, String, Vararg{String, N} where N}"
1472396	"Tuple{getfield(Logging, Symbol("##handle_message#2")), Int64, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, Logging.ConsoleLogger, Base.CoreLogging.LogLevel, String, Module, Symbol, Symbol, String, Int64}"
81383	"Tuple{typeof(Base.Filesystem.joinpath), String}"
75457	"Tuple{typeof(Base.MainInclude.include), String}"
211753	"Tuple{typeof(Base.include), Module, String}"
142223	"Tuple{getfield(Revise, Symbol("##27#30")), Module, String}"
2608990	"Tuple{typeof(Base.manifest_file_name_uuid), String, String, Base.IOStream}"
303408	"Tuple{getfield(Base, Symbol("##666#667")){String, Base.UUID, String}, Base.IOStream}"
94814	"Tuple{getfield(Base, Symbol("##open#304")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, getfield(Base, Symbol("##666#667")){String, Base.UUID, String}, String}"
618667	"Tuple{typeof(Distributed.nprocs)}"
432988	"Tuple{typeof(Base.iterate), Base.Iterators.Filter{getfield(Distributed, Symbol("##65#67")), Array{Any, 1}}}"
201482	"Tuple{typeof(Base.iterate), Base.Iterators.Filter{getfield(Distributed, Symbol("##65#67")), Array{Any, 1}}, Int64}"
41481	"Tuple{typeof(Base._collect), Type{Int64}, Base.Generator{Base.Iterators.Filter{getfield(Distributed, Symbol("##65#67")), Array{Any, 1}}, getfield(Distributed, Symbol("##64#66"))}, Base.SizeUnknown}"
130371	"Tuple{typeof(Distributed.procs)}"
815408	"Tuple{typeof(Base.sync_end), Array{Any, 1}}"
62025	"Tuple{typeof(Distributed._require_callback), Base.PkgId}"
394272	"Tuple{typeof(Revise.watch_package), Base.PkgId}"
506864	"Tuple{typeof(DataStreams.Data.__init__)}"
143408	"Tuple{getfield(Base, Symbol("##s624#412")), Any, Any, Any, Any, Any}"
496198	"Tuple{typeof(Base.:(==)), WeakRef, Symbol}"
111407	"Tuple{typeof(Base.Cartesian.poplinenum), Expr}"
1411952	"Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Base.Cartesian, Symbol("##1#2")){Expr}}}"
312099	"Tuple{typeof(Base.Cartesian.exprresolve_arith), Expr}"
560198	"Tuple{typeof(Base.Cartesian.exprresolve_conditional), Expr}"
187654	"Tuple{typeof(Base.Cartesian.exprresolve), Expr}"
32000	"Tuple{typeof(Base.Cartesian.inlineanonymous), Expr, Int64}"
483556	"Tuple{typeof(Base.copy_exprargs), Array{Any, 1}}"
36740	"Tuple{typeof(Base.copy), Expr}"
1091952	"Tuple{typeof(Base.Cartesian.lreplace!), String, Base.Cartesian.LReplace{String}}"
216099	"Tuple{typeof(Base.Cartesian.lreplace!), Expr, Base.Cartesian.LReplace{String}}"
41481	"Tuple{typeof(Base.Cartesian.lreplace), Expr, Symbol, Int64}"
64395	"Tuple{typeof(Base.copy_exprs), Expr}"
62420	"Tuple{typeof(Base.setproperty!), Expr, Symbol, Type{T} where T}"
128395	"Tuple{typeof(Core.Compiler.getindex), Tuple{UInt64}, Int64}"
119703	"Tuple{typeof(Core.Compiler.getindex), Tuple{Base.Broadcast.DefaultArrayStyle{0}, typeof(Base.identity), UInt64}, Int64}"
1048495	"Tuple{typeof(Base.Filesystem.joinpath), String, String}"
329481	"Tuple{typeof(Base.iterate), Nothing}"
31605	"Tuple{typeof(Base.start), Nothing}"
182124	"Tuple{typeof(Base.Filesystem.splitdir), String}"
30420	"Tuple{typeof(Base.isfile_casesensitive), String}"
90074	"Tuple{typeof(Base.env_project_file), String}"
140642	"Tuple{typeof(Base.explicit_project_deps_get), String, String}"
791309	"Tuple{typeof(Base.Filesystem.isdirpath), String}"
365037	"Tuple{typeof(Base.Filesystem.normpath), String}"
287211	"Tuple{typeof(Base.entry_point_and_project_file), String, String}"
193185	"Tuple{typeof(Base.project_file_name_uuid_path), String, String}"
128000	"Tuple{typeof(Base.implicit_project_deps_get), String, String}"
66370	"Tuple{typeof(Base.project_deps_get), String, String}"
84939	"Tuple{typeof(Base.identify_package), String}"
484346	"Tuple{typeof(Base.project_file_manifest_path), String}"
139457	"Tuple{typeof(Base.explicit_manifest_deps_get), String, Base.UUID, String}"
421926	"Tuple{typeof(Base.implicit_manifest_deps_get), String, Base.PkgId, String}"
107062	"Tuple{typeof(Base.manifest_deps_get), String, Base.PkgId, String}"
92049	"Tuple{typeof(Base.identify_package), Base.PkgId, String}"
33185	"Tuple{typeof(Base.identify_package), Module, String}"
1707064	"Tuple{typeof(Base.implicit_manifest_uuid_path), String, Base.PkgId}"
415210	"Tuple{typeof(Base.explicit_manifest_uuid_path), String, Base.PkgId}"
62420	"Tuple{typeof(Base.manifest_uuid_path), String, Base.PkgId}"
167111	"Tuple{typeof(Base.entry_path), String, String}"
86913	"Tuple{typeof(Base.locate_package), Base.PkgId}"
892051	"Tuple{typeof(Base.package_slug), Base.UUID, Int64}"
46617	"Tuple{typeof(Base.cache_file_entry), Base.PkgId}"
128790	"Tuple{typeof(Base.find_all_in_cache_path), Base.PkgId}"
2187064	"Tuple{typeof(Base.ht_keyindex), Base.Dict{Any, Int64}, Symbol}"
2688397	"Tuple{typeof(Base.stale_cachefile), String, String}"
512790	"Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, String}"
2000594	"Tuple{typeof(Base.register_root_module), Module}"
68346	"Tuple{typeof(Base._include_from_serialized), String, Array{Any, 1}}"
393877	"Tuple{typeof(Base._require_search_from_serialized), Base.PkgId, String}"
2106076	"Tuple{typeof(Base.throw_checksize_error), Array{UInt8, 1}, Tuple{Base.OneTo{UInt64}}}"
49383	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{UInt8, 1}, Base.UnitRange{UInt64}}"
47407	"Tuple{typeof(Base.Filesystem.pwd)}"
1662421	"Tuple{typeof(Base.unpreserve_handle), Base.Process}"
35161	"Tuple{typeof(Base.stream_wait), Base.Process, Base.Condition}"
1499260	"Tuple{typeof(Base.mapreduce_impl), typeof(Base.success), typeof(Base.:(&)), Array{Base.Process, 1}, Int64, Int64, Int64}"
94420	"Tuple{typeof(Base._mapreduce), typeof(Base.success), typeof(Base.:(&)), Base.IndexLinear, Array{Base.Process, 1}}"
301827	"Tuple{typeof(Base.compilecache), Base.PkgId}"
710717	"Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, Nothing}"
91654	"Tuple{typeof(Base._require_from_serialized), String}"
705976	"Tuple{typeof(Base._include_dependency), Module, String}"
205037	"Tuple{typeof(Base.include_relative), Module, String}"
625779	"Tuple{typeof(Base._require), Base.PkgId}"
119703	"Tuple{typeof(Base.require), Base.PkgId}"
35951	"Tuple{typeof(Base.require), Module, Symbol}"
276544	"Tuple{typeof(Base.find_env), String}"
113382	"Tuple{typeof(Base.Filesystem.abspath), String, String, Vararg{String, N} where N}"
386765	"Tuple{typeof(Base.find_env), Base.CurrentEnv, String}"
19754	"Tuple{typeof(Base.find_env), Base.CurrentEnv}"
154864	"Tuple{typeof(Base.find_env), Array{Any, 1}}"
289976	"Tuple{typeof(Base.find_env), Base.NamedEnv}"
61629	"Tuple{typeof(Base.Filesystem.joinpath), String, String, String, Vararg{String, N} where N}"
669630	"Tuple{typeof(Base.iterate), Base.EachLine, Nothing}"
385185	"Tuple{getfield(Base, Symbol("##664#665")){String, String}, Base.IOStream}"
68346	"Tuple{getfield(Base, Symbol("##open#304")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, getfield(Base, Symbol("##664#665")){String, String}, String}"
798815	"Tuple{getfield(Base, Symbol("##660#661")){String}, Base.IOStream}"
84939	"Tuple{getfield(Base, Symbol("##open#304")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, getfield(Base, Symbol("##660#661")){String}, String}"
215704	"Tuple{getfield(Base, Symbol("##654#655")){Int64}, Base.GenericIOBuffer{Array{UInt8, 1}}}"
624988	"Tuple{getfield(Base, Symbol("##662#663")){String}, Base.IOStream}"
82963	"Tuple{getfield(Base, Symbol("##open#304")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, getfield(Base, Symbol("##662#663")){String}, String}"
919309	"Tuple{typeof(Base.:(==)), WeakRef, Nothing}"
275753	"Tuple{typeof(Base.version_slug), Base.UUID, Base.SHA1, Int64}"
252840	"Tuple{getfield(Base, Symbol("##668#669")){String, Base.PkgId}, Base.IOStream}"
65580	"Tuple{getfield(Base, Symbol("##open#304")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, getfield(Base, Symbol("##668#669")){String, Base.PkgId}, String}"
383605	"Tuple{typeof(Base.setindex!), Base.IdDict{Module, Base.PkgId}, Any, Any}"
1045334	"Tuple{typeof(Base.:(==)), WeakRef, Base.UUID}"
1476347	"Tuple{typeof(Base.manifest_file_name_uuid), String, String, Base.IOStream}"
285235	"Tuple{getfield(Base, Symbol("##666#667")){String, Base.UUID, String}, Base.IOStream}"
88494	"Tuple{getfield(Base, Symbol("##open#304")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, getfield(Base, Symbol("##666#667")){String, Base.UUID, String}, String}"
756939	"Tuple{typeof(Base.arg_gen), Base.SubString{String}}"
160395	"Tuple{typeof(Base.cmd_gen), Tuple{Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}}}"
2831805	"Tuple{typeof(Base.mapreduce_impl), typeof(Base.success), typeof(Base.:(&)), Array{Base.Process, 1}, Int64, Int64, Int64}"
106272	"Tuple{typeof(Base._mapreduce), typeof(Base.success), typeof(Base.:(&)), Base.IndexLinear, Array{Base.Process, 1}}"
171457	"Tuple{typeof(Base.success), Base.Cmd}"
36345	"Tuple{typeof(BinDeps.__init__)}"
1827162	"Tuple{Type{Ref{Base.Cstring}}, Array{String, 1}}"
637235	"Tuple{typeof(Base._jl_spawn), String, Array{String, 1}, Base.Cmd, Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}"
77433	"Tuple{getfield(Base, Symbol("##501#502")){Base.Cmd}, Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}"
108642	"Tuple{typeof(Base.setup_stdio), getfield(Base, Symbol("##501#502")){Base.Cmd}, Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}"
48592	"Tuple{getfield(Base, Symbol("##_spawn#500")), Nothing, Function, Base.Cmd, Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}"
324741	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, Bool, Core.SSAValue}"
471705	"Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.Cmd}"
206617	"Tuple{getfield(Base, Symbol("##print_to_string#337")), Nothing, Function, Base.Cmd}"
934717	"Tuple{typeof(Base._collect), Array{String, 1}, Base.Generator{Array{String, 1}, getfield(Base, Symbol("##487#490"))}, Base.EltypeUnknown, Base.HasShape{1}}"
434964	"Tuple{getfield(Base, Symbol("##sprint#336")), Nothing, Int64, Function, Function, Array{String, 1}, Vararg{Any, N} where N}"
2373927	"Tuple{typeof(Base.setproperty!), Base.Iterators.Stateful{String, Union{Nothing, Tuple{Char, Int64}}}, Symbol, Nothing}"
2137681	"Tuple{typeof(Base.escape_string), Base.GenericIOBuffer{Array{UInt8, 1}}, String, String}"
86914	"Tuple{typeof(Base.show), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.Cmd}"
114964	"Tuple{getfield(Base, Symbol("##488#491")){String}, Base.GenericIOBuffer{Array{UInt8, 1}}}"
282074	"Tuple{getfield(Base, Symbol("##with_output_color#680")), Bool, Function, Function, Symbol, Base.GenericIOBuffer{Array{UInt8, 1}}}"
1628051	"Tuple{typeof(Base.print), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Char, String, Vararg{Any, N} where N}"
482370	"Tuple{typeof(Base.print_shell_word), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, String}"
27260	"Tuple{getfield(Base, Symbol("##489#492")){String}, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}}"
779852	"Tuple{getfield(Base, Symbol("##replace#334")), Int64, Function, String, Base.Pair{Base.Fix2{typeof(Base.isequal), Char}, String}}"
664099	"Tuple{typeof(Base.Filesystem.splitdir), String}"
897186	"Tuple{typeof(Random.shuffle!), Random.MersenneTwister, Array{Symbol, 1}}"
51358	"Tuple{typeof(MacroTools.__init__)}"
446025	"Tuple{typeof(Base.Filesystem.joinpath), String, String}"
30024	"Tuple{typeof(Base.Filesystem.joinpath), String, String, String}"
201877	"Tuple{getfield(Base, Symbol("##268#269")){Tuple{DataType}}, Base.IOStream}"
93630	"Tuple{getfield(Base, Symbol("##open#304")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, getfield(Base, Symbol("##268#269")){Tuple{DataType}}, String}"
65186	"Tuple{typeof(Base.length), Array{Base.SubString{String}, 1}}"
69531	"Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Base.SubString{String}, 1}}"
53729	"Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.Unicode.lowercase), Tuple{Array{Base.SubString{String}, 1}}}"
50173	"Tuple{typeof(Base.Broadcast.broadcastable), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.Unicode.lowercase), Tuple{Array{Base.SubString{String}, 1}}}}"
48988	"Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.DefaultArrayStyle{1}, Type{T} where T, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.Unicode.lowercase), Tuple{Array{Base.SubString{String}, 1}}}}"
52543	"Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{Symbol}, Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.Unicode.lowercase), Tuple{Array{Base.SubString{String}, 1}}}}}"
6059857	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, Type{Symbol}, Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.Unicode.lowercase), Tuple{Base.Broadcast.Extruded{Array{Base.SubString{String}, 1}, Tuple{Bool}, Tuple{Int64}}}}}}, Tuple{Int64}}"
714272	"Tuple{typeof(Base.map), typeof(Base.Unicode.lowercase), Base.SubString{String}}"
141432	"Tuple{typeof(Base.Broadcast.materialize!), Array{Symbol, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{Symbol}, Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.Unicode.lowercase), Tuple{Array{Base.SubString{String}, 1}}}}}}"
71111	"Tuple{typeof(Base.Filesystem.dirname), String}"
1223902	"Tuple{typeof(Base.cmd_gen), Tuple{Tuple{String}, Tuple{Base.SubString{String}, String}, Tuple{Base.SubString{String}, String}, Tuple{Base.SubString{String}, String}, Tuple{Base.SubString{String}, String}}}"
58469	"Tuple{typeof(Base.julia_cmd)}"
216889	"Tuple{typeof(Base.cmd_gen), Tuple{Tuple{Base.Cmd}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}, Tuple{String}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}, String}, Tuple{Base.SubString{String}}, Tuple{String}}}"
946174	"Tuple{typeof(Base.create_expr_cache), String, String, Array{Base.Pair{Base.PkgId, UInt64}, 1}, Base.UUID}"
931162	"Tuple{typeof(Base.Filesystem.unlink), String}"
755358	"Tuple{typeof(Base.Filesystem.readdir), String}"
438124	"Tuple{getfield(Base.Filesystem, Symbol("##rm#9")), Bool, Bool, Function, String}"
323556	"Tuple{getfield(Base, Symbol("##Cmd#484#485")), Bool, Nothing, String, Bool, Bool, Bool, Type{T} where T, Base.Cmd}"
57679	"Tuple{Type{NamedTuple{(:stderr,), Tuple{Base.TTY}}}, Tuple{Base.TTY}}"
129185	"Tuple{getfield(Base, Symbol("#kw##pipeline")), NamedTuple{(:stderr,), Tuple{Base.TTY}}, typeof(Base.pipeline), Base.Cmd}"
147358	"Tuple{getfield(Base, Symbol("##pipeline#496")), Nothing, Nothing, Base.TTY, Bool, Function, Base.Cmd}"
733630	"Tuple{typeof(Base.open), Base.CmdRedirect, String, Base.TTY}"
418370	"Tuple{Type{Base.Pipe}}"
634865	"Tuple{typeof(Base.unpreserve_handle), Base.PipeEndpoint}"
41877	"Tuple{typeof(Base.stream_wait), Base.PipeEndpoint, Base.Condition}"
30024	"Tuple{typeof(Base.close), Base.PipeEndpoint}"
377285	"Tuple{Type{Base.ProcessChain}, Base.ProcessChain, Symbol}"
98765	"Tuple{getfield(Base, Symbol("##open#510")), Bool, Bool, Function, Base.CmdRedirect, Base.TTY}"
78222	"Tuple{typeof(Base._spawn), Base.CmdRedirect, Tuple{Base.Pipe, Base.TTY, Base.TTY}}"
230321	"Tuple{getfield(Base, Symbol("##_spawn#497")), Nothing, Function, Base.CmdRedirect, Tuple{Base.Pipe, Base.TTY, Base.TTY}}"
186074	"Tuple{getfield(Base, Symbol("#kw##_spawn")), NamedTuple{(:chain,), Tuple{Nothing}}, typeof(Base._spawn), Base.Cmd, Tuple{Base.Pipe, Base.TTY, Base.TTY}}"
2409878	"Tuple{typeof(Base._jl_spawn), String, Array{String, 1}, Base.Cmd, Tuple{Base.PipeEndpoint, Base.TTY, Base.TTY}}"
94025	"Tuple{getfield(Base, Symbol("##501#502")){Base.Cmd}, Tuple{Base.PipeEndpoint, Base.TTY, Base.TTY}}"
760099	"Tuple{typeof(Base.unpreserve_handle), Base.TTY}"
51753	"Tuple{typeof(Base.stream_wait), Base.TTY, Base.Condition}"
33976	"Tuple{typeof(Base.close), Base.TTY}"
131160	"Tuple{typeof(Base.setup_stdio), getfield(Base, Symbol("##501#502")){Base.Cmd}, Tuple{Base.Pipe, Base.TTY, Base.TTY}}"
66371	"Tuple{getfield(Base, Symbol("##_spawn#500")), Nothing, Function, Base.Cmd, Tuple{Base.Pipe, Base.TTY, Base.TTY}}"
355556	"Tuple{typeof(Base.setindex!), Base.IdDict{Any, Any}, Any, Any}"
1629236	"Tuple{typeof(Base.cache_file_entry), Base.PkgId}"
168296	"Tuple{typeof(Base.isfile_casesensitive), String}"
112988	"Tuple{typeof(Base.find_all_in_cache_path), Base.PkgId}"
1291063	"Tuple{typeof(Revise.parse_source!), Base.Dict{Module, Revise.ExprsSigs}, String, Module}"
249679	"Tuple{typeof(Revise.parse_pkg_files), Base.PkgId}"
1067457	"Tuple{typeof(Revise.process_parsed_files), Array{String, 1}}"
82173	"Tuple{typeof(Revise._watch_package), Base.PkgId}"
15803	"Tuple{getfield(Revise, Symbol("##7#8")){Base.PkgId}}"
396642	"Tuple{typeof(Base.catch_backtrace)}"
750223	"Tuple{typeof(Base.task_done_hook), Task}"
144198	"Tuple{getfield(Revise, Symbol("##10#12"))}"
1615409	"Tuple{typeof(Base.unpreserve_handle), FileWatching.PollingFileWatcher}"
46222	"Tuple{typeof(Base.stream_wait), FileWatching.PollingFileWatcher, Base.Condition}"
378865	"Tuple{typeof(FileWatching.poll_file), String, Float64, Int64}"
875457	"Tuple{typeof(Base.unpreserve_handle), FileWatching.FileMonitor}"
36346	"Tuple{typeof(Base.stream_wait), FileWatching.FileMonitor, Base.Condition}"
208988	"Tuple{typeof(FileWatching.watch_file), String, Int64}"
308148	"Tuple{typeof(Revise.watch_files_via_dir), String}"
243359	"Tuple{typeof(Revise.revise_dir_queued), String}"
408494	"Tuple{getfield(Base, Symbol("##sprint#336")), Base.Pair{Symbol, Nothing}, Int64, Function, Function, Array{Any, 1}}"
719408	"Tuple{typeof(Base.typeinfo_prefix), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Any, 1}}"
1059556	"Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Any, 1}, Char, String, String, Bool, Int64, Int64}"
1512693	"Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Any, 1}, String, String, Char, Bool, Int64, Int64}"
756939	"Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Any, 1}, Char, String, Char, Bool, Int64, Int64}"
58074	"Tuple{typeof(Base.show_vector), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Any, 1}, Char, Char}"
19358	"Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Any, 1}}"
363457	"Tuple{getfield(Base, Symbol("##print_to_string#337")), Nothing, Function, Type{T} where T}"
55704	"Tuple{typeof(Base.show), Base.GenericIOBuffer{Array{UInt8, 1}}, DataType}"
861631	"Tuple{typeof(Base.show_type_name), Base.GenericIOBuffer{Array{UInt8, 1}}, Core.TypeName}"
133926	"Tuple{typeof(Base.show_datatype), Base.GenericIOBuffer{Array{UInt8, 1}}, DataType}"
193976	"Tuple{typeof(Base.iterate), Base.ImmutableDict{Symbol, Any}, Base.ImmutableDict{Symbol, Any}}"
112987	"Tuple{typeof(Base.show_circular), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Any}"
230321	"Tuple{typeof(Base.print), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Type{T} where T, String}"
51358	"Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, DataType}"
1391013	"Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Module}"
330272	"Tuple{typeof(Base.show_type_name), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Core.TypeName}"
231111	"Tuple{typeof(Base.show_datatype), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, DataType}"
341333	"Tuple{getfield(Base, Symbol("##print_to_string#337")), Nothing, Function, Type{T} where T, Vararg{Any, N} where N}"
240198	"Tuple{typeof(Base.print), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Type{T} where T, String, Vararg{String, N} where N}"
5241683	"Tuple{typeof(Base.escape_string), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, String}"
77037	"Tuple{typeof(Base.print_quoted), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String}"
161580	"Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{String, 1}, Char, String, String, Bool, Int64, Int64}"
764840	"Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{String, 1}, String, String, Char, Bool, Int64, Int64}"
706766	"Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{String, 1}, Char, String, Char, Bool, Int64, Int64}"
69136	"Tuple{typeof(Base.show_vector), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{String, 1}, Char, Char}"
16988	"Tuple{typeof(Base.show), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{String, 1}}"
855309	"Tuple{typeof(Base.uv_write_async), Base.PipeEndpoint, Ptr{UInt8}, UInt64}"
325136	"Tuple{typeof(Base.unpreserve_handle), Task}"
56889	"Tuple{typeof(Base.uv_write), Base.PipeEndpoint, Ptr{UInt8}, UInt64}"
342124	"Tuple{typeof(Base.unsafe_write), Base.PipeEndpoint, Ptr{UInt8}, UInt64}"
22518	"Tuple{typeof(Base.write), Base.Pipe, String}"
297482	"Tuple{getfield(Base, Symbol("##sprint#336")), Nothing, Int64, Function, Function, UInt64}"
126419	"Tuple{typeof(Base.unsafe_write), Base.Pipe, Ptr{UInt8}, UInt64}"
809877	"Tuple{typeof(Base.show_delim_array), Base.GenericIOBuffer{Array{UInt8, 1}}, Tuple{UInt64, UInt64}, Char, Char, Char, Bool, Int64, Int64}"
77037	"Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Tuple{UInt64, UInt64}}"
142222	"Tuple{typeof(Base.getindex), Base.IdDict{Any, Any}, Any}"
103506	"Tuple{typeof(Base.repr), String}"
109433	"Tuple{typeof(Base.close), Base.Pipe}"
374519	"Tuple{typeof(Base.open), Function, String, String}"
715852	"Tuple{getfield(Base, Symbol("##672#673")), Base.IOStream}"
191210	"Tuple{getfield(Base, Symbol("##open#304")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, getfield(Base, Symbol("##672#673")), String, Vararg{String, N} where N}"
1112100	"Tuple{getfield(Base, Symbol("##open#303")), Bool, Nothing, Nothing, Nothing, Bool, Function, String}"
552297	"Tuple{typeof(Rmath.__init__)}"
1222322	"Tuple{typeof(Base.typejoin), Any, Any}"
859655	"Tuple{typeof(Base.iterate), Nothing}"
41086	"Tuple{typeof(Base.start), Nothing}"
214914	"Tuple{typeof(Base.Filesystem.splitdir), String}"
314469	"Tuple{typeof(Base.Filesystem.joinpath), String, String}"
339359	"Tuple{typeof(Base.Filesystem.isdirpath), String}"
1648594	"Tuple{Type{PyCall.PyError}, String}"
90864	"Tuple{typeof(Base.error), String, String}"
48988	"Tuple{Type{PyCall.PyObject}, String}"
1471606	"Tuple{typeof(PyCall.pyint_query), PyCall.PyObject}"
1334519	"Tuple{getfield(Base, Symbol("##sprint#336")), Nothing, Int64, Function, Function, String, Vararg{String, N} where N}"
66766	"Tuple{typeof(Base.haskey), PyCall.PyObject, String}"
356346	"Tuple{typeof(Base.getindex), PyCall.PyObject, String}"
171062	"Tuple{typeof(Base.get), PyCall.PyObject, Type{PyCall.PyObject}, String}"
370173	"Tuple{typeof(Base.convert), Type{AbstractString}, PyCall.PyObject}"
448790	"Tuple{typeof(Base.ht_keyindex), Base.Dict{String, DataType}, String}"
107457	"Tuple{typeof(PyCall.pysequence_query), PyCall.PyObject}"
223210	"Tuple{typeof(PyCall.pyptr_query), PyCall.PyObject}"
90469	"Tuple{typeof(PyCall.pynothing_query), PyCall.PyObject}"
164346	"Tuple{typeof(Base.getindex), Array{Tuple{PyCall.PyObject, Type{T} where T}, 1}, Int64}"
199111	"Tuple{typeof(PyCall.pytype_query), PyCall.PyObject, Type{PyCall.PyObject}}"
16593	"Tuple{typeof(PyCall.pytype_query), PyCall.PyObject}"
82568	"Tuple{typeof(Base.convert), Type{PyCall.PyAny}, PyCall.PyObject}"
13827	"Tuple{Type{PyCall.PyAny}, PyCall.PyObject}"
35161	"Tuple{typeof(Base.:(!=)), PyCall.PyObject, PyCall.PyObject}"
20148	"Tuple{typeof(Base.:(!=)), PyCall.PyObject, String}"
295506	"Tuple{typeof(Base.Filesystem.normpath), String}"
544001	"Tuple{typeof(PyCall.Py_SetPythonHome), Ptr{Nothing}, String, Array{UInt16, 1}, Base.VersionNumber}"
1995853	"Tuple{Type{Base.VersionNumber}, String}"
880988	"Tuple{typeof(Base.filter!), getfield(Base, Symbol("##58#59")){typeof(Base.isempty)}, Array{Base.SubString{String}, 1}}"
451556	"Tuple{typeof(Base.setindex!), Array{Base.SubString{String}, 1}, Int64, Int64}"
557038	"Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Base.SubString{String}, 1}, typeof(VersionParsing.digits2num)}, Int64, Int64}"
1120001	"Tuple{typeof(Base.copyto!), Array{Any, 1}, Int64, Array{Base.SubString{String}, 1}, Int64, Int64}"
146568	"Tuple{typeof(Base.collect_to!), Array{Base.SubString{String}, 1}, Base.Generator{Array{Base.SubString{String}, 1}, typeof(VersionParsing.digits2num)}, Int64, Int64}"
97185	"Tuple{typeof(Base.setindex!), Array{Int64, 1}, Base.SubString{String}, Int64}"
86519	"Tuple{typeof(Base._collect), Array{Base.SubString{String}, 1}, Base.Generator{Array{Base.SubString{String}, 1}, typeof(VersionParsing.digits2num)}, Base.EltypeUnknown, Base.HasShape{1}}"
511605	"Tuple{typeof(VersionParsing.vparse), String}"
578766	"Tuple{typeof(PyCall.ActivatePyActCtx)}"
176593	"Tuple{typeof(PyCall._pyimport), String}"
139061	"Tuple{typeof(PyCall.pyimport), String}"
474470	"Tuple{typeof(PyCall.pyexc_initialize)}"
350420	"Tuple{typeof(PyCall.init_datetime)}"
637630	"Tuple{typeof(Base._append!), Array{PyCall.PyMemberDef, 1}, Base.HasLength, Tuple{PyCall.PyMemberDef, PyCall.PyMemberDef}}"
68741	"Tuple{typeof(PyCall.pyjlwrap_dealloc), Ptr{PyCall.PyObject_struct}}"
170667	"Tuple{typeof(PyCall.pyjlwrap_repr), Ptr{PyCall.PyObject_struct}}"
734420	"Tuple{typeof(Base.hash), PyCall.PyObject}"
43062	"Tuple{typeof(PyCall.pyjlwrap_hash), Ptr{PyCall.PyObject_struct}}"
161975	"Tuple{typeof(PyCall.pyjlwrap_hash32), Ptr{PyCall.PyObject_struct}}"
96000	"Tuple{typeof(PyCall.pyjlwrap_call), Ptr{PyCall.PyObject_struct}, Ptr{PyCall.PyObject_struct}, Ptr{PyCall.PyObject_struct}}"
705976	"Tuple{typeof(Base.convert), Type{String}, PyCall.PyObject}"
363062	"Tuple{typeof(Base._any), getfield(Base, Symbol("##182#183")){String}, Tuple{String, String, String, String, String}, Base.Colon}"
171457	"Tuple{Type{PyCall.PyObject}, Nothing}"
276148	"Tuple{typeof(PyCall.pyjlwrap_getattr), Ptr{PyCall.PyObject_struct}, Ptr{PyCall.PyObject_struct}}"
207013	"Tuple{typeof(PyCall.pyjlwrap_getiter), Ptr{PyCall.PyObject_struct}}"
520692	"Tuple{typeof(PyCall.PyTypeObject!), getfield(PyCall, Symbol("##95#96")){Ptr{Nothing}, Ptr{Nothing}, Ptr{Nothing}, Ptr{Nothing}, Ptr{Nothing}, Ptr{Nothing}, Ptr{Nothing}}, PyCall.PyTypeObject, String, Int64}"
60049	"Tuple{typeof(PyCall.pyjlwrap_init)}"
197136	"Tuple{typeof(PyCall.maindict)}"
640791	"Tuple{typeof(PyCall.pyeval_), String, PyCall.PyDict{String, PyCall.PyObject, false}, PyCall.PyDict{String, PyCall.PyObject, false}, Int64, String}"
424691	"Tuple{typeof(Base.setindex!), PyCall.PyObject, String, String}"
110618	"Tuple{typeof(PyCall.__init__)}"
175803	"Tuple{typeof(Libdl.dlsym), Ptr{Nothing}, Symbol}"
871902	"Tuple{getfield(Base, Symbol("##replace#334")), Int64, Function, String, Base.Pair{Base.Regex, String}}"
112987	"Tuple{typeof(Base.getindex), Base.RefValue{Ptr{PyCall.PyObject_struct}}}"
58469	"Tuple{typeof(Base.:(==)), Ptr{PyCall.PyObject_struct}, Ptr{PyCall.PyObject_struct}}"
34371	"Tuple{typeof(Base.convert), Type{PyCall.PyObject}, PyCall.PyObject}"
1431705	"Tuple{typeof(Base.rehash!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Int64}"
42271	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{Exception}}"
529383	"Tuple{typeof(Base.ht_keyindex2!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Type{T} where T}"
105481	"Tuple{typeof(PyCall.pydecref), PyCall.PyObject}"
307753	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{ErrorException}}"
246913	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{Base.SystemError}}"
242963	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{TypeError}}"
233482	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{Base.Meta.ParseError}}"
252445	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{ArgumentError}}"
237433	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{Base.KeyError}}"
237037	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{LoadError}}"
231111	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{MethodError}}"
285630	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{Base.EOFError}}"
280099	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{BoundsError}}"
227951	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{DivideError}}"
235062	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{DomainError}}"
251259	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{OverflowError}}"
250074	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{InexactError}}"
233877	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{OutOfMemoryError}}"
293531	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{StackOverflowError}}"
291556	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{UndefRefError}}"
321185	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{InterruptException}}"
252840	"Tuple{typeof(Base.setindex!), Base.Dict{DataType, Ptr{PyCall.PyObject_struct}}, Ptr{PyCall.PyObject_struct}, Type{PyCall.PyIOError}}"
2689188	"Tuple{typeof(Base.rehash!), Base.Dict{Ptr{PyCall.PyObject_struct}, Any}, Int64}"
76642	"Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Ptr{PyCall.PyObject_struct}, Any}, Ptr{PyCall.PyObject_struct}}"
149333	"Tuple{typeof(Base.setindex!), Base.Dict{Ptr{PyCall.PyObject_struct}, Any}, Base.RefValue{Any}, Ptr{PyCall.PyObject_struct}}"
56494	"Tuple{typeof(PyCall.pyjlwrap_new), PyCall.PyTypeObject, Distributed.WorkerState}"
103506	"Tuple{typeof(Distributed.nprocs)}"
390717	"Tuple{typeof(Base.iterate), Base.Iterators.Filter{getfield(Distributed, Symbol("##65#67")), Array{Any, 1}}}"
186469	"Tuple{typeof(Base.iterate), Base.Iterators.Filter{getfield(Distributed, Symbol("##65#67")), Array{Any, 1}}, Int64}"
36741	"Tuple{typeof(Base._collect), Type{Int64}, Base.Generator{Base.Iterators.Filter{getfield(Distributed, Symbol("##65#67")), Array{Any, 1}}, getfield(Distributed, Symbol("##64#66"))}, Base.SizeUnknown}"
109037	"Tuple{typeof(Distributed.procs)}"
794865	"Tuple{typeof(Base.sync_end), Array{Any, 1}}"
71111	"Tuple{typeof(Distributed._require_callback), Base.PkgId}"
461827	"Tuple{typeof(Base.close), Base.PipeEndpoint}"
54124	"Tuple{typeof(Base.uvfinalize), Base.PipeEndpoint}"
779852	"Tuple{typeof(DecisionTrees.__init__)}"
146568	"Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Base.Libc.RawFD, Base.Libc.RawFD, Base.Libc.RawFD}}, Int64}"
864396	"Tuple{typeof(Base.ht_keyindex), Base.Dict{Any, Int64}, Symbol}"
707161	"Tuple{typeof(Base.cmd_gen), Tuple{Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}, Tuple{String}, Tuple{Base.SubString{String}}}}"
1514668	"Tuple{typeof(Conda.szExeFile), Conda.PROCESSENTRY32}"
233481	"Tuple{typeof(Conda.isrunning), String}"
647902	"Tuple{typeof(Base.Filesystem.joinpath), String, String}"
91655	"Tuple{typeof(Conda._installer_url)}"
626568	"Tuple{typeof(Base.cmd_gen), Tuple{Tuple{String}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}, Tuple{String, Base.SubString{String}, String}}}"
2358520	"Tuple{typeof(Base.mapreduce_impl), typeof(Base.success), typeof(Base.:(&)), Array{Base.Process, 1}, Int64, Int64, Int64}"
123655	"Tuple{typeof(Base._mapreduce), typeof(Base.success), typeof(Base.:(&)), Base.IndexLinear, Array{Base.Process, 1}}"
770766	"Tuple{typeof(Base.pipeline_error), Base.ProcessChain}"
90864	"Tuple{typeof(Base.download), String, String}"
560198	"Tuple{typeof(Base.cmd_gen), Tuple{Tuple{String}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}, String}}}"
130766	"Tuple{typeof(Conda.add_channel), String}"
556247	"Tuple{typeof(Base.cmd_gen), Tuple{Tuple{Base.SubString{String}}}}"
238222	"Tuple{typeof(Base.cmd_gen), Tuple{Tuple{}}}"
32395	"Tuple{typeof(Conda._quiet)}"
292741	"Tuple{typeof(Base.cmd_gen), Tuple{Tuple{Base.SubString{String}}, Tuple{Base.Cmd}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}}}"
56099	"Tuple{typeof(Conda.runconda), Base.Cmd}"
536890	"Tuple{typeof(Base.cmd_gen), Tuple{Tuple{Base.SubString{String}}, Tuple{Base.Cmd}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}, Tuple{String}}}"
185284	"Tuple{typeof(Conda._install_conda), String, Bool}"
14617	"Tuple{typeof(Conda._install_conda), String}"
253630	"Tuple{typeof(Base.cmd_gen), Tuple{Tuple{String}, Tuple{Base.Cmd}}}"
573235	"Tuple{Type{Base.Dict{String, String}}}"
625383	"Tuple{typeof(Base.iterate), Base.EnvDict, Tuple{Ptr{UInt16}, Ptr{UInt16}}}"
303408	"Tuple{typeof(Base.setindex!), Base.Dict{String, String}, String, String}"
30024	"Tuple{typeof(Base.copy), Base.EnvDict}"
415211	"Tuple{typeof(Base.pop!), Base.Dict{String, String}, String}"
576000	"Tuple{typeof(Base.byteenv), Base.Dict{String, String}}"
161975	"Tuple{typeof(Conda._set_conda_env), Base.Cmd, String}"
22519	"Tuple{typeof(Conda.runconda), Base.Cmd, String}"
17778	"Tuple{typeof(Conda.add_channel), String, String}"
506074	"Tuple{typeof(Base.cmd_gen), Tuple{Tuple{Base.SubString{String}}, Tuple{Base.Cmd}, Tuple{Base.SubString{String}}, Tuple{String}}}"
130371	"Tuple{typeof(PyCall.pyimport_conda), String, String, String}"
175013	"Tuple{Type{Array{DecisionTrees.Rulepath{T} where T<:Unsigned, N} where N}, Int64}"
719408	"Tuple{Type{PyCall.PyObject}, Int64}"
500544	"Tuple{typeof(Base.:(>)), PyCall.PyObject, PyCall.PyObject}"
97580	"Tuple{typeof(Base.backtrace)}"
680297	"Tuple{typeof(Base.StackTraces.lookup), Ptr{Nothing}}"
447210	"Tuple{typeof(Base.firstcaller), Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}, Tuple{Symbol}}"
212938	"Tuple{typeof(Base.depwarn), String, Symbol}"
383606	"Tuple{typeof(Base._reformat_bt), Array{Ptr{Nothing}, 1}, Array{Any, 1}}"
140247	"Tuple{typeof(Base.:(==)), Base.StackTraces.StackFrame, Base.StackTraces.StackFrame}"
335013	"Tuple{typeof(Base.ht_keyindex), Base.Dict{Any, Int64}, Tuple{Ptr{Nothing}, Symbol}}"
33975	"Tuple{typeof(Base.CoreLogging.shouldlog), Logging.ConsoleLogger, Base.CoreLogging.LogLevel, Module, Symbol, Tuple{Ptr{Nothing}, Symbol}}"
225185	"Tuple{getfield(Base.CoreLogging, Symbol("#kw##handle_message")), NamedTuple{(:caller, :maxlog), Tuple{Base.StackTraces.StackFrame, Int64}}, typeof(Base.CoreLogging.handle_message), Logging.ConsoleLogger, Base.CoreLogging.LogLevel, String, Module, Symbol, Tuple{Ptr{Nothing}, Symbol}, String, Int64}"
2156248	"Tuple{typeof(Base.rehash!), Base.Dict{Any, Int64}, Int64}"
60445	"Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Int64}, Tuple{Ptr{Nothing}, Symbol}}"
178568	"Tuple{typeof(Base.get!), getfield(Base, Symbol("##229#230")){Int64}, Base.Dict{Any, Int64}, Tuple{Ptr{Nothing}, Symbol}}"
288790	"Tuple{typeof(Base.setindex!), Base.Dict{Any, Int64}, Int64, Tuple{Ptr{Nothing}, Symbol}}"
566914	"Tuple{typeof(Base.iterate), Base.StackTraces.StackFrame}"
37136	"Tuple{typeof(Base.start), Base.StackTraces.StackFrame}"
70716	"Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, Base.StackTraces.StackFrame}"
905087	"Tuple{typeof(Base.:(^)), PyCall.PyObject, PyCall.PyObject}"
21334	"Tuple{typeof(Base.:(^)), String, PyCall.PyObject}"
295506	"Tuple{typeof(PyCall.pystring), PyCall.PyObject}"
66765	"Tuple{typeof(Base.print), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, PyCall.PyObject}"
299062	"Tuple{getfield(Logging, Symbol("##handle_message#2")), Int64, Base.Iterators.Pairs{Symbol, Base.StackTraces.StackFrame, Tuple{Symbol}, NamedTuple{(:caller,), Tuple{Base.StackTraces.StackFrame}}}, Function, Logging.ConsoleLogger, Base.CoreLogging.LogLevel, String, Module, Symbol, Tuple{Ptr{Nothing}, Symbol}, String, Int64}"
1139754	"Tuple{typeof(Base.open), Base.Cmd, String, Base.TTY}"
272592	"Tuple{typeof(Base.displaysize), Base.TTY}"
195555	"Tuple{Type{Base.IOContext{IO_t} where IO_t<:IO}, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Base.Pair{Symbol, Tuple{Int64, Int64}}}"
1543902	"Tuple{typeof(Base.ht_keyindex), Base.Dict{Any, Any}, Int64}"
688593	"Tuple{typeof(Base.ht_keyindex), Base.Dict{Any, Any}, Symbol}"
69136	"Tuple{typeof(Base.repl_color), String, Symbol}"
462223	"Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Core.MethodInstance}"
585877	"Tuple{typeof(Base.sourceinfo_slotnames), Core.CodeInfo}"
1244840	"Tuple{typeof(Base.show_list), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Any, 1}, String, Int64, Int64, Bool}"
178568	"Tuple{typeof(Base.show_block), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, Array{Any, 1}, Expr, Int64}"
5099066	"Tuple{typeof(Base.show_enclosed_list), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Char, Array{Any, 1}, String, Char, Int64, Int64, Bool}"
878618	"Tuple{typeof(Base.show_list), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Any, 1}, Symbol, Int64, Int64, Bool}"
63605	"Tuple{typeof(Base.show_enclosed_list), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Char, Array{Any, 1}, Symbol, Char, Int64, Int64, Bool}"
2234076	"Tuple{typeof(Base.show_generator), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Expr, Int64}"
1233779	"Tuple{typeof(Base.show_list), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Any, 1}, Char, Int64, Int64, Bool}"
3480496	"Tuple{typeof(Base.show_unquoted), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Expr, Int64, Int64}"
79013	"Tuple{typeof(Base.show_unquoted_quote_expr), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Expr, Int64, Int64}"
88889	"Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Core.CodeInfo}"
163950	"Tuple{typeof(Base.StackTraces.show_spec_linfo), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Base.StackTraces.StackFrame}"
402569	"Tuple{typeof(Base.Filesystem.splitdir), String}"
240197	"Tuple{getfield(Base.StackTraces, Symbol("##show#9")), Bool, Function, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Base.StackTraces.StackFrame}"
869137	"Tuple{typeof(Base.show_tuple_as_call), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Symbol, Type{T} where T}"
77037	"Tuple{typeof(Base.with_output_color), Function, Symbol, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}}"
776297	"Tuple{getfield(Base, Symbol("##with_output_color#680")), Bool, Function, Function, Symbol, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}}"
721383	"Tuple{getfield(Base, Symbol("##with_output_color#680")), Bool, Function, Function, Symbol, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String}"
824889	"Tuple{getfield(Base, Symbol("##with_output_color#680")), Bool, Function, Function, Symbol, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, Vararg{String, N} where N}"
188840	"Tuple{getfield(Base.StackTraces, Symbol("##10#11")){Base.StackTraces.StackFrame}, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}}"
160000	"Tuple{typeof(Base.debug_color)}"
43852	"Tuple{typeof(Base.info_color)}"
37136	"Tuple{typeof(Base.warn_color)}"
28840	"Tuple{typeof(Base.error_color)}"
108247	"Tuple{typeof(Logging.default_metafmt), Base.CoreLogging.LogLevel, Module, Symbol, Tuple{Ptr{Nothing}, Symbol}, String, Int64}"
152099	"Tuple{getfield(Base, Symbol("#kw##printstyled")), NamedTuple{(:bold, :color), Tuple{Bool, Symbol}}, typeof(Base.printstyled), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String}"
137481	"Tuple{getfield(Base, Symbol("#kw##printstyled")), NamedTuple{(:bold, :color), Tuple{Bool, Symbol}}, typeof(Base.printstyled), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, Vararg{String, N} where N}"
76247	"Tuple{getfield(Base, Symbol("##printstyled#681")), Bool, Symbol, Function, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, Vararg{String, N} where N}"
106667	"Tuple{getfield(Base, Symbol("#kw##with_output_color")), NamedTuple{(:bold,), Tuple{Bool}}, typeof(Base.with_output_color), Function, Symbol, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, Vararg{String, N} where N}"
173827	"Tuple{getfield(Base, Symbol("#kw##printstyled")), NamedTuple{(:color,), Tuple{Symbol}}, typeof(Base.printstyled), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String}"
949334	"Tuple{typeof(Base.uv_write_async), Base.TTY, Ptr{UInt8}, UInt64}"
153284	"Tuple{typeof(Base.uv_write), Base.TTY, Ptr{UInt8}, UInt64}"
352000	"Tuple{typeof(Base.unsafe_write), Base.TTY, Ptr{UInt8}, UInt64}"
21333	"Tuple{typeof(Base.write), Base.TTY, Array{UInt8, 1}}"
1649779	"Tuple{typeof(Base.cache_file_entry), Base.PkgId}"
163951	"Tuple{typeof(Base.isfile_casesensitive), String}"
107062	"Tuple{typeof(Base.find_all_in_cache_path), Base.PkgId}"
1189532	"Tuple{typeof(Revise.parse_source!), Base.Dict{Module, Revise.ExprsSigs}, String, Module}"
230321	"Tuple{typeof(Revise.parse_pkg_files), Base.PkgId}"
952889	"Tuple{typeof(Revise.process_parsed_files), Array{String, 1}}"
73087	"Tuple{typeof(Revise._watch_package), Base.PkgId}"
13432	"Tuple{getfield(Revise, Symbol("##7#8")){Base.PkgId}}"
757729	"Tuple{typeof(Base.task_done_hook), Task}"
135507	"Tuple{getfield(Revise, Symbol("##10#12"))}"
939458	"Tuple{typeof(Revise.watch_files_via_dir), String}"
256790	"Tuple{typeof(Revise.revise_dir_queued), String}"
93630	"Tuple{Type{DecisionTrees.Leaf}, Int64, Float64, Float64, Float64, Int64, Array{DecisionTrees.Rulepath{T} where T<:Unsigned, 1}, Float64, Float64, Int64}"
95210	"Tuple{Type{Array{UInt8, N} where N}, Int64}"
101530	"Tuple{typeof(Base.deepcopy), DecisionTrees.Leaf}"
305778	"Tuple{typeof(Base.deepcopy_internal), Any, Base.IdDict{Any, Any}}"
143407	"Tuple{typeof(Base.deepcopy_internal), Array{DecisionTrees.Rulepath{T} where T<:Unsigned, 1}, Base.IdDict{Any, Any}}"
368197	"Tuple{typeof(Base._deepcopy_array_t), Any, Type{T} where T, Base.IdDict{Any, Any}}"
63605	"Tuple{typeof(Base.similar), Array{DecisionTrees.Rulepath{T} where T<:Unsigned, 1}}"
49383	"Tuple{typeof(Base.length), Array{DecisionTrees.Rulepath{T} where T<:Unsigned, 1}}"
188444	"Tuple{typeof(Base.deepcopy), Array{DecisionTrees.Rulepath{T} where T<:Unsigned, 1}}"
78222	"Tuple{Type{DecisionTrees.Node{T} where T<:Unsigned}, Int64, Int64, Array{UInt8, 1}, DecisionTrees.Leaf, DecisionTrees.Leaf, Array{DecisionTrees.Rulepath{T} where T<:Unsigned, 1}}"
334223	"Tuple{typeof(Base.vect), Type{String}, Vararg{DataType, N} where N}"
452346	"Tuple{typeof(Base.hcat), String, String, String, Vararg{String, N} where N}"
56099	"Tuple{typeof(Base.Filesystem.dirname), String}"
1147260	"Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, Array{Any, 1}}"
278914	"Tuple{typeof(Base.CoreLogging.logmsg_shim), Int64, String, Nothing, Symbol, Symbol, Symbol, Int64, Array{Any, 1}}"
1186767	"Tuple{getfield(Logging, Symbol("##handle_message#2")), Nothing, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, Logging.ConsoleLogger, Base.CoreLogging.LogLevel, String, Nothing, Symbol, Symbol, String, Int64}"
267457	"Tuple{typeof(Logging.default_metafmt), Base.CoreLogging.LogLevel, Nothing, Symbol, Symbol, String, Int64}"
316839	"Tuple{typeof(Base.Filesystem.isdirpath), String}"
365828	"Tuple{typeof(Base.Filesystem.normpath), String}"
166716	"Tuple{getfield(Test, Symbol("#@testset")), LineNumberNode, Module, Vararg{Any, N} where N}"
841482	"Tuple{typeof(Test.testset_beginend), Tuple{String, Expr}, Expr, LineNumberNode}"
128790	"Tuple{typeof(Test.parse_testset_args), Tuple{String}}"
78618	"Tuple{getfield(Test, Symbol("#@test")), LineNumberNode, Module, Any, Vararg{Any, N} where N}"
34371	"Tuple{typeof(Test.test_expr!), String, Expr}"
56889	"Tuple{typeof(Core.Compiler.getindex), Tuple{Symbol, Symbol, QuoteNode}, Int64}"
980149	"Tuple{typeof(PyCall.pyjlwrap_new), PyCall.PyTypeObject, Char}"
422321	"Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, typeof(Base.esc)}}"
391507	"Tuple{typeof(Base.collect_to!), Array{QuoteNode, 1}, Base.Generator{Array{Any, 1}, Type{QuoteNode}}, Int64, Int64}"
31605	"Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, Type{QuoteNode}}}"
1532841	"Tuple{typeof(Base.filter!), getfield(Base, Symbol("##41#42")), Array{Any, 1}}"
85333	"Tuple{typeof(Base.remove_linenums!), Expr}"
162371	"Tuple{typeof(Test.get_test_result), Expr, LineNumberNode}"
314074	"Tuple{typeof(Base.first), String}"
198716	"Tuple{typeof(Test.get_testset_depth)}"
71112	"Tuple{typeof(Base.length), Array{Test.AbstractTestSet, 1}}"
128395	"Tuple{typeof(Test._check_testset), Type{T} where T, Expr}"
536099	"Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, Base.Dict{Symbol, Any}}"
76247	"Tuple{Type{Test.DefaultTestSet}, String}"
182914	"Tuple{typeof(Test.push_testset), Test.DefaultTestSet}"
136692	"Tuple{typeof(Base.push!), Array{Test.AbstractTestSet, 1}, Test.DefaultTestSet}"
152098	"Tuple{typeof(Base.copy), Random.MersenneTwister}"
416790	"Tuple{typeof(Random.srand), Random.MersenneTwister, Array{UInt32, 1}}"
18568	"Tuple{typeof(Random.srand), Array{UInt32, 1}}"
399408	"Tuple{typeof(Base.lock), Base.ReentrantLock}"
931161	"Tuple{typeof(Base.unsafe_write), Base.TTY, Base.RefValue{UInt8}, Int64}"
67951	"Tuple{typeof(Base.write), Base.TTY, UInt8}"
199506	"Tuple{typeof(Base.print), Base.TTY, String, Char}"
14617	"Tuple{typeof(Base.println), Base.TTY, String}"
122864	"Tuple{typeof(Base.warn), String}"
81383	"Tuple{getfield(Base, Symbol("##warn#795")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, String}"
72296	"Tuple{typeof(Base.warn), Base.TTY, String}"
659754	"Tuple{typeof(Base.ht_keyindex), Base.Dict{Any, Nothing}, Base.SubString{String}}"
1786866	"Tuple{typeof(Base.rehash!), Base.Dict{Any, Nothing}, Int64}"
82963	"Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Nothing}, Base.SubString{String}}"
150913	"Tuple{typeof(Base.setindex!), Base.Dict{Any, Nothing}, Nothing, Base.SubString{String}}"
893236	"Tuple{typeof(Base.filter!), getfield(Base, Symbol("##788#789")), Array{Base.StackTraces.StackFrame, 1}}"
404938	"Tuple{typeof(Base._redirect), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Base.Dict{Tuple{Union{Nothing, Module}, Union{Nothing, Symbol}}, IO}, Base.StackTraces.StackFrame}"
121284	"Tuple{typeof(Base._redirect), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Base.Dict{Tuple{Union{Nothing, Module}, Union{Nothing, Symbol}}, IO}, Symbol}"
161581	"Tuple{getfield(Base, Symbol("##warn#794")), String, Bool, Nothing, Nothing, Nothing, Int64, Function, Base.TTY, String}"
234667	"Tuple{typeof(Base.print), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, Type{T} where T}"
49778	"Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, DataType}"
1205334	"Tuple{typeof(Base.show_type_name), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Core.TypeName}"
209383	"Tuple{typeof(Base.show_datatype), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, DataType}"
118519	"Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Core.TypeofBottom}"
348445	"Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Tuple{}, Char, Char, Char, Bool, Int64, Int64}"
24099	"Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Tuple{}}"
190025	"Tuple{getfield(Base, Symbol("#kw##printstyled")), NamedTuple{(:color,), Tuple{Symbol}}, typeof(Base.printstyled), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Base.SubString{String}}"
905877	"Tuple{getfield(Base, Symbol("##with_output_color#680")), Bool, Function, Function, Symbol, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Base.SubString{String}}"
161976	"Tuple{typeof(Base.println), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}}"
1059951	"Tuple{typeof(Base.:(&)), PyCall.PyObject, PyCall.PyObject}"
208593	"Tuple{typeof(Test.eval_test), Expr, Expr, LineNumberNode}"
77828	"Tuple{Type{Test.Returned}, Bool, Expr, LineNumberNode}"
70716	"Tuple{typeof(Core.Compiler.getindex), Tuple{Bool, Symbol}, Int64}"
396642	"Tuple{typeof(Test.get_testset)}"
60839	"Tuple{typeof(Test.do_test), Test.Returned, Expr}"
103111	"Tuple{typeof(Base.isempty), Array{Test.AbstractTestSet, 1}}"
82963	"Tuple{typeof(Base.lastindex), Array{Test.AbstractTestSet, 1}}"
63605	"Tuple{typeof(Base.getindex), Array{Test.AbstractTestSet, 1}, Int64}"
603654	"Tuple{typeof(Base._include_dependency), Module, String}"
243359	"Tuple{typeof(Base.include_relative), Module, String}"
25679	"Tuple{typeof(Base.include), Module, String}"
88494	"Tuple{typeof(Base.getindex), Base.IdDict{Any, Any}, Any}"
101927	"Tuple{getfield(Revise, Symbol("##27#30")), Module, String}"
276938	"Tuple{typeof(Base.vect), Type{Int64}, Vararg{DataType, N} where N}"
58074	"Tuple{Type{NamedTuple{(:allowmissing, :types, :categorical, :rows_for_type_detect), T} where T<:Tuple}, Tuple{Symbol, Array{DataType, 1}, Bool, Int64}}"
265481	"Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol}}"
172642	"Tuple{typeof(Base._compute_eltype), Type{Tuple{Symbol, Array{DataType, 1}, Bool, Int64}}}"
251654	"Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}"
43062	"Tuple{getfield(Core.Compiler, Symbol("##188#189")), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}"
41877	"Tuple{getfield(Core.Compiler, Symbol("##188#189")), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}"
100741	"Tuple{getfield(Core.Compiler, Symbol("##188#189")), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}"
114173	"Tuple{Type{Base.Val{x} where x}, Type{T} where T}"
271408	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, Core.SSAValue, Core.Compiler.Argument, Core.Compiler.Argument, Vararg{Any, N} where N}"
717038	"Tuple{typeof(Dates.character_codes), Core.SimpleVector}"
669630	"Tuple{getfield(Dates, Symbol("##s623#35")), Any, Any, Any, Any, Any, Any, Any, Any}"
72691	"Tuple{typeof(Dates.character_codes), Type{Dates.DateFormat{Symbol("yyyy-mm-dd"), Tuple{Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}}}}}"
132346	"Tuple{typeof(Base.first), Core.SimpleVector}"
157234	"Tuple{typeof(Base.push!), Array{Char, 1}, Char}"
591803	"Tuple{typeof(Base.map), typeof(Base.Unicode.lowercase), String}"
34766	"Tuple{typeof(Dates.genvar), DataType}"
71506	"Tuple{Type{Array{Symbol, 1}}, UndefInitializer, Int64}"
105481	"Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Symbol, 1}}"
45037	"Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Dates, Symbol("##36#37")), Tuple{DataType, DataType, DataType}}"
205037	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, Expr, Core.Compiler.Argument, Core.SSAValue}"
254025	"Tuple{typeof(Base.collect), Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Dates, Symbol("##36#37"))}}"
28840	"Tuple{Type{Tuple}, Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Dates, Symbol("##36#37"))}}"
77432	"Tuple{typeof(Base._array_for), Type{Int64}, Tuple{DataType, DataType, DataType}, Base.HasLength}"
619457	"Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Dates, Symbol("##36#37"))}, Int64, Int64}"
31605	"Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Dates, Symbol("##36#37"))}, Int64}"
81778	"Tuple{typeof(Base.Iterators.zip), Array{Symbol, 1}, Tuple{Int64, Int64, Int64}}"
90075	"Tuple{typeof(Base.length), Base.Iterators.Zip2{Array{Symbol, 1}, Tuple{Int64, Int64, Int64}}}"
69926	"Tuple{Type{Array{Expr, 1}}, UndefInitializer, Int64}"
96395	"Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Expr, 1}}"
166321	"Tuple{typeof(Base.Iterators.zip_iterate), Array{Symbol, 1}, Tuple{Int64, Int64, Int64}, Tuple{}, Tuple{}}"
72296	"Tuple{getfield(Base.Iterators, Symbol("#interleave#1")), Tuple{Symbol, Int64}, Tuple{Int64, Int64}}"
58469	"Tuple{typeof(Base.setindex!), Array{Expr, 1}, Expr, Int64}"
205433	"Tuple{typeof(Base.Iterators.zip_iterate), Array{Symbol, 1}, Tuple{Int64, Int64, Int64}, Tuple{Int64}, Tuple{Int64}}"
116148	"Tuple{typeof(Core.Compiler.getindex), Tuple{LineNumberNode}, Int64}"
929581	"Tuple{typeof(Base.collect), Base.Generator{Array{Type{T} where T, 1}, getfield(Dates, Symbol("##33#34"))}}"
564939	"Tuple{getfield(Dates, Symbol("##s624#32")), Any, Any, Any, Any, Any, Any}"
86124	"Tuple{typeof(Dates._directives), Type{Dates.DateFormat{Symbol("yyyy-mm-dd"), Tuple{Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}}}}}"
106272	"Tuple{typeof(Base._array_for), Type{Int64}, Array{Type{T} where T, 1}, Base.HasShape{1}}"
526223	"Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Type{T} where T, 1}, getfield(Dates, Symbol("##33#34"))}, Int64, Int64}"
29235	"Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Array{Type{T} where T, 1}, getfield(Dates, Symbol("##33#34"))}, Int64}"
278914	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}"
80988	"Tuple{getfield(Core.Compiler, Symbol("##188#189")), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}"
408099	"Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}"
313679	"Tuple{typeof(Base.merge_types), Tuple{Symbol}, Type{NamedTuple{(:append,), Tuple{Bool}}}, Type{NamedTuple{(), Tuple{}}}}"
308148	"Tuple{typeof(Base.merge_types), Tuple{Symbol}, Type{NamedTuple{(:reference,), Tuple{Array{UInt8, 1}}}}, Type{NamedTuple{(), Tuple{}}}}"
367012	"Tuple{Type{Base.Dict{Int64, Function}}}"
65581	"Tuple{getfield(CSV, Symbol("#kw##read")), NamedTuple{(:allowmissing, :types, :categorical, :rows_for_type_detect), Tuple{Symbol, Array{DataType, 1}, Bool, Int64}}, typeof(CSV.read), String}"
320000	"Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:allowmissing, :types, :categorical, :rows_for_type_detect), Tuple{Symbol, Array{DataType, 1}, Bool, Int64}}, Type{CSV.TransposedSource{I, D} where D where I}, String}"
179358	"Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:allowmissing, :types, :categorical, :rows_for_type_detect), Tuple{Symbol, Array{DataType, 1}, Bool, Int64}}, Type{CSV.Source{I, D} where D where I}, String}"
60050	"Tuple{getfield(CSV, Symbol("##read#39")), Bool, Base.Dict{Int64, Function}, Bool, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:allowmissing, :types, :categorical, :rows_for_type_detect), Tuple{Symbol, Array{DataType, 1}, Bool, Int64}}}, Function, String, Type{T} where T}"
382420	"Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}"
227161	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}"
363853	"Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}"
481975	"Tuple{getfield(CSV, Symbol("##Source#21")), UInt8, UInt8, UInt8, String, Nothing, Int64, Int64, Array{DataType, 1}, Symbol, Nothing, Nothing, UInt8, String, String, Bool, Nothing, Symbol, Int64, Int64, Int64, Bool, Type{T} where T, String}"
711506	"Tuple{typeof(Base.ascii), String}"
687803	"Tuple{typeof(Base.copyto!), Array{Char, 1}, String}"
854519	"Tuple{typeof(Base._collect), Array{Char, 1}, Base.Generator{Array{Char, 1}, Type{UInt8}}, Base.EltypeUnknown, Base.HasShape{1}}"
215309	"Tuple{getfield(CSV, Symbol("##Options#1")), UInt8, UInt8, UInt8, String, Nothing, Nothing, UInt8, String, String, Bool, Int64, Int64, Int64, Array{Type{T} where T, 1}, Type{T} where T}"
106667	"Tuple{Type{CSV.Options{D} where D}, UInt8, UInt8, UInt8, Array{UInt8, 1}, Nothing, Bool, Nothing, UInt8, Array{UInt8, 1}, Array{UInt8, 1}, Bool, Int64, Int64, Int64, Array{Type{T} where T, 1}}"
133531	"Tuple{Type{CSV.Options{Nothing}}, UInt8, UInt8, UInt8, Array{UInt8, 1}, Nothing, Bool, Nothing, UInt8, Array{UInt8, 1}, Array{UInt8, 1}, Bool, Int64, Int64, Int64, Array{Type{T} where T, 1}}"
2228545	"Tuple{typeof(Base.collect_to!), Array{String, 1}, Base.Generator{Base.OneTo{Int64}, getfield(CSV, Symbol("##24#32"))}, Int64, Int64}"
36346	"Tuple{typeof(Base.collect), Base.Generator{Base.OneTo{Int64}, getfield(CSV, Symbol("##24#32"))}}"
949729	"Tuple{typeof(Base.rstrip), String, Array{Char, 1}}"
396247	"Tuple{typeof(Base.lstrip), Base.SubString{String}, Array{Char, 1}}"
260346	"Tuple{typeof(Base.collect_to!), Array{Base.SubString{String}, 1}, Base.Generator{Array{CSV.RawField, 1}, getfield(CSV, Symbol("##25#33"))}, Int64, Int64}"
40691	"Tuple{typeof(Base.collect), Base.Generator{Array{CSV.RawField, 1}, getfield(CSV, Symbol("##25#33"))}}"
497778	"Tuple{typeof(Base.collect_to!), Array{String, 1}, Base.Generator{Array{CSV.RawField, 1}, getfield(CSV, Symbol("##26#34"))}, Int64, Int64}"
30420	"Tuple{typeof(Base.collect), Base.Generator{Array{CSV.RawField, 1}, getfield(CSV, Symbol("##26#34"))}}"
384396	"Tuple{typeof(Base.collect_to!), Array{String, 1}, Base.Generator{Array{CSV.RawField, 1}, getfield(CSV, Symbol("##27#35"))}, Int64, Int64}"
28839	"Tuple{typeof(Base.collect), Base.Generator{Array{CSV.RawField, 1}, getfield(CSV, Symbol("##27#35"))}}"
566124	"Tuple{typeof(Base.collect_to!), Array{String, 1}, Base.Generator{Base.OneTo{Int64}, getfield(CSV, Symbol("##28#36"))}, Int64, Int64}"
31605	"Tuple{typeof(Base.collect), Base.Generator{Base.OneTo{Int64}, getfield(CSV, Symbol("##28#36"))}}"
522667	"Tuple{Type{Base.Dict{WeakRefStrings.WeakRefString{UInt8}, Int64}}}"
273778	"Tuple{typeof(Base.collect_to!), Array{Base.Dict{WeakRefStrings.WeakRefString{UInt8}, Int64}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(CSV, Symbol("##29#37"))}, Int64, Int64}"
43062	"Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(CSV, Symbol("##29#37"))}}"
621037	"Tuple{typeof(Base.mapfoldl_impl), typeof(Base.identity), typeof(Base.add_sum), Int64, Base.ValueIterator{Base.Dict{WeakRefStrings.WeakRefString{UInt8}, Int64}}, Int64}"
478420	"Tuple{Type{Base.Dict{Int64, Nothing}}}"
333828	"Tuple{typeof(Base.union!), Base.Set{Int64}, Base.UnitRange{Int64}}"
852149	"Tuple{getfield(CSV, Symbol("##Source#22")), String, CSV.Options{Nothing}, Int64, Int64, Array{DataType, 1}, Symbol, Nothing, Bool, Nothing, Symbol, Int64, Int64, Int64, Bool, Type{T} where T}"
574420	"Tuple{typeof(Mmap.mmap), Base.IOStream, Type{Array{UInt8, 1}}}"
432198	"Tuple{typeof(Base.read), Base.IOStream}"
88889	"Tuple{getfield(CSV, Symbol("##23#31")){Bool}, Base.IOStream}"
61630	"Tuple{getfield(Base, Symbol("##open#304")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, getfield(CSV, Symbol("##23#31")){Bool}, String, Vararg{String, N} where N}"
707557	"Tuple{typeof(Mmap.gethandle), Base.IOStream}"
574025	"Tuple{getfield(Mmap, Symbol("##mmap#1")), Bool, Bool, Function, Base.IOStream, Type{Array{UInt8, 1}}, Tuple{Int64}, Int64}"
52543	"Tuple{typeof(Base.cconvert), Type{Ptr{Nothing}}, Ptr{Nothing}}"
71507	"Tuple{Type{UInt64}, Ptr{Nothing}}"
58469	"Tuple{typeof(Base.:(+)), UInt64, UInt64}"
52938	"Tuple{typeof(Base.convert), Type{Ptr{UInt8}}, UInt64}"
109037	"Tuple{typeof(Base.unsafe_wrap), Type{Array{T, N} where N where T}, Ptr{UInt8}, Tuple{Int64}}"
96395	"Tuple{typeof(Base.finalizer), Any, Any}"
80593	"Tuple{typeof(Base.isempty), Array{Type{T} where T, 1}}"
374914	"Tuple{typeof(CSV.countlines), Base.GenericIOBuffer{Array{UInt8, 1}}, UInt8, UInt8}"
67556	"Tuple{typeof(Base.last), Int64}"
15846728	"Tuple{typeof(CSV.readline), Base.GenericIOBuffer{Array{UInt8, 1}}, UInt8, UInt8, Base.GenericIOBuffer{Array{UInt8, 1}}}"
58865	"Tuple{typeof(CSV.skipto!), Base.GenericIOBuffer{Array{UInt8, 1}}, Int64, Int64, UInt8, UInt8}"
3617583	"Tuple{getfield(CSV, Symbol("#push_buf_to_vals!#10")){Array{CSV.RawField, 1}, Base.GenericIOBuffer{Array{UInt8, 1}}}}"
1456989	"Tuple{typeof(CSV.readsplitline!), Array{CSV.RawField, 1}, Base.GenericIOBuffer{Array{UInt8, 1}}, UInt8, UInt8, UInt8, Base.GenericIOBuffer{Array{UInt8, 1}}}"
32000	"Tuple{typeof(CSV.readsplitline!), Array{CSV.RawField, 1}, Base.GenericIOBuffer{Array{UInt8, 1}}, UInt8, UInt8, UInt8}"
65580	"Tuple{typeof(Base.:(==)), CSV.ReadSplitLineState, CSV.ReadSplitLineState}"
612741	"Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Type{T} where T, 1}, Base.IndexLinear, Array{DataType, 1}}"
35161	"Tuple{typeof(Base.convert), Type{Array{Type{T} where T, 1}}, Array{DataType, 1}}"
109433	"Tuple{typeof(Base.isempty), Array{DataType, 1}}"
111012	"Tuple{typeof(Base.axes), Array{Type{T} where T, 1}}"
131556	"Tuple{typeof(Base.similar), Type{Array{Type{T} where T, N} where N}, Tuple{Base.OneTo{Int64}}}"
120099	"Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Type{T} where T, 1}}"
92049	"Tuple{typeof(Missings.T), Type{Int64}}"
90469	"Tuple{typeof(Missings.T), Type{Float64}}"
99951	"Tuple{typeof(Missings.T), Type{String}}"
74666	"Tuple{typeof(Core.Compiler.eltype), Type{Array{Type{T} where T, 1}}}"
870322	"Tuple{typeof(Base.copyto!), Array{Type{T} where T, 1}, Int64, Array{Type{T} where T, 1}, Int64, Int64}"
833581	"Tuple{Type{Base.Dict{String, Int64}}, Base.Generator{Base.Iterators.Enumerate{Array{String, 1}}, getfield(DataStreams.Data, Symbol("##2#4"))}}"
184494	"Tuple{Type{Base.Dict{K, V} where V where K}, Base.Generator{Base.Iterators.Enumerate{Array{String, 1}}, getfield(DataStreams.Data, Symbol("##2#4"))}}"
86123	"Tuple{Type{DataStreams.Data.Schema{R, T} where T where R}, Array{Type{T} where T, 1}, Array{Base.SubString{String}, 1}, Int64, Base.Dict{Any, Any}}"
27655	"Tuple{Type{DataStreams.Data.Schema{R, T} where T where R}, Array{Type{T} where T, 1}, Array{Base.SubString{String}, 1}, Int64}"
107061	"Tuple{Type{DataStreams.Data.Schema{true, Tuple{Int64, Float64, Float64, Float64, Float64, Float64, Int64, String, String, String, Int64, String, String, String, String, String, String, String, String, String, String, Int64, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, Int64, String, String, Int64, Int64, String, Int64, Int64, String, Int64, Int64, String, Int64, String, String, String, Int64, String, String, String, String, Int64, Int64, Int64, String, String, String, String, String, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Float64, Int64, Float64, Float64, Float64, Float64, Int64, Int64, Int64, Int64, Int64, Int64}}}, Array{String, 1}, Int64, Int64, Base.Dict{Any, Any}, Base.Dict{String, Int64}}"
124839	"Tuple{Type{CSV.Source{I, D} where D where I}, DataStreams.Data.Schema{true, Tuple{Int64, Float64, Float64, Float64, Float64, Float64, Int64, String, String, String, Int64, String, String, String, String, String, String, String, String, String, String, Int64, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, Int64, String, String, Int64, Int64, String, Int64, Int64, String, Int64, Int64, String, Int64, String, String, String, Int64, String, String, String, String, Int64, Int64, Int64, String, String, String, String, String, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Float64, Int64, Float64, Float64, Float64, Float64, Int64, Int64, Int64, Int64, Int64, Int64}}, CSV.Options{Nothing}, Base.GenericIOBuffer{Array{UInt8, 1}}, String, Int64}"
181334	"Tuple{getfield(DataStreams.Data, Symbol("#kw##stream!")), NamedTuple{(:append, :transforms), Tuple{Bool, Base.Dict{Int64, Function}}}, typeof(DataStreams.Data.stream!), CSV.Source{Base.GenericIOBuffer{Array{UInt8, 1}}, Nothing}, Type{DataFrames.DataFrame}}"
641186	"Tuple{typeof(Base.ht_keyindex), Base.Dict{Int64, Function}, Int64}"
951309	"Tuple{Type{Base.Dict{Any, Nothing}}}"
758914	"Tuple{typeof(Base.:(*)), PyCall.PyObject, PyCall.PyObject}"
21334	"Tuple{typeof(Base.:(*)), String, PyCall.PyObject}"
62024	"Tuple{Type{ArgumentError}, Base.Missing}"
35556	"Tuple{Type{ArgumentError}, PyCall.PyObject}"
372939	"Tuple{typeof(Base.copyto!), Array{Any, 1}, Base.Set{Any}}"
639605	"Tuple{typeof(Base._append!), Array{Any, 1}, Base.HasShape{1}, Base.Generator{Base.Iterators.Enumerate{Array{Any, 1}}, getfield(DataStreams.Data, Symbol("##59#65")){Array{Any, 1}, Array{String, 1}}}}"
209383	"Tuple{Type{DataStreams.Data.Query{code, T, E, L, O} where O where L where E where T where code}, Array{Any, 1}, Array{String, 1}, Array{Any, 1}, Nothing, Nothing}"
82568	"Tuple{getfield(DataStreams.Data, Symbol("##stream!#108")), Bool, Base.Dict{Int64, Function}, Function, Array{Any, 1}, Array{Any, 1}, Nothing, Nothing, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(DataStreams.Data.stream!), CSV.Source{Base.GenericIOBuffer{Array{UInt8, 1}}, Nothing}, Type{DataFrames.DataFrame}}"
454321	"Tuple{typeof(Base.map), getfield(DataStreams.Data, Symbol("##7#8")), Core.SimpleVector}"
299062	"Tuple{typeof(Base.copyto!), Array{Any, 1}, Core.SimpleVector}"
35161	"Tuple{typeof(DataStreams.Data.anytypes), DataStreams.Data.Schema{true, Tuple{Int64, Float64, Float64, Float64, Float64, Float64, Int64, String, String, String, Int64, String, String, String, String, String, String, String, String, String, String, Int64, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, Int64, String, String, Int64, Int64, String, Int64, Int64, String, Int64, Int64, String, Int64, String, String, String, Int64, String, String, String, String, Int64, Int64, Int64, String, String, String, String, String, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Float64, Int64, Float64, Float64, Float64, Float64, Int64, Int64, Int64, Int64, Int64, Int64}}, Bool}"
141037	"Tuple{Type{Base.Generator{I, F} where F where I}, Type{NamedTuple{(:col,), T} where T<:Tuple}, Base.UnitRange{Int64}}"
391902	"Tuple{Type{NamedTuple{(:col,), T} where T<:Tuple}, Int64}"
107456	"Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, Type{NamedTuple{(:col,), T} where T<:Tuple}}}"
64395	"Tuple{Type{NamedTuple{(:col,), Tuple{Int64}}}, Tuple{Int64}}"
155654	"Tuple{typeof(Base._array_for), Type{NamedTuple{(:col,), Tuple{Int64}}}, Base.UnitRange{Int64}, Base.HasShape{1}}"
646322	"Tuple{typeof(Base.unsafe_copyto!), Array{NamedTuple{(:col,), Tuple{Int64}}, 1}, Int64, Array{NamedTuple{(:col,), Tuple{Int64}}, 1}, Int64, Int64}"
96000	"Tuple{typeof(Base.collect_to!), Array{NamedTuple{(:col,), Tuple{Int64}}, 1}, Base.Generator{Base.UnitRange{Int64}, Type{NamedTuple{(:col,), T} where T<:Tuple}}, Int64, Int64}"
31210	"Tuple{typeof(Base.collect_to_with_first!), Array{NamedTuple{(:col,), Tuple{Int64}}, 1}, NamedTuple{(:col,), Tuple{Int64}}, Base.Generator{Base.UnitRange{Int64}, Type{NamedTuple{(:col,), T} where T<:Tuple}}, Int64}"
132345	"Tuple{typeof(Base.iterate), Array{NamedTuple{(:col,), Tuple{Int64}}, 1}}"
175803	"Tuple{getfield(DataStreams.Data, Symbol("##54#60"))}"
13827	"Tuple{typeof(Base.get), getfield(DataStreams.Data, Symbol("##54#60")), NamedTuple{(:col,), Tuple{Int64}}, Symbol}"
102716	"Tuple{typeof(Base.get), NamedTuple{(:col,), Tuple{Int64}}, Symbol, Bool}"
89284	"Tuple{typeof(Base.get), NamedTuple{(:col,), Tuple{Int64}}, Symbol, Tuple{}}"
64001	"Tuple{typeof(Base.foreach), getfield(DataStreams.Data, Symbol("##55#61")){Base.Set{Any}, Base.Set{Any}}, Tuple{}}"
132346	"Tuple{getfield(DataStreams.Data, Symbol("##56#62"))}"
13037	"Tuple{typeof(Base.get), getfield(DataStreams.Data, Symbol("##56#62")), NamedTuple{(:col,), Tuple{Int64}}, Symbol}"
62815	"Tuple{Type{NamedTuple{(:sinkindex, :sortindex), Tuple{Int64, Nothing}}}, Tuple{Int64, Nothing}}"
41481	"Tuple{typeof(Base.keys), NamedTuple{(:col,), Tuple{Int64}}}"
104692	"Tuple{Type{Base.Generator{I, F} where F where I}, getfield(DataStreams.Data, Symbol("##57#63")), Tuple{Symbol}}"
535309	"Tuple{typeof(Base.merge), NamedTuple{(:sinkindex, :sortindex), Tuple{Int64, Nothing}}, Base.Generator{Tuple{Symbol}, getfield(DataStreams.Data, Symbol("##57#63"))}}"
66371	"Tuple{Type{NamedTuple{(:col,), T} where T<:Tuple}, Tuple{Int64}}"
207408	"Tuple{typeof(Base.merge_types), Tuple{Symbol, Symbol, Symbol}, Type{NamedTuple{(:sinkindex, :sortindex), Tuple{Int64, Nothing}}}, Type{NamedTuple{(:col,), Tuple{Int64}}}}"
88494	"Tuple{typeof(Base.merge), NamedTuple{(:sinkindex, :sortindex), Tuple{Int64, Nothing}}, NamedTuple{(:col,), Tuple{Int64}}}"
242964	"Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}"
177383	"Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:sinkindex, :sortindex, :col), Tuple{Int64, Nothing, Int64}}, Type{DataStreams.Data.QueryColumn{code, T, sourceindex, sinkindex, name, sort, args} where args where sort where name where sinkindex where sourceindex where T where code}, Int64, Array{Any, 1}, Array{String, 1}}"
604840	"Tuple{typeof(DataStreams.Data.tuplesubset), Array{Any, 1}, Nothing}"
163555	"Tuple{getfield(DataStreams.Data, Symbol("##QueryColumn#51")), Symbol, Type{T} where T, Int64, Bool, Nothing, Nothing, Nothing, Nothing, Nothing, Bool, Nothing, Bool, Bool, Nothing, Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:col,), Tuple{Int64}}}, Type{T} where T, Int64, Array{Any, 1}, Array{String, 1}}"
41087	"Tuple{getfield(Core.Compiler, Symbol("##188#189")), UInt8}"
36345	"Tuple{getfield(Core.Compiler, Symbol("##188#189")), Nothing}"
51753	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 1, 1, :ID, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
76247	"Tuple{typeof(Base.get), NamedTuple{(:col,), Tuple{Int64}}, Symbol, Int64}"
633285	"Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Nothing}, Int64}"
184494	"Tuple{typeof(Base.setindex!), Base.Dict{Any, Nothing}, Nothing, Int64}"
16987	"Tuple{typeof(Base.push!), Base.Set{Any}, Int64}"
104691	"Tuple{typeof(DataStreams.Data.aggcomputed), Type{T} where T}"
112592	"Tuple{typeof(Base.iterate), Array{NamedTuple{(:col,), Tuple{Int64}}, 1}, Int64}"
50173	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Float64, 2, 2, :RAND1, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50173	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Float64, 3, 3, :RAND2, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
61630	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Float64, 4, 4, :EXPOSURE, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
52939	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Float64, 5, 5, :LOSS20HALF, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50173	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Float64, 6, 6, :PREMIUM66, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
49778	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 7, 7, :VORSCHAEDEN_ANZAHL, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
53333	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 8, 8, :MALLORCA_POLICE, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50568	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 9, 9, :SCHUTZBRIEF_INKL, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50568	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 10, 10, :FREIE_WERKSTATTWAHL, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
51358	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 11, 11, :AUTOMOBILCLUB_MITGLIED_SEIT, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
49383	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 12, 12, :BAHNCARD, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
48988	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 13, 13, :ZAHLUNGSWEISE, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
49778	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 14, 14, :JAHRESKARTE_OEPNV, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
49383	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 15, 15, :MOTORRAD_BESITZER, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
52543	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 16, 16, :AUTOMOBILCLUB, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
49778	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 17, 17, :SFKLASSE_VOLLKASKO, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50963	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 18, 18, :SFKLASSE_HAFTPFLICHT, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
49777	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 19, 19, :STELLPLATZ_ABSCHLIESSBAR, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50173	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 20, 20, :NAECHTLICHER_STELLPLATZ, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
49777	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 21, 21, :NUTZUNGSWEISE, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
57679	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 22, 22, :JAEHRLICHE_FAHRLEISTUNG, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
71506	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 23, 23, :TSN, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
80198	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 24, 24, :ERSTZULASSUNG, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
77432	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 25, 25, :HSN, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
61235	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 26, 26, :FINANZIERUNGSART, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
52939	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 27, 27, :ZULASSUNG_AUF_VERSICHERUNGSNEHM, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50568	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 28, 28, :STADT, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50963	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 29, 29, :KENNZEICHEN, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50173	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 30, 30, :PLZ_DES_HALTER, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50173	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 31, 31, :SELBSTGENUTZTES_WOHNEIGENTUM, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
49778	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 32, 32, :ART_DES_WOHNEIGENTUM, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
53333	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 33, 33, :GEBURTSDATUM, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50963	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 34, 34, :FAMILIENSTAND, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
49382	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 35, 35, :NATIONALITAET, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
51358	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 36, 36, :PLZ_WOHNORT, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50568	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 37, 37, :GESCHLECHT, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
48988	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 38, 38, :FUEHRERSCHEIN_ERWORBEN_AM, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
48988	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 39, 39, :VORSCHAEDEN0_typeKH, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
49778	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 40, 40, :VORSCHAEDEN0_typetk, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
52543	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 41, 41, :VORSCHAEDEN0_month, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
48988	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 42, 42, :VORSCHAEDEN0_year, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
49778	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 43, 43, :VORSCHAEDEN1_typetk, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
53728	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 44, 44, :VORSCHAEDEN1_month, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50173	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 45, 45, :VORSCHAEDEN1_year, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
49383	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 46, 46, :VORSCHAEDEN2_typevk, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
48987	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 47, 47, :VORSCHAEDEN2_month, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
49383	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 48, 48, :VORSCHAEDEN2_year, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
52544	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 49, 49, :scrapedate, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
48988	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 50, 50, :adacid, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
48988	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 51, 51, :name, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
56889	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 52, 52, :marke, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
71111	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 53, 53, :modell, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
65185	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 54, 54, :preis, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
52938	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 55, 55, :getriebeart, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50963	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 56, 56, :antriebsart, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
62815	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 57, 57, :Fahrzeugklasse, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
88889	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 58, 58, :co2klasse, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
59655	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 59, 59, :kw, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50963	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 60, 60, :ps, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50568	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 61, 61, :tueranzahl, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
54519	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 62, 62, :Motorart, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
51358	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 63, 63, :Kraftstoffart, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
51358	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 64, 64, :Motorbauart, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50173	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 65, 65, :Schadstoffklasse, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
46617	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, String, 66, 66, :Karosserie, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50963	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 67, 67, :Sitzanzahl, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
49778	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 68, 68, :typklasseh_num, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
54914	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 69, 69, :typklassetk_num, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
52148	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 70, 70, :typklassevk_num, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
51753	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 71, 71, :hubraum2, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
52149	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 72, 72, :drehmoment2, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
52939	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 73, 73, :breite2, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
53729	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 74, 74, :radstand2, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50568	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 75, 75, :laenge2, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
49778	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 76, 76, :hoehe2, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
64790	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 77, 77, :leergewicht2, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
49778	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 78, 78, :gesamtgewicht2, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
49778	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 79, 79, :zuladung2, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
48988	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Float64, 80, 80, :kofferraumvolumen_num, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
50568	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 81, 81, :hoechstgeschwindigkeit2, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
48592	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Float64, 82, 82, :verbrauchgesamt2, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
63605	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Float64, 83, 83, :verbrauchausserorts2, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
72692	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Float64, 84, 84, :verbrauchinnerorts2, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
60444	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Float64, 85, 85, :beschleunigung2, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
52939	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 86, 86, :tank2, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
54123	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 87, 87, :kfzsteuer2, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
64790	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 88, 88, :anzahlgaenge2, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
70716	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 89, 89, :anzahlzylinder2, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
61630	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 90, 90, :co2_wert, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
52544	"Tuple{Type{DataStreams.Data.QueryColumn{0x01, Int64, 91, 91, :modellstart_y, nothing, ()}}, Nothing, Nothing, Nothing, Nothing}"
53729	"Tuple{typeof(Base.:(|)), UInt8, UInt8}"
46617	"Tuple{Type{DataStreams.Data.Query{0x01, Tuple{DataStreams.Data.QueryColumn{0x01, Int64, 1, 1, :ID, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 2, 2, :RAND1, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 3, 3, :RAND2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 4, 4, :EXPOSURE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 5, 5, :LOSS20HALF, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 6, 6, :PREMIUM66, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 7, 7, :VORSCHAEDEN_ANZAHL, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 8, 8, :MALLORCA_POLICE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 9, 9, :SCHUTZBRIEF_INKL, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 10, 10, :FREIE_WERKSTATTWAHL, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 11, 11, :AUTOMOBILCLUB_MITGLIED_SEIT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 12, 12, :BAHNCARD, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 13, 13, :ZAHLUNGSWEISE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 14, 14, :JAHRESKARTE_OEPNV, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 15, 15, :MOTORRAD_BESITZER, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 16, 16, :AUTOMOBILCLUB, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 17, 17, :SFKLASSE_VOLLKASKO, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 18, 18, :SFKLASSE_HAFTPFLICHT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 19, 19, :STELLPLATZ_ABSCHLIESSBAR, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 20, 20, :NAECHTLICHER_STELLPLATZ, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 21, 21, :NUTZUNGSWEISE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 22, 22, :JAEHRLICHE_FAHRLEISTUNG, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 23, 23, :TSN, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 24, 24, :ERSTZULASSUNG, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 25, 25, :HSN, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 26, 26, :FINANZIERUNGSART, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 27, 27, :ZULASSUNG_AUF_VERSICHERUNGSNEHM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 28, 28, :STADT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 29, 29, :KENNZEICHEN, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 30, 30, :PLZ_DES_HALTER, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 31, 31, :SELBSTGENUTZTES_WOHNEIGENTUM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 32, 32, :ART_DES_WOHNEIGENTUM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 33, 33, :GEBURTSDATUM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 34, 34, :FAMILIENSTAND, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 35, 35, :NATIONALITAET, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 36, 36, :PLZ_WOHNORT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 37, 37, :GESCHLECHT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 38, 38, :FUEHRERSCHEIN_ERWORBEN_AM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 39, 39, :VORSCHAEDEN0_typeKH, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 40, 40, :VORSCHAEDEN0_typetk, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 41, 41, :VORSCHAEDEN0_month, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 42, 42, :VORSCHAEDEN0_year, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 43, 43, :VORSCHAEDEN1_typetk, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 44, 44, :VORSCHAEDEN1_month, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 45, 45, :VORSCHAEDEN1_year, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 46, 46, :VORSCHAEDEN2_typevk, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 47, 47, :VORSCHAEDEN2_month, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 48, 48, :VORSCHAEDEN2_year, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 49, 49, :scrapedate, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 50, 50, :adacid, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 51, 51, :name, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 52, 52, :marke, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 53, 53, :modell, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 54, 54, :preis, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 55, 55, :getriebeart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 56, 56, :antriebsart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 57, 57, :Fahrzeugklasse, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 58, 58, :co2klasse, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 59, 59, :kw, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 60, 60, :ps, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 61, 61, :tueranzahl, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 62, 62, :Motorart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 63, 63, :Kraftstoffart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 64, 64, :Motorbauart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 65, 65, :Schadstoffklasse, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 66, 66, :Karosserie, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 67, 67, :Sitzanzahl, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 68, 68, :typklasseh_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 69, 69, :typklassetk_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 70, 70, :typklassevk_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 71, 71, :hubraum2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 72, 72, :drehmoment2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 73, 73, :breite2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 74, 74, :radstand2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 75, 75, :laenge2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 76, 76, :hoehe2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 77, 77, :leergewicht2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 78, 78, :gesamtgewicht2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 79, 79, :zuladung2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 80, 80, :kofferraumvolumen_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 81, 81, :hoechstgeschwindigkeit2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 82, 82, :verbrauchgesamt2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 83, 83, :verbrauchausserorts2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 84, 84, :verbrauchinnerorts2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 85, 85, :beschleunigung2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 86, 86, :tank2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 87, 87, :kfzsteuer2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 88, 88, :anzahlgaenge2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 89, 89, :anzahlzylinder2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 90, 90, :co2_wert, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 91, 91, :modellstart_y, nothing, ()}}, (), nothing, nothing}}, Tuple{DataStreams.Data.QueryColumn{0x01, Int64, 1, 1, :ID, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 2, 2, :RAND1, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 3, 3, :RAND2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 4, 4, :EXPOSURE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 5, 5, :LOSS20HALF, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 6, 6, :PREMIUM66, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 7, 7, :VORSCHAEDEN_ANZAHL, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 8, 8, :MALLORCA_POLICE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 9, 9, :SCHUTZBRIEF_INKL, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 10, 10, :FREIE_WERKSTATTWAHL, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 11, 11, :AUTOMOBILCLUB_MITGLIED_SEIT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 12, 12, :BAHNCARD, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 13, 13, :ZAHLUNGSWEISE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 14, 14, :JAHRESKARTE_OEPNV, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 15, 15, :MOTORRAD_BESITZER, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 16, 16, :AUTOMOBILCLUB, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 17, 17, :SFKLASSE_VOLLKASKO, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 18, 18, :SFKLASSE_HAFTPFLICHT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 19, 19, :STELLPLATZ_ABSCHLIESSBAR, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 20, 20, :NAECHTLICHER_STELLPLATZ, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 21, 21, :NUTZUNGSWEISE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 22, 22, :JAEHRLICHE_FAHRLEISTUNG, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 23, 23, :TSN, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 24, 24, :ERSTZULASSUNG, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 25, 25, :HSN, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 26, 26, :FINANZIERUNGSART, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 27, 27, :ZULASSUNG_AUF_VERSICHERUNGSNEHM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 28, 28, :STADT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 29, 29, :KENNZEICHEN, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 30, 30, :PLZ_DES_HALTER, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 31, 31, :SELBSTGENUTZTES_WOHNEIGENTUM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 32, 32, :ART_DES_WOHNEIGENTUM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 33, 33, :GEBURTSDATUM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 34, 34, :FAMILIENSTAND, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 35, 35, :NATIONALITAET, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 36, 36, :PLZ_WOHNORT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 37, 37, :GESCHLECHT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 38, 38, :FUEHRERSCHEIN_ERWORBEN_AM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 39, 39, :VORSCHAEDEN0_typeKH, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 40, 40, :VORSCHAEDEN0_typetk, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 41, 41, :VORSCHAEDEN0_month, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 42, 42, :VORSCHAEDEN0_year, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 43, 43, :VORSCHAEDEN1_typetk, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 44, 44, :VORSCHAEDEN1_month, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 45, 45, :VORSCHAEDEN1_year, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 46, 46, :VORSCHAEDEN2_typevk, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 47, 47, :VORSCHAEDEN2_month, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 48, 48, :VORSCHAEDEN2_year, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 49, 49, :scrapedate, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 50, 50, :adacid, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 51, 51, :name, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 52, 52, :marke, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 53, 53, :modell, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 54, 54, :preis, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 55, 55, :getriebeart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 56, 56, :antriebsart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 57, 57, :Fahrzeugklasse, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 58, 58, :co2klasse, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 59, 59, :kw, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 60, 60, :ps, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 61, 61, :tueranzahl, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 62, 62, :Motorart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 63, 63, :Kraftstoffart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 64, 64, :Motorbauart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 65, 65, :Schadstoffklasse, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 66, 66, :Karosserie, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 67, 67, :Sitzanzahl, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 68, 68, :typklasseh_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 69, 69, :typklassetk_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 70, 70, :typklassevk_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 71, 71, :hubraum2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 72, 72, :drehmoment2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 73, 73, :breite2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 74, 74, :radstand2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 75, 75, :laenge2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 76, 76, :hoehe2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 77, 77, :leergewicht2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 78, 78, :gesamtgewicht2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 79, 79, :zuladung2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 80, 80, :kofferraumvolumen_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 81, 81, :hoechstgeschwindigkeit2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 82, 82, :verbrauchgesamt2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 83, 83, :verbrauchausserorts2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 84, 84, :verbrauchinnerorts2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 85, 85, :beschleunigung2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 86, 86, :tank2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 87, 87, :kfzsteuer2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 88, 88, :anzahlgaenge2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 89, 89, :anzahlzylinder2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 90, 90, :co2_wert, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 91, 91, :modellstart_y, nothing, ()}}}"
108247	"Tuple{getfield(DataStreams.Data, Symbol("#kw##stream!")), NamedTuple{(:append,), Tuple{Bool}}, typeof(DataStreams.Data.stream!), CSV.Source{Base.GenericIOBuffer{Array{UInt8, 1}}, Nothing}, DataStreams.Data.Query{0x01, Tuple{DataStreams.Data.QueryColumn{0x01, Int64, 1, 1, :ID, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 2, 2, :RAND1, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 3, 3, :RAND2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 4, 4, :EXPOSURE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 5, 5, :LOSS20HALF, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 6, 6, :PREMIUM66, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 7, 7, :VORSCHAEDEN_ANZAHL, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 8, 8, :MALLORCA_POLICE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 9, 9, :SCHUTZBRIEF_INKL, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 10, 10, :FREIE_WERKSTATTWAHL, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 11, 11, :AUTOMOBILCLUB_MITGLIED_SEIT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 12, 12, :BAHNCARD, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 13, 13, :ZAHLUNGSWEISE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 14, 14, :JAHRESKARTE_OEPNV, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 15, 15, :MOTORRAD_BESITZER, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 16, 16, :AUTOMOBILCLUB, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 17, 17, :SFKLASSE_VOLLKASKO, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 18, 18, :SFKLASSE_HAFTPFLICHT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 19, 19, :STELLPLATZ_ABSCHLIESSBAR, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 20, 20, :NAECHTLICHER_STELLPLATZ, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 21, 21, :NUTZUNGSWEISE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 22, 22, :JAEHRLICHE_FAHRLEISTUNG, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 23, 23, :TSN, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 24, 24, :ERSTZULASSUNG, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 25, 25, :HSN, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 26, 26, :FINANZIERUNGSART, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 27, 27, :ZULASSUNG_AUF_VERSICHERUNGSNEHM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 28, 28, :STADT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 29, 29, :KENNZEICHEN, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 30, 30, :PLZ_DES_HALTER, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 31, 31, :SELBSTGENUTZTES_WOHNEIGENTUM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 32, 32, :ART_DES_WOHNEIGENTUM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 33, 33, :GEBURTSDATUM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 34, 34, :FAMILIENSTAND, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 35, 35, :NATIONALITAET, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 36, 36, :PLZ_WOHNORT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 37, 37, :GESCHLECHT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 38, 38, :FUEHRERSCHEIN_ERWORBEN_AM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 39, 39, :VORSCHAEDEN0_typeKH, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 40, 40, :VORSCHAEDEN0_typetk, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 41, 41, :VORSCHAEDEN0_month, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 42, 42, :VORSCHAEDEN0_year, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 43, 43, :VORSCHAEDEN1_typetk, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 44, 44, :VORSCHAEDEN1_month, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 45, 45, :VORSCHAEDEN1_year, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 46, 46, :VORSCHAEDEN2_typevk, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 47, 47, :VORSCHAEDEN2_month, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 48, 48, :VORSCHAEDEN2_year, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 49, 49, :scrapedate, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 50, 50, :adacid, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 51, 51, :name, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 52, 52, :marke, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 53, 53, :modell, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 54, 54, :preis, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 55, 55, :getriebeart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 56, 56, :antriebsart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 57, 57, :Fahrzeugklasse, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 58, 58, :co2klasse, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 59, 59, :kw, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 60, 60, :ps, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 61, 61, :tueranzahl, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 62, 62, :Motorart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 63, 63, :Kraftstoffart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 64, 64, :Motorbauart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 65, 65, :Schadstoffklasse, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 66, 66, :Karosserie, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 67, 67, :Sitzanzahl, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 68, 68, :typklasseh_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 69, 69, :typklassetk_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 70, 70, :typklassevk_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 71, 71, :hubraum2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 72, 72, :drehmoment2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 73, 73, :breite2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 74, 74, :radstand2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 75, 75, :laenge2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 76, 76, :hoehe2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 77, 77, :leergewicht2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 78, 78, :gesamtgewicht2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 79, 79, :zuladung2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 80, 80, :kofferraumvolumen_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 81, 81, :hoechstgeschwindigkeit2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 82, 82, :verbrauchgesamt2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 83, 83, :verbrauchausserorts2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 84, 84, :verbrauchinnerorts2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 85, 85, :beschleunigung2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 86, 86, :tank2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 87, 87, :kfzsteuer2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 88, 88, :anzahlgaenge2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 89, 89, :anzahlzylinder2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 90, 90, :co2_wert, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 91, 91, :modellstart_y, nothing, ()}}, (), nothing, nothing}, Type{DataFrames.DataFrame}}"
533333	"Tuple{typeof(Base.vect), Type{DataStreams.Data.Row}}"
336198	"Tuple{typeof(Base.vect), Type{DataStreams.Data.Field}}"
621828	"Tuple{typeof(Base.iterate), Base.Iterators.Filter{typeof(DataStreams.Data.selected), Core.SimpleVector}}"
69926	"Tuple{typeof(Base.grow_to!), Array{Any, 1}, Base.Generator{Base.Iterators.Filter{typeof(DataStreams.Data.selected), Core.SimpleVector}, getfield(DataStreams.Data, Symbol("##68#70")){Bool}}}"
132346	"Tuple{typeof(Base.grow_to!), Array{Any, 1}, Base.Generator{Base.Iterators.Filter{typeof(DataStreams.Data.selected), Core.SimpleVector}, getfield(DataStreams.Data, Symbol("##69#71"))}}"
151703	"Tuple{typeof(Base.min), Nothing, Int64}"
126420	"Tuple{typeof(DataStreams.Data.schema), CSV.Source{Base.GenericIOBuffer{Array{UInt8, 1}}, Nothing}, DataStreams.Data.Query{0x01, Tuple{DataStreams.Data.QueryColumn{0x01, Int64, 1, 1, :ID, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 2, 2, :RAND1, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 3, 3, :RAND2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 4, 4, :EXPOSURE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 5, 5, :LOSS20HALF, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 6, 6, :PREMIUM66, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 7, 7, :VORSCHAEDEN_ANZAHL, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 8, 8, :MALLORCA_POLICE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 9, 9, :SCHUTZBRIEF_INKL, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 10, 10, :FREIE_WERKSTATTWAHL, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 11, 11, :AUTOMOBILCLUB_MITGLIED_SEIT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 12, 12, :BAHNCARD, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 13, 13, :ZAHLUNGSWEISE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 14, 14, :JAHRESKARTE_OEPNV, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 15, 15, :MOTORRAD_BESITZER, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 16, 16, :AUTOMOBILCLUB, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 17, 17, :SFKLASSE_VOLLKASKO, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 18, 18, :SFKLASSE_HAFTPFLICHT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 19, 19, :STELLPLATZ_ABSCHLIESSBAR, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 20, 20, :NAECHTLICHER_STELLPLATZ, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 21, 21, :NUTZUNGSWEISE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 22, 22, :JAEHRLICHE_FAHRLEISTUNG, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 23, 23, :TSN, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 24, 24, :ERSTZULASSUNG, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 25, 25, :HSN, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 26, 26, :FINANZIERUNGSART, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 27, 27, :ZULASSUNG_AUF_VERSICHERUNGSNEHM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 28, 28, :STADT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 29, 29, :KENNZEICHEN, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 30, 30, :PLZ_DES_HALTER, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 31, 31, :SELBSTGENUTZTES_WOHNEIGENTUM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 32, 32, :ART_DES_WOHNEIGENTUM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 33, 33, :GEBURTSDATUM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 34, 34, :FAMILIENSTAND, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 35, 35, :NATIONALITAET, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 36, 36, :PLZ_WOHNORT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 37, 37, :GESCHLECHT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 38, 38, :FUEHRERSCHEIN_ERWORBEN_AM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 39, 39, :VORSCHAEDEN0_typeKH, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 40, 40, :VORSCHAEDEN0_typetk, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 41, 41, :VORSCHAEDEN0_month, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 42, 42, :VORSCHAEDEN0_year, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 43, 43, :VORSCHAEDEN1_typetk, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 44, 44, :VORSCHAEDEN1_month, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 45, 45, :VORSCHAEDEN1_year, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 46, 46, :VORSCHAEDEN2_typevk, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 47, 47, :VORSCHAEDEN2_month, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 48, 48, :VORSCHAEDEN2_year, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 49, 49, :scrapedate, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 50, 50, :adacid, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 51, 51, :name, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 52, 52, :marke, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 53, 53, :modell, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 54, 54, :preis, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 55, 55, :getriebeart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 56, 56, :antriebsart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 57, 57, :Fahrzeugklasse, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 58, 58, :co2klasse, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 59, 59, :kw, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 60, 60, :ps, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 61, 61, :tueranzahl, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 62, 62, :Motorart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 63, 63, :Kraftstoffart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 64, 64, :Motorbauart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 65, 65, :Schadstoffklasse, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 66, 66, :Karosserie, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 67, 67, :Sitzanzahl, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 68, 68, :typklasseh_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 69, 69, :typklassetk_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 70, 70, :typklassevk_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 71, 71, :hubraum2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 72, 72, :drehmoment2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 73, 73, :breite2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 74, 74, :radstand2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 75, 75, :laenge2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 76, 76, :hoehe2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 77, 77, :leergewicht2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 78, 78, :gesamtgewicht2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 79, 79, :zuladung2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 80, 80, :kofferraumvolumen_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 81, 81, :hoechstgeschwindigkeit2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 82, 82, :verbrauchgesamt2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 83, 83, :verbrauchausserorts2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 84, 84, :verbrauchinnerorts2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 85, 85, :beschleunigung2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 86, 86, :tank2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 87, 87, :kfzsteuer2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 88, 88, :anzahlgaenge2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 89, 89, :anzahlzylinder2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 90, 90, :co2_wert, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 91, 91, :modellstart_y, nothing, ()}}, (), nothing, nothing}, Bool}"
826470	"Tuple{getfield(DataStreams.Data, Symbol("##stream!#110")), Bool, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, CSV.Source{Base.GenericIOBuffer{Array{UInt8, 1}}, Nothing}, DataStreams.Data.Query{0x01, Tuple{DataStreams.Data.QueryColumn{0x01, Int64, 1, 1, :ID, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 2, 2, :RAND1, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 3, 3, :RAND2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 4, 4, :EXPOSURE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 5, 5, :LOSS20HALF, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 6, 6, :PREMIUM66, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 7, 7, :VORSCHAEDEN_ANZAHL, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 8, 8, :MALLORCA_POLICE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 9, 9, :SCHUTZBRIEF_INKL, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 10, 10, :FREIE_WERKSTATTWAHL, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 11, 11, :AUTOMOBILCLUB_MITGLIED_SEIT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 12, 12, :BAHNCARD, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 13, 13, :ZAHLUNGSWEISE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 14, 14, :JAHRESKARTE_OEPNV, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 15, 15, :MOTORRAD_BESITZER, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 16, 16, :AUTOMOBILCLUB, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 17, 17, :SFKLASSE_VOLLKASKO, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 18, 18, :SFKLASSE_HAFTPFLICHT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 19, 19, :STELLPLATZ_ABSCHLIESSBAR, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 20, 20, :NAECHTLICHER_STELLPLATZ, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 21, 21, :NUTZUNGSWEISE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 22, 22, :JAEHRLICHE_FAHRLEISTUNG, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 23, 23, :TSN, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 24, 24, :ERSTZULASSUNG, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 25, 25, :HSN, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 26, 26, :FINANZIERUNGSART, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 27, 27, :ZULASSUNG_AUF_VERSICHERUNGSNEHM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 28, 28, :STADT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 29, 29, :KENNZEICHEN, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 30, 30, :PLZ_DES_HALTER, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 31, 31, :SELBSTGENUTZTES_WOHNEIGENTUM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 32, 32, :ART_DES_WOHNEIGENTUM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 33, 33, :GEBURTSDATUM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 34, 34, :FAMILIENSTAND, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 35, 35, :NATIONALITAET, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 36, 36, :PLZ_WOHNORT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 37, 37, :GESCHLECHT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 38, 38, :FUEHRERSCHEIN_ERWORBEN_AM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 39, 39, :VORSCHAEDEN0_typeKH, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 40, 40, :VORSCHAEDEN0_typetk, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 41, 41, :VORSCHAEDEN0_month, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 42, 42, :VORSCHAEDEN0_year, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 43, 43, :VORSCHAEDEN1_typetk, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 44, 44, :VORSCHAEDEN1_month, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 45, 45, :VORSCHAEDEN1_year, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 46, 46, :VORSCHAEDEN2_typevk, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 47, 47, :VORSCHAEDEN2_month, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 48, 48, :VORSCHAEDEN2_year, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 49, 49, :scrapedate, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 50, 50, :adacid, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 51, 51, :name, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 52, 52, :marke, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 53, 53, :modell, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 54, 54, :preis, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 55, 55, :getriebeart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 56, 56, :antriebsart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 57, 57, :Fahrzeugklasse, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 58, 58, :co2klasse, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 59, 59, :kw, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 60, 60, :ps, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 61, 61, :tueranzahl, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 62, 62, :Motorart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 63, 63, :Kraftstoffart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 64, 64, :Motorbauart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 65, 65, :Schadstoffklasse, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 66, 66, :Karosserie, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 67, 67, :Sitzanzahl, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 68, 68, :typklasseh_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 69, 69, :typklassetk_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 70, 70, :typklassevk_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 71, 71, :hubraum2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 72, 72, :drehmoment2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 73, 73, :breite2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 74, 74, :radstand2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 75, 75, :laenge2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 76, 76, :hoehe2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 77, 77, :leergewicht2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 78, 78, :gesamtgewicht2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 79, 79, :zuladung2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 80, 80, :kofferraumvolumen_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 81, 81, :hoechstgeschwindigkeit2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 82, 82, :verbrauchgesamt2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 83, 83, :verbrauchausserorts2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 84, 84, :verbrauchinnerorts2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 85, 85, :beschleunigung2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 86, 86, :tank2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 87, 87, :kfzsteuer2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 88, 88, :anzahlgaenge2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 89, 89, :anzahlzylinder2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 90, 90, :co2_wert, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 91, 91, :modellstart_y, nothing, ()}}, (), nothing, nothing}, Type{DataFrames.DataFrame}}"
262321	"Tuple{typeof(Base.vect), Type{DataStreams.Data.Column}, Vararg{DataType, N} where N}"
108247	"Tuple{typeof(DataStreams.Data.selected), Type{T} where T}"
60445	"Tuple{getfield(DataStreams.Data, Symbol("##68#70")){Bool}, Type{T} where T}"
39902	"Tuple{typeof(DataStreams.Data.unwk), Type{T} where T, Bool}"
53333	"Tuple{typeof(Base.empty), Array{Any, 1}, Type{DataType}}"
140642	"Tuple{typeof(Base.push!), Array{DataType, 1}, Type{T} where T}"
419161	"Tuple{typeof(Base.iterate), Base.Iterators.Filter{typeof(DataStreams.Data.selected), Core.SimpleVector}, Int64}"
218074	"Tuple{typeof(Base.grow_to!), Array{DataType, 1}, Base.Generator{Base.Iterators.Filter{typeof(DataStreams.Data.selected), Core.SimpleVector}, getfield(DataStreams.Data, Symbol("##68#70")){Bool}}, Int64}"
47407	"Tuple{getfield(DataStreams.Data, Symbol("##69#71")), Type{T} where T}"
33185	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 1, 1, :ID, nothing, ()}}}"
57284	"Tuple{typeof(Base.empty), Array{Any, 1}, Type{String}}"
360297	"Tuple{typeof(Base.grow_to!), Array{String, 1}, Base.Generator{Base.Iterators.Filter{typeof(DataStreams.Data.selected), Core.SimpleVector}, getfield(DataStreams.Data, Symbol("##69#71"))}, Int64}"
45037	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Float64, 2, 2, :RAND1, nothing, ()}}}"
33580	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Float64, 3, 3, :RAND2, nothing, ()}}}"
32000	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Float64, 4, 4, :EXPOSURE, nothing, ()}}}"
33975	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Float64, 5, 5, :LOSS20HALF, nothing, ()}}}"
33580	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Float64, 6, 6, :PREMIUM66, nothing, ()}}}"
32790	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 7, 7, :VORSCHAEDEN_ANZAHL, nothing, ()}}}"
33185	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 8, 8, :MALLORCA_POLICE, nothing, ()}}}"
30815	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 9, 9, :SCHUTZBRIEF_INKL, nothing, ()}}}"
30815	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 10, 10, :FREIE_WERKSTATTWAHL, nothing, ()}}}"
32000	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 11, 11, :AUTOMOBILCLUB_MITGLIED_SEIT, nothing, ()}}}"
31210	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 12, 12, :BAHNCARD, nothing, ()}}}"
31605	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 13, 13, :ZAHLUNGSWEISE, nothing, ()}}}"
31210	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 14, 14, :JAHRESKARTE_OEPNV, nothing, ()}}}"
32395	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 15, 15, :MOTORRAD_BESITZER, nothing, ()}}}"
30420	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 16, 16, :AUTOMOBILCLUB, nothing, ()}}}"
30815	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 17, 17, :SFKLASSE_VOLLKASKO, nothing, ()}}}"
31210	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 18, 18, :SFKLASSE_HAFTPFLICHT, nothing, ()}}}"
30815	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 19, 19, :STELLPLATZ_ABSCHLIESSBAR, nothing, ()}}}"
31605	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 20, 20, :NAECHTLICHER_STELLPLATZ, nothing, ()}}}"
30815	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 21, 21, :NUTZUNGSWEISE, nothing, ()}}}"
30025	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 22, 22, :JAEHRLICHE_FAHRLEISTUNG, nothing, ()}}}"
30815	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 23, 23, :TSN, nothing, ()}}}"
30024	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 24, 24, :ERSTZULASSUNG, nothing, ()}}}"
30025	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 25, 25, :HSN, nothing, ()}}}"
31210	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 26, 26, :FINANZIERUNGSART, nothing, ()}}}"
30419	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 27, 27, :ZULASSUNG_AUF_VERSICHERUNGSNEHM, nothing, ()}}}"
35161	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 28, 28, :STADT, nothing, ()}}}"
32395	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 29, 29, :KENNZEICHEN, nothing, ()}}}"
33580	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 30, 30, :PLZ_DES_HALTER, nothing, ()}}}"
32395	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 31, 31, :SELBSTGENUTZTES_WOHNEIGENTUM, nothing, ()}}}"
31210	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 32, 32, :ART_DES_WOHNEIGENTUM, nothing, ()}}}"
30419	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 33, 33, :GEBURTSDATUM, nothing, ()}}}"
30420	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 34, 34, :FAMILIENSTAND, nothing, ()}}}"
31210	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 35, 35, :NATIONALITAET, nothing, ()}}}"
32000	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 36, 36, :PLZ_WOHNORT, nothing, ()}}}"
31210	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 37, 37, :GESCHLECHT, nothing, ()}}}"
30025	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 38, 38, :FUEHRERSCHEIN_ERWORBEN_AM, nothing, ()}}}"
30025	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 39, 39, :VORSCHAEDEN0_typeKH, nothing, ()}}}"
30815	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 40, 40, :VORSCHAEDEN0_typetk, nothing, ()}}}"
31210	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 41, 41, :VORSCHAEDEN0_month, nothing, ()}}}"
30420	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 42, 42, :VORSCHAEDEN0_year, nothing, ()}}}"
31605	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 43, 43, :VORSCHAEDEN1_typetk, nothing, ()}}}"
31210	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 44, 44, :VORSCHAEDEN1_month, nothing, ()}}}"
30815	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 45, 45, :VORSCHAEDEN1_year, nothing, ()}}}"
30815	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 46, 46, :VORSCHAEDEN2_typevk, nothing, ()}}}"
32790	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 47, 47, :VORSCHAEDEN2_month, nothing, ()}}}"
34766	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 48, 48, :VORSCHAEDEN2_year, nothing, ()}}}"
33580	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 49, 49, :scrapedate, nothing, ()}}}"
32790	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 50, 50, :adacid, nothing, ()}}}"
30025	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 51, 51, :name, nothing, ()}}}"
30815	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 52, 52, :marke, nothing, ()}}}"
30419	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 53, 53, :modell, nothing, ()}}}"
30815	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 54, 54, :preis, nothing, ()}}}"
31210	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 55, 55, :getriebeart, nothing, ()}}}"
31210	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 56, 56, :antriebsart, nothing, ()}}}"
30025	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 57, 57, :Fahrzeugklasse, nothing, ()}}}"
30815	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 58, 58, :co2klasse, nothing, ()}}}"
30420	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 59, 59, :kw, nothing, ()}}}"
30420	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 60, 60, :ps, nothing, ()}}}"
31210	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 61, 61, :tueranzahl, nothing, ()}}}"
30025	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 62, 62, :Motorart, nothing, ()}}}"
30814	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 63, 63, :Kraftstoffart, nothing, ()}}}"
30024	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 64, 64, :Motorbauart, nothing, ()}}}"
29630	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 65, 65, :Schadstoffklasse, nothing, ()}}}"
30025	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, String, 66, 66, :Karosserie, nothing, ()}}}"
35161	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 67, 67, :Sitzanzahl, nothing, ()}}}"
32790	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 68, 68, :typklasseh_num, nothing, ()}}}"
33185	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 69, 69, :typklassetk_num, nothing, ()}}}"
32790	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 70, 70, :typklassevk_num, nothing, ()}}}"
30420	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 71, 71, :hubraum2, nothing, ()}}}"
31210	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 72, 72, :drehmoment2, nothing, ()}}}"
30420	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 73, 73, :breite2, nothing, ()}}}"
30024	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 74, 74, :radstand2, nothing, ()}}}"
30815	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 75, 75, :laenge2, nothing, ()}}}"
30025	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 76, 76, :hoehe2, nothing, ()}}}"
31210	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 77, 77, :leergewicht2, nothing, ()}}}"
31210	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 78, 78, :gesamtgewicht2, nothing, ()}}}"
30815	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 79, 79, :zuladung2, nothing, ()}}}"
30419	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Float64, 80, 80, :kofferraumvolumen_num, nothing, ()}}}"
30025	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 81, 81, :hoechstgeschwindigkeit2, nothing, ()}}}"
31210	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Float64, 82, 82, :verbrauchgesamt2, nothing, ()}}}"
30025	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Float64, 83, 83, :verbrauchausserorts2, nothing, ()}}}"
30024	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Float64, 84, 84, :verbrauchinnerorts2, nothing, ()}}}"
30815	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Float64, 85, 85, :beschleunigung2, nothing, ()}}}"
30420	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 86, 86, :tank2, nothing, ()}}}"
36741	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 87, 87, :kfzsteuer2, nothing, ()}}}"
32395	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 88, 88, :anzahlgaenge2, nothing, ()}}}"
32790	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 89, 89, :anzahlzylinder2, nothing, ()}}}"
32790	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 90, 90, :co2_wert, nothing, ()}}}"
33580	"Tuple{typeof(DataStreams.Data.name), Type{DataStreams.Data.QueryColumn{0x01, Int64, 91, 91, :modellstart_y, nothing, ()}}}"
342519	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
248889	"Tuple{Type{DataStreams.Data.Schema{R, T} where T where R}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}, Int64, Base.Dict{Any, Any}}"
133531	"Tuple{Type{DataStreams.Data.Schema{R, T} where T where R}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}, Int64}"
80593	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
63210	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
61630	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
63210	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
59260	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
59259	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58469	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58470	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
64395	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
72691	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58470	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
60049	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58469	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57679	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
64395	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
62025	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
56889	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58470	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
56494	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58074	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
62024	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
55704	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57679	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58864	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
59259	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57284	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
62815	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
62024	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57284	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58469	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
59259	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58075	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
61630	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57679	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57679	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58469	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
61234	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
59654	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58864	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
63210	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
59260	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57679	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57284	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
59655	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58074	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58469	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
59259	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57679	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58864	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
59259	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57679	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
63210	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57680	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58074	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57679	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58469	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
59259	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
64000	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58469	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57284	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57284	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57679	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57284	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
63210	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
64395	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57679	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57680	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57680	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58469	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
106666	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58469	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
57284	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
58469	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
56494	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
100741	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
115753	"Tuple{typeof(Base.tail), Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
37926	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
118914	"Tuple{typeof(Base.convert), Type{Tuple}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
62815	"Tuple{typeof(Core.Compiler.getindex), Tuple{Core.SimpleVector}, Int64}"
133926	"Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:reference,), Tuple{Array{UInt8, 1}}}, Type{DataFrames.DataFrame}, DataStreams.Data.Schema{true, Tuple{Int64, Float64, Float64, Float64, Float64, Float64, Int64, String, String, String, Int64, String, String, String, String, String, String, String, String, String, String, Int64, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, Int64, String, String, Int64, Int64, String, Int64, Int64, String, Int64, Int64, String, Int64, String, String, String, Int64, String, String, String, String, Int64, Int64, Int64, String, String, String, String, String, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Float64, Int64, Float64, Float64, Float64, Float64, Int64, Int64, Int64, Int64, Int64, Int64}}, Type{DataStreams.Data.Field}, Bool}"
328296	"Tuple{getfield(DataFrames, Symbol("##DataFrame#175")), Array{UInt8, 1}, Type{T} where T, DataStreams.Data.Schema{true, Tuple{Int64, Float64, Float64, Float64, Float64, Float64, Int64, String, String, String, Int64, String, String, String, String, String, String, String, String, String, String, Int64, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, Int64, String, String, Int64, Int64, String, Int64, Int64, String, Int64, Int64, String, Int64, String, String, String, Int64, String, String, String, String, Int64, Int64, Int64, String, String, String, String, String, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Float64, Int64, Float64, Float64, Float64, Float64, Int64, Int64, Int64, Int64, Int64, Int64}}, Type{DataStreams.Data.Field}, Bool}"
64001	"Tuple{Type{Base.Generator{I, F} where F where I}, getfield(DataFrames, Symbol("##178#181")){Array{UInt8, 1}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}, Base.UnitRange{Int64}}"
266272	"Tuple{getfield(DataFrames, Symbol("##178#181")){Array{UInt8, 1}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}, Int64}"
168296	"Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(DataFrames, Symbol("##178#181")){Array{UInt8, 1}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}}}"
77432	"Tuple{Type{Tuple}, Base.Generator{Base.UnitRange{Int64}, getfield(DataFrames, Symbol("##178#181")){Array{UInt8, 1}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}}}"
61235	"Tuple{typeof(DataFrames.allocate), Type{Int64}, Int64, Array{UInt8, 1}}"
155655	"Tuple{typeof(Base._array_for), Type{Array{Int64, 1}}, Base.UnitRange{Int64}, Base.HasShape{1}}"
558223	"Tuple{typeof(Base.copyto!), Array{Array{Int64, 1}, 1}, Int64, Array{Array{Int64, 1}, 1}, Int64, Int64}"
51358	"Tuple{typeof(Base.collect_to!), Array{Array{Int64, 1}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DataFrames, Symbol("##178#181")){Array{UInt8, 1}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}}, Int64, Int64}"
77432	"Tuple{typeof(Base.collect_to_with_first!), Array{Array{Int64, 1}, 1}, Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DataFrames, Symbol("##178#181")){Array{UInt8, 1}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}}, Int64}"
59654	"Tuple{typeof(DataFrames.allocate), Type{Float64}, Int64, Array{UInt8, 1}}"
108247	"Tuple{typeof(Base.pushfirst!), Array{Any, 1}, TypeVar}"
54518	"Tuple{Type{Array{Array{T, 1} where T, 1}}, UndefInitializer, Int64}"
516741	"Tuple{typeof(Base.copyto!), Array{Array{T, 1} where T, 1}, Int64, Array{Array{Int64, 1}, 1}, Int64, Int64}"
62815	"Tuple{typeof(Base.setindex!), Array{Array{T, 1} where T, 1}, Array{Float64, 1}, Int64}"
457087	"Tuple{typeof(Base.copyto!), Array{Array{T, 1} where T, 1}, Int64, Array{Array{T, 1} where T, 1}, Int64, Int64}"
51753	"Tuple{typeof(Base.collect_to!), Array{Array{T, 1} where T, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DataFrames, Symbol("##178#181")){Array{UInt8, 1}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}}, Int64, Int64}"
60839	"Tuple{typeof(DataFrames.allocate), Type{String}, Int64, Array{UInt8, 1}}"
47012	"Tuple{Type{DataFrames.DataFrameStream{T} where T}, Tuple{Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}, Array{String, 1}}"
64395	"Tuple{typeof(Base.setproperty!), DataStreams.Data.Schema{true, Tuple{Int64, Float64, Float64, Float64, Float64, Float64, Int64, String, String, String, Int64, String, String, String, String, String, String, String, String, String, String, Int64, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, Int64, String, String, Int64, Int64, String, Int64, Int64, String, Int64, Int64, String, Int64, String, String, String, Int64, String, String, String, String, Int64, Int64, Int64, String, String, String, String, String, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Float64, Int64, Float64, Float64, Float64, Float64, Int64, Int64, Int64, Int64, Int64, Int64}}, Symbol, Int64}"
38321	"Tuple{typeof(Base.convert), Type{Union{Base.Missing, Int64}}, Int64}"
85333	"Tuple{typeof(Base.size), DataStreams.Data.Schema{true, Tuple{Int64, Float64, Float64, Float64, Float64, Float64, Int64, String, String, String, Int64, String, String, String, String, String, String, String, String, String, String, Int64, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, Int64, String, String, Int64, Int64, String, Int64, Int64, String, Int64, Int64, String, Int64, String, String, String, Int64, String, String, String, String, Int64, Int64, Int64, String, String, String, String, String, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Float64, Int64, Float64, Float64, Float64, Float64, Int64, Int64, Int64, Int64, Int64, Int64}}, Int64}"
173432	"Tuple{Type{Core.Compiler.NewNode}, Int64, Bool, Core.Compiler.Const, Core.SSAValue, Int64}"
484741	"Tuple{getfield(DataStreams.Data, Symbol("##s47#112")), Type{T} where T, Bool, Type{T} where T, UInt8, Type{T} where T, Tuple{}, Nothing, Nothing, Type{T} where T, Type{T} where T, Type{T} where T, Type{T} where T, Type{T} where T, Type{T} where T, Type{T} where T}"
156049	"Tuple{Type{Tuple}, Core.SimpleVector}"
70321	"Tuple{typeof(Base.all), Function, Core.SimpleVector}"
190815	"Tuple{typeof(Base._all), getfield(DataStreams.Data, Symbol("##113#114")), Core.SimpleVector, Base.Colon}"
89284	"Tuple{typeof(Base.collect), Type{Any}, Core.SimpleVector}"
211359	"Tuple{typeof(Base.collect), Type{Any}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}}"
2409878	"Tuple{getfield(DataStreams.Data, Symbol("##73#89")){Array{Any, 1}}, Int64}"
74272	"Tuple{typeof(Base.collect), Base.Generator{Array{Int64, 1}, getfield(DataStreams.Data, Symbol("##73#89")){Array{Any, 1}}}}"
3526324	"Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Array{Any, 1}, getfield(DataStreams.Data, Symbol("##76#92"))}, Int64, Int64}"
47407	"Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, getfield(DataStreams.Data, Symbol("##76#92"))}}"
405334	"Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Array{Any, 1}, getfield(DataStreams.Data, Symbol("##77#93"))}, Int64, Int64}"
35555	"Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, getfield(DataStreams.Data, Symbol("##77#93"))}}"
454717	"Tuple{typeof(Base.collect_to!), Array{Symbol, 1}, Base.Generator{Array{Any, 1}, getfield(DataStreams.Data, Symbol("##78#94"))}, Int64, Int64}"
37926	"Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, getfield(DataStreams.Data, Symbol("##78#94"))}}"
398617	"Tuple{typeof(Base.collect_to!), Array{Symbol, 1}, Base.Generator{Array{Any, 1}, getfield(DataStreams.Data, Symbol("##79#95"))}, Int64, Int64}"
35556	"Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, getfield(DataStreams.Data, Symbol("##79#95"))}}"
764050	"Tuple{typeof(Base.Iterators.zip_iterate), Base.UnitRange{Int64}, Base.Generator{Array{Any, 1}, getfield(DataStreams.Data, Symbol("##80#96"))}, Tuple{}, Tuple{}}"
313284	"Tuple{typeof(Base.Iterators.zip_iterate), Base.UnitRange{Int64}, Base.Generator{Array{Any, 1}, getfield(DataStreams.Data, Symbol("##80#96"))}, Tuple{Int64}, Tuple{Int64}}"
89284	"Tuple{typeof(Base._append!), Array{Any, 1}, Base.HasShape{1}, Base.Generator{Array{Any, 1}, getfield(DataStreams.Data, Symbol("##80#96"))}}"
860050	"Tuple{typeof(Base.sort!), Array{Any, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(DataStreams.Data, Symbol("##83#99"))}}"
234272	"Tuple{typeof(Base.sort!), Array{Any, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.By{getfield(DataStreams.Data, Symbol("##83#99"))}, Array{Any, 1}}"
431408	"Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Array{Any, 1}, getfield(DataStreams.Data, Symbol("##84#100"))}, Int64, Int64}"
32000	"Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, getfield(DataStreams.Data, Symbol("##84#100"))}}"
450766	"Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Array{Any, 1}, getfield(DataStreams.Data, Symbol("##85#101"))}, Int64, Int64}"
31209	"Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, getfield(DataStreams.Data, Symbol("##85#101"))}}"
392692	"Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, typeof(DataStreams.Data.name)}}"
375704	"Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Array{Any, 1}, getfield(DataStreams.Data, Symbol("##86#102"))}, Int64, Int64}"
31605	"Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, getfield(DataStreams.Data, Symbol("##86#102"))}}"
590618	"Tuple{typeof(Base.collect_to!), Array{Symbol, 1}, Base.Generator{Array{Any, 1}, getfield(DataStreams.Data, Symbol("##87#103"))}, Int64, Int64}"
32000	"Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, getfield(DataStreams.Data, Symbol("##87#103"))}}"
833186	"Tuple{typeof(DataStreams.Data.generate_loop), Bool, DataType, UInt8, Array{Any, 1}, Array{Int64, 1}, Array{Any, 1}, Nothing, Nothing}"
478815	"Tuple{getfield(Base.Sort, Symbol("##sortperm#11")), Base.Sort.QuickSortAlg, Function, Function, Nothing, Base.Order.ForwardOrdering, Function, Array{Any, 1}}"
47803	"Tuple{typeof(Base.Order._ord), typeof(Base.isless), Function, Base.Order.ForwardOrdering}"
48987	"Tuple{Type{Base.Order.Perm{O, V} where V<:(AbstractArray{T, 1} where T) where O<:Base.Order.Ordering}, Base.Order.By{getfield(DataStreams.Data, Symbol("##72#88"))}, Array{Any, 1}}"
472889	"Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.Perm{Base.Order.By{getfield(DataStreams.Data, Symbol("##72#88"))}, Array{Any, 1}}}"
804742	"Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.Perm{Base.Order.By{getfield(DataStreams.Data, Symbol("##72#88"))}, Array{Any, 1}}}"
63210	"Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Order.By{getfield(DataStreams.Data, Symbol("##72#88"))}, Array{Any, 1}}}"
24099	"Tuple{typeof(Base.sort!), Array{Int64, 1}, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Order.By{getfield(DataStreams.Data, Symbol("##72#88"))}, Array{Any, 1}}}"
56889	"Tuple{typeof(Base.Order.lt), Base.Order.By{getfield(DataStreams.Data, Symbol("##72#88"))}, Type{T} where T, Type{T} where T}"
40692	"Tuple{getfield(DataStreams.Data, Symbol("##72#88")), Type{T} where T}"
48198	"Tuple{typeof(Base.isless), Int64, Int64}"
42272	"Tuple{typeof(Base.:(|)), Bool, Bool}"
54123	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 1, 1, :ID, nothing, ()}}}"
99161	"Tuple{typeof(Base._array_for), Type{Base.Pair{Int64, DataType}}, Array{Int64, 1}, Base.HasShape{1}}"
635259	"Tuple{typeof(Base.copyto!), Array{Base.Pair{Int64, DataType}, 1}, Int64, Array{Base.Pair{Int64, DataType}, 1}, Int64, Int64}"
62025	"Tuple{typeof(Base.collect_to!), Array{Base.Pair{Int64, DataType}, 1}, Base.Generator{Array{Int64, 1}, getfield(DataStreams.Data, Symbol("##73#89")){Array{Any, 1}}}, Int64, Int64}"
29235	"Tuple{typeof(Base.collect_to_with_first!), Array{Base.Pair{Int64, DataType}, 1}, Base.Pair{Int64, DataType}, Base.Generator{Array{Int64, 1}, getfield(DataStreams.Data, Symbol("##73#89")){Array{Any, 1}}}, Int64}"
75457	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Float64, 2, 2, :RAND1, nothing, ()}}}"
52939	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Float64, 3, 3, :RAND2, nothing, ()}}}"
51753	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Float64, 4, 4, :EXPOSURE, nothing, ()}}}"
51753	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Float64, 5, 5, :LOSS20HALF, nothing, ()}}}"
50568	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Float64, 6, 6, :PREMIUM66, nothing, ()}}}"
50963	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 7, 7, :VORSCHAEDEN_ANZAHL, nothing, ()}}}"
54518	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 8, 8, :MALLORCA_POLICE, nothing, ()}}}"
51753	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 9, 9, :SCHUTZBRIEF_INKL, nothing, ()}}}"
54124	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 10, 10, :FREIE_WERKSTATTWAHL, nothing, ()}}}"
49382	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 11, 11, :AUTOMOBILCLUB_MITGLIED_SEIT, nothing, ()}}}"
49778	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 12, 12, :BAHNCARD, nothing, ()}}}"
50963	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 13, 13, :ZAHLUNGSWEISE, nothing, ()}}}"
54123	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 14, 14, :JAHRESKARTE_OEPNV, nothing, ()}}}"
50173	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 15, 15, :MOTORRAD_BESITZER, nothing, ()}}}"
50963	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 16, 16, :AUTOMOBILCLUB, nothing, ()}}}"
51358	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 17, 17, :SFKLASSE_VOLLKASKO, nothing, ()}}}"
51753	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 18, 18, :SFKLASSE_HAFTPFLICHT, nothing, ()}}}"
51358	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 19, 19, :STELLPLATZ_ABSCHLIESSBAR, nothing, ()}}}"
59655	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 20, 20, :NAECHTLICHER_STELLPLATZ, nothing, ()}}}"
50173	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 21, 21, :NUTZUNGSWEISE, nothing, ()}}}"
56099	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 22, 22, :JAEHRLICHE_FAHRLEISTUNG, nothing, ()}}}"
51358	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 23, 23, :TSN, nothing, ()}}}"
53728	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 24, 24, :ERSTZULASSUNG, nothing, ()}}}"
50173	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 25, 25, :HSN, nothing, ()}}}"
54519	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 26, 26, :FINANZIERUNGSART, nothing, ()}}}"
54914	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 27, 27, :ZULASSUNG_AUF_VERSICHERUNGSNEHM, nothing, ()}}}"
50173	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 28, 28, :STADT, nothing, ()}}}"
49382	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 29, 29, :KENNZEICHEN, nothing, ()}}}"
49383	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 30, 30, :PLZ_DES_HALTER, nothing, ()}}}"
49383	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 31, 31, :SELBSTGENUTZTES_WOHNEIGENTUM, nothing, ()}}}"
55309	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 32, 32, :ART_DES_WOHNEIGENTUM, nothing, ()}}}"
49778	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 33, 33, :GEBURTSDATUM, nothing, ()}}}"
52543	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 34, 34, :FAMILIENSTAND, nothing, ()}}}"
49777	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 35, 35, :NATIONALITAET, nothing, ()}}}"
50568	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 36, 36, :PLZ_WOHNORT, nothing, ()}}}"
50173	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 37, 37, :GESCHLECHT, nothing, ()}}}"
155259	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 38, 38, :FUEHRERSCHEIN_ERWORBEN_AM, nothing, ()}}}"
58470	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 39, 39, :VORSCHAEDEN0_typeKH, nothing, ()}}}"
58865	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 40, 40, :VORSCHAEDEN0_typetk, nothing, ()}}}"
57284	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 41, 41, :VORSCHAEDEN0_month, nothing, ()}}}"
57679	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 42, 42, :VORSCHAEDEN0_year, nothing, ()}}}"
55704	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 43, 43, :VORSCHAEDEN1_typetk, nothing, ()}}}"
50173	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 44, 44, :VORSCHAEDEN1_month, nothing, ()}}}"
50568	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 45, 45, :VORSCHAEDEN1_year, nothing, ()}}}"
50963	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 46, 46, :VORSCHAEDEN2_typevk, nothing, ()}}}"
50568	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 47, 47, :VORSCHAEDEN2_month, nothing, ()}}}"
50173	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 48, 48, :VORSCHAEDEN2_year, nothing, ()}}}"
55309	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 49, 49, :scrapedate, nothing, ()}}}"
54519	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 50, 50, :adacid, nothing, ()}}}"
50963	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 51, 51, :name, nothing, ()}}}"
49778	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 52, 52, :marke, nothing, ()}}}"
49383	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 53, 53, :modell, nothing, ()}}}"
49778	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 54, 54, :preis, nothing, ()}}}"
50963	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 55, 55, :getriebeart, nothing, ()}}}"
49383	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 56, 56, :antriebsart, nothing, ()}}}"
50173	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 57, 57, :Fahrzeugklasse, nothing, ()}}}"
50568	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 58, 58, :co2klasse, nothing, ()}}}"
50172	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 59, 59, :kw, nothing, ()}}}"
48988	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 60, 60, :ps, nothing, ()}}}"
50963	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 61, 61, :tueranzahl, nothing, ()}}}"
50173	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 62, 62, :Motorart, nothing, ()}}}"
57679	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 63, 63, :Kraftstoffart, nothing, ()}}}"
50173	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 64, 64, :Motorbauart, nothing, ()}}}"
50568	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 65, 65, :Schadstoffklasse, nothing, ()}}}"
50568	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, String, 66, 66, :Karosserie, nothing, ()}}}"
49778	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 67, 67, :Sitzanzahl, nothing, ()}}}"
49778	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 68, 68, :typklasseh_num, nothing, ()}}}"
55704	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 69, 69, :typklassetk_num, nothing, ()}}}"
50568	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 70, 70, :typklassevk_num, nothing, ()}}}"
51753	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 71, 71, :hubraum2, nothing, ()}}}"
50568	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 72, 72, :drehmoment2, nothing, ()}}}"
50173	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 73, 73, :breite2, nothing, ()}}}"
50173	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 74, 74, :radstand2, nothing, ()}}}"
54518	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 75, 75, :laenge2, nothing, ()}}}"
52543	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 76, 76, :hoehe2, nothing, ()}}}"
50173	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 77, 77, :leergewicht2, nothing, ()}}}"
50173	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 78, 78, :gesamtgewicht2, nothing, ()}}}"
49778	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 79, 79, :zuladung2, nothing, ()}}}"
49778	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Float64, 80, 80, :kofferraumvolumen_num, nothing, ()}}}"
55308	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 81, 81, :hoechstgeschwindigkeit2, nothing, ()}}}"
50173	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Float64, 82, 82, :verbrauchgesamt2, nothing, ()}}}"
49778	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Float64, 83, 83, :verbrauchausserorts2, nothing, ()}}}"
50568	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Float64, 84, 84, :verbrauchinnerorts2, nothing, ()}}}"
50568	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Float64, 85, 85, :beschleunigung2, nothing, ()}}}"
49383	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 86, 86, :tank2, nothing, ()}}}"
58469	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 87, 87, :kfzsteuer2, nothing, ()}}}"
53728	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 88, 88, :anzahlgaenge2, nothing, ()}}}"
50173	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 89, 89, :anzahlzylinder2, nothing, ()}}}"
50567	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 90, 90, :co2_wert, nothing, ()}}}"
50568	"Tuple{Type{Base.Pair{A, B} where B where A}, Int64, Type{DataStreams.Data.QueryColumn{0x01, Int64, 91, 91, :modellstart_y, nothing, ()}}}"
54914	"Tuple{typeof(Base.getindex), Array{Base.Pair{Int64, DataType}, 1}, Int64}"
63210	"Tuple{typeof(Base.indexed_iterate), Base.Pair{Int64, DataType}, Int64}"
59655	"Tuple{typeof(Base.indexed_iterate), Base.Pair{Int64, DataType}, Int64, Int64}"
112198	"Tuple{typeof(DataStreams.Data.scalarcomputed), Type{T} where T}"
102321	"Tuple{typeof(DataStreams.Data.scalarfiltered), Type{T} where T}"
116149	"Tuple{typeof(DataStreams.Data.grouped), Type{T} where T}"
109827	"Tuple{typeof(DataStreams.Data.aggfiltered), Type{T} where T}"
96395	"Tuple{typeof(DataStreams.Data.sorted), Type{T} where T}"
2780446	"Tuple{typeof(CSV.parsefield), Base.GenericIOBuffer{Array{UInt8, 1}}, Type{Int64}, CSV.Options{Nothing}, Int64, Int64, Base.RefValue{CSV.ParsingState}, getfield(CSV, Symbol("##4#5"))}"
4218868	"Tuple{typeof(CSV.scale), Int64, Int64, Int64, Int64, Int64}"
1261433	"Tuple{typeof(CSV.parsefield), Base.GenericIOBuffer{Array{UInt8, 1}}, Type{Float64}, CSV.Options{Nothing}, Int64, Int64, Base.RefValue{CSV.ParsingState}, getfield(CSV, Symbol("##4#5"))}"
1225483	"Tuple{typeof(Base.getindex), Array{Base.WeakKeyDict{K, V} where V where K, 1}, Int64}"
298666	"Tuple{Type{Base.Dict{WeakRef, Nothing}}}"
299852	"Tuple{typeof(Base.setindex!), Base.Dict{WeakRef, Nothing}, Nothing, WeakRef}"
80198	"Tuple{Type{Base.Dict{WeakRef, Nothing}}, Base.Dict{Any, Nothing}}"
1267359	"Tuple{typeof(Base.rehash!), Base.Dict{DataType, Base.WeakKeyDict{K, V} where V where K}, Int64}"
53334	"Tuple{typeof(Base.get!), getfield(InternedStrings, Symbol("##1#2")){String}, Base.Dict{DataType, Base.WeakKeyDict{K, V} where V where K}, Type{String}}"
250469	"Tuple{typeof(Base.lock), Base.Threads.RecursiveTatasLock}"
372148	"Tuple{typeof(Base.:(==)), WeakRefStrings.WeakRefString{UInt8}, WeakRef}"
114963	"Tuple{typeof(Base.ht_keyindex2!), Base.Dict{WeakRef, Nothing}, WeakRefStrings.WeakRefString{UInt8}}"
220445	"Tuple{typeof(Base.unlock), Base.Threads.RecursiveTatasLock}"
48198	"Tuple{typeof(InternedStrings.getvalue), Type{String}, WeakRef}"
219654	"Tuple{typeof(InternedStrings.intern), Type{String}, WeakRefStrings.WeakRefString{UInt8}}"
126420	"Tuple{typeof(CSV.parsefield), Base.GenericIOBuffer{Array{UInt8, 1}}, Type{String}, CSV.Options{Nothing}, Int64, Int64, Base.RefValue{CSV.ParsingState}, getfield(CSV, Symbol("##4#5"))}"
2413829	"Tuple{typeof(DataStreams.Data.stream!), CSV.Source{Base.GenericIOBuffer{Array{UInt8, 1}}, Nothing}, DataStreams.Data.Query{0x01, Tuple{DataStreams.Data.QueryColumn{0x01, Int64, 1, 1, :ID, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 2, 2, :RAND1, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 3, 3, :RAND2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 4, 4, :EXPOSURE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 5, 5, :LOSS20HALF, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 6, 6, :PREMIUM66, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 7, 7, :VORSCHAEDEN_ANZAHL, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 8, 8, :MALLORCA_POLICE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 9, 9, :SCHUTZBRIEF_INKL, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 10, 10, :FREIE_WERKSTATTWAHL, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 11, 11, :AUTOMOBILCLUB_MITGLIED_SEIT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 12, 12, :BAHNCARD, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 13, 13, :ZAHLUNGSWEISE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 14, 14, :JAHRESKARTE_OEPNV, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 15, 15, :MOTORRAD_BESITZER, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 16, 16, :AUTOMOBILCLUB, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 17, 17, :SFKLASSE_VOLLKASKO, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 18, 18, :SFKLASSE_HAFTPFLICHT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 19, 19, :STELLPLATZ_ABSCHLIESSBAR, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 20, 20, :NAECHTLICHER_STELLPLATZ, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 21, 21, :NUTZUNGSWEISE, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 22, 22, :JAEHRLICHE_FAHRLEISTUNG, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 23, 23, :TSN, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 24, 24, :ERSTZULASSUNG, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 25, 25, :HSN, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 26, 26, :FINANZIERUNGSART, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 27, 27, :ZULASSUNG_AUF_VERSICHERUNGSNEHM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 28, 28, :STADT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 29, 29, :KENNZEICHEN, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 30, 30, :PLZ_DES_HALTER, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 31, 31, :SELBSTGENUTZTES_WOHNEIGENTUM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 32, 32, :ART_DES_WOHNEIGENTUM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 33, 33, :GEBURTSDATUM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 34, 34, :FAMILIENSTAND, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 35, 35, :NATIONALITAET, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 36, 36, :PLZ_WOHNORT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 37, 37, :GESCHLECHT, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 38, 38, :FUEHRERSCHEIN_ERWORBEN_AM, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 39, 39, :VORSCHAEDEN0_typeKH, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 40, 40, :VORSCHAEDEN0_typetk, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 41, 41, :VORSCHAEDEN0_month, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 42, 42, :VORSCHAEDEN0_year, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 43, 43, :VORSCHAEDEN1_typetk, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 44, 44, :VORSCHAEDEN1_month, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 45, 45, :VORSCHAEDEN1_year, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 46, 46, :VORSCHAEDEN2_typevk, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 47, 47, :VORSCHAEDEN2_month, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 48, 48, :VORSCHAEDEN2_year, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 49, 49, :scrapedate, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 50, 50, :adacid, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 51, 51, :name, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 52, 52, :marke, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 53, 53, :modell, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 54, 54, :preis, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 55, 55, :getriebeart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 56, 56, :antriebsart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 57, 57, :Fahrzeugklasse, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 58, 58, :co2klasse, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 59, 59, :kw, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 60, 60, :ps, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 61, 61, :tueranzahl, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 62, 62, :Motorart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 63, 63, :Kraftstoffart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 64, 64, :Motorbauart, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 65, 65, :Schadstoffklasse, nothing, ()}, DataStreams.Data.QueryColumn{0x01, String, 66, 66, :Karosserie, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 67, 67, :Sitzanzahl, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 68, 68, :typklasseh_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 69, 69, :typklassetk_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 70, 70, :typklassevk_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 71, 71, :hubraum2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 72, 72, :drehmoment2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 73, 73, :breite2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 74, 74, :radstand2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 75, 75, :laenge2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 76, 76, :hoehe2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 77, 77, :leergewicht2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 78, 78, :gesamtgewicht2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 79, 79, :zuladung2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 80, 80, :kofferraumvolumen_num, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 81, 81, :hoechstgeschwindigkeit2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 82, 82, :verbrauchgesamt2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 83, 83, :verbrauchausserorts2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 84, 84, :verbrauchinnerorts2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Float64, 85, 85, :beschleunigung2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 86, 86, :tank2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 87, 87, :kfzsteuer2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 88, 88, :anzahlgaenge2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 89, 89, :anzahlzylinder2, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 90, 90, :co2_wert, nothing, ()}, DataStreams.Data.QueryColumn{0x01, Int64, 91, 91, :modellstart_y, nothing, ()}}, (), nothing, nothing}, Type{DataStreams.Data.Field}, DataFrames.DataFrameStream{Tuple{Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}}, DataStreams.Data.Schema{true, Tuple{Int64, Float64, Float64, Float64, Float64, Float64, Int64, String, String, String, Int64, String, String, String, String, String, String, String, String, String, String, Int64, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, Int64, String, String, Int64, Int64, String, Int64, Int64, String, Int64, Int64, String, Int64, String, String, String, Int64, String, String, String, String, Int64, Int64, Int64, String, String, String, String, String, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Float64, Int64, Float64, Float64, Float64, Float64, Int64, Int64, Int64, Int64, Int64, Int64}}, Int64}"
512000	"Tuple{typeof(Base.ht_keyindex2!), Base.Dict{DataType, Base.WeakKeyDict{K, V} where V where K}, Type{T} where T}"
83359	"Tuple{typeof(Base.unsafe_convert), Type{Ptr{Int16}}, Base.Threads.Atomic{Int16}}"
203852	"Tuple{typeof(Base.isequal), WeakRefStrings.WeakRefString{UInt8}, String}"
152099	"Tuple{typeof(Base.hash), String, UInt64}"
867557	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, Type{Symbol}, Tuple{Base.Broadcast.Extruded{Array{String, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}}"
199111	"Tuple{typeof(DataStreams.Data.close!), DataFrames.DataFrameStream{Tuple{Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}}}"
621432	"Tuple{Type{Base.Dict{Symbol, Int64}}}"
1752891	"Tuple{typeof(Base.rehash!), Base.Dict{Symbol, Int64}, Int64}"
69530	"Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, Int64}, Symbol}"
149729	"Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Int64}, Int64, Symbol}"
111012	"Tuple{Type{Base.Dict{Symbol, Int64}}, Base.Iterators.Zip2{Array{Symbol, 1}, Base.UnitRange{Int64}}}"
941038	"Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, getfield(DataFrames, Symbol("##48#50"))}}"
427062	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.string), Tuple{Base.Broadcast.Extruded{Array{Symbol, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}}"
167507	"Tuple{Type{Base.DimensionMismatch}, Nothing}"
203061	"Tuple{Type{DataFrames.DataFrame}, Array{Any, 1}, DataFrames.Index}"
37926	"Tuple{getfield(DataFrames, Symbol("##DataFrame#54")), Bool, Type{T} where T, Array{Any, 1}, Array{Symbol, 1}}"
380049	"Tuple{Type{Base.Dict{Symbol, Nothing}}}"
240593	"Tuple{getfield(DataFrames, Symbol("##make_unique#3")), Bool, Function, Array{Symbol, 1}}"
53333	"Tuple{getfield(DataFrames, Symbol("##48#50")), Array{Int64, 1}}"
84938	"Tuple{typeof(Base._array_for), Type{Int64}, Array{Any, 1}, Base.HasShape{1}}"
441285	"Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Any, 1}, getfield(DataFrames, Symbol("##48#50"))}, Int64, Int64}"
25679	"Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Array{Any, 1}, getfield(DataFrames, Symbol("##48#50"))}, Int64}"
53333	"Tuple{getfield(DataFrames, Symbol("##48#50")), Array{Float64, 1}}"
50173	"Tuple{getfield(DataFrames, Symbol("##48#50")), Array{String, 1}}"
180148	"Tuple{typeof(Base.extrema), Array{Int64, 1}}"
75062	"Tuple{typeof(Base.indexed_iterate), Tuple{Int64, Int64}, Int64}"
69926	"Tuple{typeof(Base.indexed_iterate), Tuple{Int64, Int64}, Int64, Int64}"
127605	"Tuple{typeof(Base.print), Base.TTY, Char}"
829235	"Tuple{typeof(Base.Printf.print_fixed), Base.TTY, Int64, Int32, Int32, Bool}"
114173	"Tuple{typeof(Base.print), Base.TTY, String}"
82568	"Tuple{typeof(Base.Printf.fix_dec), Base.TTY, Float64, String, Int64, Int64, Char}"
131951	"Tuple{typeof(Base.println), Base.TTY}"
58469	"Tuple{Type{NamedTuple{(:weightcol, :numcol, :denomcol, :independent_vars), T} where T<:Tuple}, Tuple{String, String, String, Array{String, 1}}}"
44247	"Tuple{getfield(Core.Compiler, Symbol("##188#189")), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}"
312889	"Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}"
613532	"Tuple{typeof(Base.Cartesian.poplinenum), Expr}"
1056396	"Tuple{typeof(Base.Cartesian.exprresolve_arith), Expr}"
442469	"Tuple{typeof(Base.Cartesian.exprresolve_conditional), Expr}"
111013	"Tuple{typeof(Base.Cartesian.exprresolve), Expr}"
32790	"Tuple{typeof(Base.Cartesian.inlineanonymous), Expr, Int64}"
84938	"Tuple{typeof(Base.Cartesian._nloops), Int64, Symbol, Expr, Expr}"
476050	"Tuple{typeof(Base.Cartesian.lreplace!), Expr, Base.Cartesian.LReplace{String}}"
19753	"Tuple{typeof(Base.Cartesian.lreplace), Expr, Symbol, Int64}"
254815	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}"
163951	"Tuple{typeof(Core.Compiler.getindex), Tuple{Float64, Int64}, Int64}"
74667	"Tuple{typeof(Core.Compiler.getindex), Tuple{Float64, Float64}, Int64}"
246124	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, Core.SSAValue, Core.Compiler.Argument, Core.SSAValue, Vararg{Core.SSAValue, N} where N}"
118123	"Tuple{typeof(Core.Compiler.getindex), Tuple{String, typeof(Base.info)}, Int64}"
139852	"Tuple{typeof(Core.Compiler.getindex), Tuple{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Pkg.API.add)}, Int64}"
267062	"Tuple{typeof(Base.merge_types), Tuple{Symbol}, Type{NamedTuple{(:mode,), Tuple{Symbol}}}, Type{NamedTuple{(), Tuple{}}}}"
112592	"Tuple{typeof(Core.Compiler.getindex), Tuple{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(PyCall.pycall), PyCall.PyObject, DataType}, Int64}"
78617	"Tuple{typeof(Core.Compiler.getindex), Tuple{PyCall.PyObject}, Int64}"
55308	"Tuple{typeof(Core.Compiler.getindex), Tuple{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(PyCall._pycall), PyCall.PyObject}, Int64}"
403359	"Tuple{getfield(Mmap, Symbol("##3#5")), Array{UInt8, 1}}"
845433	"Tuple{typeof(Base.Filesystem.tempdir)}"
357136	"Tuple{typeof(Base.Filesystem.mktempdir), String}"
397827	"Tuple{typeof(Base.println)}"
1733533	"Tuple{typeof(Base.tic)}"
306173	"Tuple{typeof(Base.Filesystem.splitext), String}"
145778	"Tuple{typeof(Base.println), String, String}"
160000	"Tuple{typeof(Base.println), String}"
299062	"Tuple{typeof(Base.getindex), DataFrames.DataFrame, Int64}"
410864	"Tuple{typeof(Base.vect), Int64, Vararg{Int64, N} where N}"
30420	"Tuple{typeof(Base.find), Bool}"
113383	"Tuple{typeof(DecisionTrees.check_for_missing_data), DataFrames.DataFrame, Int64}"
530963	"Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, Int64}, Symbol}"
56889	"Tuple{typeof(Base.getindex), DataFrames.DataFrame, Symbol}"
489482	"Tuple{typeof(Base.print), String}"
763655	"Tuple{Type{Array{Array{Float64, 1}, N} where N}, Int64}"
910618	"Tuple{typeof(DecisionTrees.add_coded_numdata!), DataFrames.DataFrame, DecisionTrees.ModelSettings, Array{UInt8, 1}, Int64, DataFrames.DataFrame}"
651457	"Tuple{typeof(Base._all), getfield(Base, Symbol("##226#228")), Base.Dict{Symbol, Int64}, Base.Colon}"
58469	"Tuple{Type{Base.Dict{K, V} where V where K}, Base.Dict{Symbol, Int64}}"
80198	"Tuple{typeof(Base.copy), DataFrames.DataFrame}"
152889	"Tuple{typeof(DataFrames.nrow), DataFrames.DataFrame}"
575210	"Tuple{typeof(Base.deepcopy), DataFrames.DataFrame}"
1104989	"Tuple{typeof(DecisionTrees.fileroot), Base.Missing}"
65580	"Tuple{typeof(DecisionTrees.fileroot), PyCall.PyObject}"
689383	"Tuple{typeof(DecisionTrees.prep_data_from_df), DataFrames.DataFrame, DecisionTrees.ModelSettings, String}"
101926	"Tuple{getfield(DecisionTrees, Symbol("#kw##prepare_dataframe_for_dtm!")), NamedTuple{(:weightcol, :numcol, :denomcol, :independent_vars), Tuple{String, String, String, Array{String, 1}}}, typeof(DecisionTrees.prepare_dataframe_for_dtm!), DataFrames.DataFrame}"
6059067	"Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Array{Float64, 1}, getfield(DecisionTrees, Symbol("##92#93")){Float64}}, Int64, Int64}"
36345	"Tuple{typeof(Base._collect), Array{Float64, 1}, Base.Generator{Array{Float64, 1}, getfield(DecisionTrees, Symbol("##92#93")){Float64}}, Base.EltypeUnknown, Base.HasShape{1}}"
361087	"Tuple{typeof(Base.hvcat_fill), Array{Float64, 2}, Tuple{Int64, Int64}}"
241383	"Tuple{typeof(Base.unsafe_copyto!), Array{Float64, 1}, Int64, Array{Float64, 2}, Int64, Int64}"
1417088	"Tuple{typeof(Base.getindex), Array{String, 2}, Base.Colon}"
526222	"Tuple{typeof(Base.union!), Base.Set{String}, Array{String, 1}}"
139852	"Tuple{typeof(Base._findin), Array{String, 1}, Array{String, 1}}"
19753	"Tuple{typeof(Base.findin), Array{String, 1}, Array{String, 1}}"
293136	"Tuple{typeof(Base._deleteat!), Array{String, 1}, Array{Int64, 1}}"
1143705	"Tuple{typeof(Base.union!), Base.Set{Symbol}, Array{Symbol, 1}}"
225185	"Tuple{typeof(Base.issubset), Array{Symbol, 1}, Array{Symbol, 1}}"
1625286	"Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Symbol, 1}, getfield(DataFrames, Symbol("##12#13")){DataFrames.Index}}, Int64, Int64}"
32395	"Tuple{typeof(Base.collect), Base.Generator{Array{Symbol, 1}, getfield(DataFrames, Symbol("##12#13")){DataFrames.Index}}}"
203852	"Tuple{typeof(Base.throw_boundserror), Array{Symbol, 1}, Tuple{Array{Int64, 1}}}"
376494	"Tuple{typeof(Base.throw_checksize_error), Array{Symbol, 1}, Tuple{Base.OneTo{Int64}}}"
37531	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Symbol, 1}, Array{Int64, 1}}"
124839	"Tuple{typeof(Base.getindex), DataFrames.DataFrame, Array{Symbol, 1}}"
141433	"Tuple{typeof(Base.setindex!), DataFrames.DataFrame, DataFrames.DataFrame, Array{Symbol, 1}}"
984889	"Tuple{typeof(Dates.format), Base.GenericIOBuffer{Array{UInt8, 1}}, Dates.DatePart{Char(0x59000000)}, Dates.DateTime}"
175408	"Tuple{typeof(Dates.format), Base.GenericIOBuffer{Array{UInt8, 1}}, Dates.DatePart{Char(0x6d000000)}, Dates.DateTime}"
166321	"Tuple{typeof(Dates.format), Base.GenericIOBuffer{Array{UInt8, 1}}, Dates.DatePart{Char(0x64000000)}, Dates.DateTime}"
100741	"Tuple{typeof(Dates.format), Base.GenericIOBuffer{Array{UInt8, 1}}, Dates.DateTime, Dates.DateFormat{Symbol("YYYY-mm-dd\THH:MM:SS"), Tuple{Dates.DatePart{Char(0x59000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}}}}"
227555	"Tuple{typeof(Dates.format), Dates.DateTime, Dates.DateFormat{Symbol("YYYY-mm-dd\THH:MM:SS"), Tuple{Dates.DatePart{Char(0x59000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}}}, Int64}"
935902	"Tuple{typeof(Dates.format), Base.GenericIOBuffer{Array{UInt8, 1}}, Dates.DatePart{Char(0x73000000)}, Dates.DateTime}"
28445	"Tuple{typeof(Dates.format), Base.GenericIOBuffer{Array{UInt8, 1}}, Dates.DateTime, Dates.DateFormat{Symbol("YYYY-mm-dd\THH:MM:SS.s"), Tuple{Dates.DatePart{Char(0x59000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x73000000)}}}}"
220839	"Tuple{typeof(Dates.format), Dates.DateTime, Dates.DateFormat{Symbol("YYYY-mm-dd\THH:MM:SS.s"), Tuple{Dates.DatePart{Char(0x59000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x73000000)}}}, Int64}"
444840	"Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Base.SubString{String}, 1}, getfield(DecisionTrees, Symbol("##3#4"))}, Int64, Int64}"
30025	"Tuple{typeof(Base.collect), Base.Generator{Array{Base.SubString{String}, 1}, getfield(DecisionTrees, Symbol("##3#4"))}}"
97975	"Tuple{Type{Array{Int64, N} where N}, Int64}"
104297	"Tuple{Type{Array{String, N} where N}, Int64}"
257185	"Tuple{typeof(Base.vect), Float64, Vararg{Float64, N} where N}"
163556	"Tuple{Type{DecisionTrees.ModelSettings}}"
1526520	"Tuple{getfield(DecisionTrees, Symbol("##prepare_dataframe_for_dtm_INTERNAL!#91")), Array{String, 1}, String, String, String, String, Float64, String, Array{String, 1}, Any, DataFrames.DataFrame}"
117729	"Tuple{typeof(Base.length), Array{Int64, 1}}"
1478718	"Tuple{getfield(Logging, Symbol("##handle_message#2")), Nothing, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, Logging.ConsoleLogger, Base.CoreLogging.LogLevel, String, Module, Symbol, Symbol, String, Int64}"
288791	"Tuple{typeof(Logging.default_metafmt), Base.CoreLogging.LogLevel, Module, Symbol, Symbol, String, Int64}"
1583409	"Tuple{typeof(DecisionTrees.removeUnionTypes!), Any, Array{String, 1}}"
876247	"Tuple{typeof(DataFrames.insert_single_column!), DataFrames.DataFrame, Array{Int64, 1}, Symbol}"
39111	"Tuple{typeof(Base.setindex!), DataFrames.DataFrame, Array{Int64, 1}, Symbol}"
483951	"Tuple{typeof(DataFrames.insert_single_column!), DataFrames.DataFrame, Array{Float64, 1}, Symbol}"
22519	"Tuple{typeof(Base.setindex!), DataFrames.DataFrame, Array{Float64, 1}, Symbol}"
73876	"Tuple{Type{Base.InterpreterIP}, Core.CodeInfo, Ptr{Nothing}}"
86518	"Tuple{typeof(Base.isequal), Tuple{Ptr{Nothing}, Symbol}, Tuple{Ptr{Nothing}, Symbol}}"
63210	"Tuple{typeof(DecisionTrees.is_categorical_column), Array{Int64, 1}, Symbol}"
58074	"Tuple{typeof(DecisionTrees.is_categorical_column), Array{String, 1}, Symbol}"
438914	"Tuple{typeof(Base.throw_checksize_error), Array{Any, 1}, Tuple{Base.OneTo{Int64}}}"
43457	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Any, 1}, Array{Int64, 1}}"
420346	"Tuple{typeof(DataFrames.insert_single_column!), DataFrames.DataFrame, Array{String, 1}, Symbol}"
101926	"Tuple{getfield(Base, Symbol("##parse#345")), Nothing, Function, Type{Int64}, Base.SubString{String}}"
57679	"Tuple{typeof(Base.setproperty!), DecisionTrees.ModelSettings, Symbol, Array{Symbol, 1}}"
611556	"Tuple{typeof(Base.convert), Type{String}, Symbol}"
81777	"Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{String, 1}, Base.IndexLinear, Array{Symbol, 1}}"
25679	"Tuple{typeof(Base.convert), Type{Array{String, 1}}, Array{Symbol, 1}}"
411655	"Tuple{typeof(Base._any), getfield(Base, Symbol("##182#183")){Symbol}, Array{Any, 1}, Base.Colon}"
1904989	"Tuple{typeof(Base._any), getfield(Base, Symbol("##182#183")){String}, Array{String, 2}, Base.Colon}"
653828	"Tuple{typeof(Base._any), getfield(Base, Symbol("##182#183")){String}, Array{String, 1}, Base.Colon}"
1424199	"Tuple{typeof(Base.hcat), String, String}"
2068939	"Tuple{typeof(DecisionTrees.checkIfSettingsAreValid), DecisionTrees.ModelSettings}"
60840	"Tuple{getfield(DecisionTrees, Symbol("##updateSettingsMod!#11")), Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol, Symbol}, NamedTuple{(:number_of_num_features, :number_of_char_features), Tuple{Int64, Int64}}}, Function, DecisionTrees.ModelSettings}"
109037	"Tuple{typeof(Base.in), String, Array{String, 1}}"
83753	"Tuple{typeof(Base.in), String, Array{String, 2}}"
319210	"Tuple{getfield(Base, Symbol("##sprint#336")), Nothing, Int64, Function, Function, Tuple{Int64, Int64}, Vararg{Any, N} where N}"
67950	"Tuple{typeof(Base.show), Base.GenericIOBuffer{Array{UInt8, 1}}, Tuple{Int64, Int64}}"
65185	"Tuple{typeof(Base.println), Base.TTY, String, Vararg{String, N} where N}"
322371	"Tuple{getfield(Base, Symbol("##sprint#336")), Nothing, Int64, Function, Function, Array{Symbol, 1}}"
1498865	"Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Symbol, 1}, Char, String, String, Bool, Int64, Int64}"
873087	"Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Symbol, 1}, String, String, Char, Bool, Int64, Int64}"
818964	"Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Symbol, 1}, Char, String, Char, Bool, Int64, Int64}"
82173	"Tuple{typeof(Base.show_vector), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Symbol, 1}, Char, Char}"
18963	"Tuple{typeof(Base.show), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Symbol, 1}}"
60839	"Tuple{typeof(Base.show), Base.GenericIOBuffer{Array{UInt8, 1}}, DataType}"
897186	"Tuple{typeof(Base.show_type_name), Base.GenericIOBuffer{Array{UInt8, 1}}, Core.TypeName}"
148148	"Tuple{typeof(Base.show_datatype), Base.GenericIOBuffer{Array{UInt8, 1}}, DataType}"
112592	"Tuple{typeof(Base.hashindex), Tuple{Ptr{Nothing}, Symbol}, Int64}"
215309	"Tuple{typeof(Base.task_local_storage), Symbol, Tuple{UInt64, Tuple{}}}"
98370	"Tuple{typeof(Base.any), Function, Array{Int64, 1}}"
95210	"Tuple{getfield(Base, Symbol("##any#551")), Function, Function, Function, Array{Int64, 1}}"
176198	"Tuple{typeof(Base._any), typeof(Base.ismissing), Array{Int64, 1}, Base.Colon}"
88494	"Tuple{typeof(Base.any), Function, Array{Float64, 1}}"
83358	"Tuple{getfield(Base, Symbol("##any#551")), Function, Function, Function, Array{Float64, 1}}"
168691	"Tuple{typeof(Base._any), typeof(Base.ismissing), Array{Float64, 1}, Base.Colon}"
78222	"Tuple{typeof(Base.any), Function, Array{String, 1}}"
77433	"Tuple{getfield(Base, Symbol("##any#551")), Function, Function, Function, Array{String, 1}}"
160790	"Tuple{typeof(Base._any), typeof(Base.ismissing), Array{String, 1}, Base.Colon}"
39111	"Tuple{typeof(Base.Broadcast.broadcastable), Array{Int64, 1}}"
53333	"Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.DefaultArrayStyle{1}, Function, Array{Int64, 1}}"
70321	"Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.string), Tuple{Array{Int64, 1}}}"
662124	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.string), Tuple{Base.Broadcast.Extruded{Array{Int64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}}"
143803	"Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.string), Tuple{Array{Int64, 1}}}}"
40691	"Tuple{typeof(Base.convert), Type{Array{String, 1}}, Array{String, 1}}"
32790	"Tuple{typeof(Base.Broadcast.broadcastable), Array{Float64, 1}}"
60444	"Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.DefaultArrayStyle{1}, Type{T} where T, Array{Float64, 1}}"
50173	"Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{UInt8}, Tuple{Array{Float64, 1}}}"
621828	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, Type{UInt8}, Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}}"
157234	"Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{UInt8}, Tuple{Array{Float64, 1}}}}"
35951	"Tuple{typeof(Base.convert), Type{Array{UInt8, 1}}, Array{UInt8, 1}}"
498568	"Tuple{Type{Base.Dict{UInt8, Nothing}}}"
1860347	"Tuple{typeof(Base.rehash!), Base.Dict{UInt8, Nothing}, Int64}"
70716	"Tuple{typeof(Base.ht_keyindex2!), Base.Dict{UInt8, Nothing}, UInt8}"
163161	"Tuple{typeof(Base.setindex!), Base.Dict{UInt8, Nothing}, Nothing, UInt8}"
483556	"Tuple{typeof(Base.ht_keyindex), Base.Dict{UInt8, Nothing}, UInt8}"
98370	"Tuple{typeof(Base.unique), Array{UInt8, 1}}"
18963	"Tuple{typeof(Base.unique), Array{UInt8, 1}}"
77037	"Tuple{typeof(Base.sort), Array{UInt8, 1}}"
219654	"Tuple{getfield(Base.Sort, Symbol("##sort#8")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, Array{UInt8, 1}}"
715458	"Tuple{typeof(Base.Sort.sort_int_range!), Array{UInt8, 1}, UInt8, UInt8}"
269037	"Tuple{typeof(Base.sort!), Array{UInt8, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.ForwardOrdering}"
360692	"Tuple{typeof(Base.Sort.partition!), Array{UInt8, 1}, Int64, Int64, Base.Order.ForwardOrdering}"
54913	"Tuple{typeof(Base.sort!), Array{UInt8, 1}, Int64, Int64, Base.Sort.QuickSortAlg, Base.Order.ForwardOrdering}"
55704	"Tuple{getfield(Base.Sort, Symbol("##sort!#7")), Base.Sort.QuickSortAlg, Function, Function, Nothing, Base.Order.ForwardOrdering, Function, Array{UInt8, 1}}"
255210	"Tuple{typeof(Base.vect), UInt8, Vararg{UInt8, N} where N}"
143012	"Tuple{typeof(Base.:(==)), Array{UInt8, 1}, Array{UInt8, 1}}"
31605	"Tuple{typeof(Base.convert), Type{Array{Float64, 1}}, Array{Float64, 1}}"
61235	"Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.DefaultArrayStyle{1}, Function, Array{Float64, 1}, Int64}"
46617	"Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(<=)), Tuple{Array{Float64, 1}, Int64}}"
992395	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(<=)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Int64}}, Tuple{Int64}}"
438914	"Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(<=)), Tuple{Array{Float64, 1}, Int64}}}"
195555	"Tuple{typeof(Base.sum), Base.BitArray{1}}"
54123	"Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{Array{Float64, 1}, Int64}}"
909828	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Int64}}, Tuple{Int64}}"
421136	"Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Float64, 1}, Int64}}}"
173432	"Tuple{typeof(Base.any), Base.BitArray{1}}"
128790	"Tuple{typeof(Base._any), getfield(DecisionTrees, Symbol("##95#98")), Array{Float64, 1}, Base.Colon}"
47802	"Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(<)), Tuple{Array{Float64, 1}, Int64}}"
872297	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(<)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Int64}}, Tuple{Int64}}"
423507	"Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(<)), Tuple{Array{Float64, 1}, Int64}}}"
73086	"Tuple{typeof(Base.similar), Array{String, 1}}"
239012	"Tuple{typeof(Base.deepcopy_internal), String, Base.IdDict{Any, Any}}"
445630	"Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Float64, 1}, Base.IndexLinear, Array{Int64, 1}}"
26075	"Tuple{typeof(Base.convert), Type{Array{Float64, 1}}, Array{Int64, 1}}"
1163853	"Tuple{typeof(Base._linspace1), Type{Float64}, Float64, Float64, Int64}"
428642	"Tuple{typeof(Base.rat), Float64}"
402173	"Tuple{getfield(Base, Symbol("#throw1#313")), Int64, Int64}"
60840	"Tuple{typeof(Base.lcm), Int64, Int64}"
984494	"Tuple{typeof(Base.:(/)), Base.TwicePrecision{Float64}, Int64}"
33976	"Tuple{Type{Base.TwicePrecision{Float64}}, Tuple{Int64, Int64}}"
14078035	"Tuple{typeof(Base.nbitslen), Type{Float64}, Int64, Int64}"
1253532	"Tuple{typeof(Base.splitprec), Type{Float64}, Int128}"
676346	"Tuple{typeof(Base.:(/)), Base.TwicePrecision{Float64}, Int128}"
141828	"Tuple{typeof(Base.steprangelen_hp), Type{Float64}, Tuple{Int128, Int128}, Tuple{Int128, Int128}, Int64, Int64, Int64}"
75456	"Tuple{typeof(Base._linspace), Type{Float64}, Int64, Int64, Int64, Int64}"
1251162	"Tuple{typeof(Base._linspace), Float64, Float64, Int64}"
90864	"Tuple{typeof(Base._range), Float64, Nothing, Float64, Int64}"
35951	"Tuple{typeof(Base.linspace), Float64, Float64, Int64}"
450371	"Tuple{Type{Base.Dict{Float64, Nothing}}}"
1903409	"Tuple{typeof(Base.rehash!), Base.Dict{Float64, Nothing}, Int64}"
66370	"Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Float64, Nothing}, Float64}"
136691	"Tuple{typeof(Base.setindex!), Base.Dict{Float64, Nothing}, Nothing, Float64}"
493433	"Tuple{typeof(Base.ht_keyindex), Base.Dict{Float64, Nothing}, Float64}"
96790	"Tuple{typeof(Base.unique), Array{Float64, 1}}"
336593	"Tuple{typeof(Base.Sort.Float.nans2right!), Array{Float64, 1}, Base.Order.ForwardOrdering, Int64, Int64}"
307753	"Tuple{typeof(Base.sort!), Array{Float64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Sort.Float.Left}"
285235	"Tuple{typeof(Base.Sort.partition!), Array{Float64, 1}, Int64, Int64, Base.Sort.Float.Left}"
52148	"Tuple{typeof(Base.sort!), Array{Float64, 1}, Int64, Int64, Base.Sort.QuickSortAlg, Base.Sort.Float.Left}"
243754	"Tuple{typeof(Base.sort!), Array{Float64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Sort.Float.Right}"
281679	"Tuple{typeof(Base.Sort.partition!), Array{Float64, 1}, Int64, Int64, Base.Sort.Float.Right}"
48197	"Tuple{typeof(Base.sort!), Array{Float64, 1}, Int64, Int64, Base.Sort.QuickSortAlg, Base.Sort.Float.Right}"
37136	"Tuple{typeof(Base.Sort.Float.fpsort!), Array{Float64, 1}, Base.Sort.QuickSortAlg, Base.Order.ForwardOrdering}"
233877	"Tuple{typeof(DecisionTrees.define_candidates), Array{Float64, 1}, Int64}"
463803	"Tuple{typeof(Base.unsafe_copyto!), Array{Float64, 1}, Int64, Array{Float64, 1}, Int64, Int64}"
114568	"Tuple{getfield(Base, Symbol("##quantile#653")), Bool, Function, Array{Float64, 1}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}}"
988445	"Tuple{typeof(Base.extrema), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}}"
600889	"Tuple{typeof(Base.sort!), Array{Float64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.ForwardOrdering}"
333433	"Tuple{typeof(Base.Sort.partition!), Array{Float64, 1}, Int64, Int64, Base.Order.ForwardOrdering}"
77037	"Tuple{typeof(Base.sort!), Array{Float64, 1}, Int64, Int64, Base.Sort.PartialQuickSort{Base.UnitRange{Int64}}, Base.Order.ForwardOrdering}"
71506	"Tuple{typeof(Base._quantilesort!), Array{Float64, 1}, Bool, Float64, Float64}"
145778	"Tuple{typeof(Base.throw_boundserror), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Tuple{Int64}}"
310914	"Tuple{getfield(Base, Symbol("##quantile!#647")), Bool, Function, Array{Float64, 1}, Array{Float64, 1}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}}"
119309	"Tuple{getfield(Base, Symbol("#kw##sort!")), NamedTuple{(:alg,), Tuple{Base.Sort.QuickSortAlg}}, typeof(Base.sort!), Array{Float64, 1}}"
254419	"Tuple{typeof(Base.extrema), Array{Float64, 1}}"
84938	"Tuple{typeof(Base.indexed_iterate), Tuple{Float64, Float64}, Int64}"
78222	"Tuple{typeof(Base.indexed_iterate), Tuple{Float64, Float64}, Int64, Int64}"
201087	"Tuple{typeof(Base.deepcopy), Array{Float64, 1}}"
144592	"Tuple{typeof(Base.push!), Array{Array{Float64, 1}, 1}, Array{Float64, 1}}"
56099	"Tuple{typeof(Base.getindex), Array{Float64, 1}, Int64}"
92840	"Tuple{typeof(Base.max), Float64, Float64}"
56494	"Tuple{typeof(Base.setindex!), Array{Float64, 1}, Float64, Int64}"
318420	"Tuple{typeof(DecisionTrees.map_numdata_to_candidates), Array{Float64, 1}, Array{Float64, 1}}"
209778	"Tuple{typeof(Base.to_tuple_type), Any}"
77037	"Tuple{typeof(Base.all), Function, Core.SimpleVector}"
244544	"Tuple{typeof(Base._all), getfield(Base, Symbol("##11#12")), Core.SimpleVector, Base.Colon}"
394667	"Tuple{Type{DecisionTrees.PooledArraysDTM.PooledArray{Float64, R, N, RA} where RA where N where R<:Integer}, Array{Float64, 1}}"
29235	"Tuple{Type{DecisionTrees.PooledArraysDTM.PooledArray{T, R, N, RA} where RA where N where R<:Integer where T}, Array{Float64, 1}}"
122074	"Tuple{typeof(Base.method_exists), Function, Tuple{DataType, DataType}}"
449581	"Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, UnionAll}"
226766	"Tuple{typeof(Base.io_has_tvar_name), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Symbol, Any}"
54913	"Tuple{Type{Base.Pair{A, B} where B where A}, Symbol, TypeVar}"
103901	"Tuple{Type{Base.IOContext{IO_t} where IO_t<:IO}, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Base.Pair{Symbol, TypeVar}}"
589827	"Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, TypeVar}"
239802	"Tuple{getfield(Base, Symbol("#show_bound#369")), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Any}"
58864	"Tuple{typeof(Base.hasmethod), Any, Any}"
160790	"Tuple{getfield(Base, Symbol("##hasmethod#23")), UInt64, Function, Any, Any}"
282470	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, Type{T} where T, Int64, Type{T} where T}"
455506	"Tuple{Type{Array{UInt8, N} where N}, Tuple{Int64}}"
376890	"Tuple{Type{Base.Dict{Float64, UInt8}}}"
2067754	"Tuple{typeof(Base.rehash!), Base.Dict{Float64, UInt8}, Int64}"
82173	"Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Float64, UInt8}, Float64}"
156840	"Tuple{typeof(Base.setindex!), Base.Dict{Float64, UInt8}, Int64, Float64}"
455506	"Tuple{typeof(Base.ht_keyindex), Base.Dict{Float64, UInt8}, Float64}"
544396	"Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.max), Base.IndexLinear, Array{UInt8, 1}}"
120494	"Tuple{Type{DecisionTrees.PooledArraysDTM.PooledArray{T, R, N, RA} where RA where N where R<:Integer where T}, Array{Float64, 1}, Array{Float64, 1}, Type{UInt8}}"
77827	"Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Core.TypeName}"
533333	"Tuple{typeof(DataFrames.insert_single_column!), DataFrames.DataFrame, DecisionTrees.PooledArraysDTM.PooledArray{Float64, UInt8, 1, Array{UInt8, 1}}, Symbol}"
27260	"Tuple{typeof(Base.setindex!), DataFrames.DataFrame, DecisionTrees.PooledArraysDTM.PooledArray{Float64, UInt8, 1, Array{UInt8, 1}}, Symbol}"
68346	"Tuple{typeof(Base.length), DecisionTrees.PooledArraysDTM.PooledArray{Float64, UInt8, 1, Array{UInt8, 1}}}"
685037	"Tuple{typeof(Base.unique), Array{String, 1}}"
120099	"Tuple{Type{DecisionTrees.PooledArraysDTM.PooledArray{String, R, N, RA} where RA where N where R<:Integer}, Array{String, 1}}"
24099	"Tuple{Type{DecisionTrees.PooledArraysDTM.PooledArray{T, R, N, RA} where RA where N where R<:Integer where T}, Array{String, 1}}"
592198	"Tuple{Type{Base.Dict{String, UInt8}}}"
1975310	"Tuple{typeof(Base.rehash!), Base.Dict{String, UInt8}, Int64}"
77827	"Tuple{typeof(Base.ht_keyindex2!), Base.Dict{String, UInt8}, String}"
161975	"Tuple{typeof(Base.setindex!), Base.Dict{String, UInt8}, Int64, String}"
527408	"Tuple{typeof(Base.ht_keyindex), Base.Dict{String, UInt8}, String}"
225186	"Tuple{Type{DecisionTrees.PooledArraysDTM.PooledArray{T, R, N, RA} where RA where N where R<:Integer where T}, Array{String, 1}, Array{String, 1}, Type{UInt8}}"
588248	"Tuple{typeof(DataFrames.insert_single_column!), DataFrames.DataFrame, DecisionTrees.PooledArraysDTM.PooledArray{String, UInt8, 1, Array{UInt8, 1}}, Symbol}"
31605	"Tuple{typeof(Base.setindex!), DataFrames.DataFrame, DecisionTrees.PooledArraysDTM.PooledArray{String, UInt8, 1, Array{UInt8, 1}}, Symbol}"
158815	"Tuple{typeof(Base.size), DataFrames.DataFrame, Int64}"
104692	"Tuple{typeof(Base.map), Function, Base.UnitRange{Int64}}"
83753	"Tuple{Type{Base.Generator{I, F} where F where I}, getfield(DecisionTrees, Symbol("##96#99")), Base.UnitRange{Int64}}"
313284	"Tuple{getfield(DecisionTrees, Symbol("##96#99")), Int64}"
123655	"Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##96#99"))}, Base.EltypeUnknown, Base.HasShape{1}}"
24099	"Tuple{typeof(Base.collect_similar), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##96#99"))}}"
207803	"Tuple{typeof(Base._similar_for), Base.UnitRange{Int64}, Type{T} where T, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##96#99"))}, Base.HasShape{1}}"
114569	"Tuple{typeof(Base.similar), Base.UnitRange{Int64}, Type{Array{String, 1}}, Tuple{Base.OneTo{Int64}}}"
800395	"Tuple{typeof(Base.copyto!), Array{Array{String, 1}, 1}, Int64, Array{Array{String, 1}, 1}, Int64, Int64}"
66766	"Tuple{typeof(Base.collect_to!), Array{Array{String, 1}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##96#99"))}, Int64, Int64}"
29234	"Tuple{typeof(Base.collect_to_with_first!), Array{Array{String, 1}, 1}, Array{String, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##96#99"))}, Int64}"
218865	"Tuple{typeof(Base.deepcopy), Array{Array{String, 1}, 1}}"
64000	"Tuple{typeof(Base.similar), Array{Array{String, 1}, 1}}"
51753	"Tuple{typeof(Base.length), Array{Array{String, 1}, 1}}"
146173	"Tuple{typeof(Base.deepcopy_internal), Array{String, 1}, Base.IdDict{Any, Any}}"
48988	"Tuple{typeof(Base.:(!=)), Float64, Float64}"
44247	"Tuple{typeof(Base.string), String, Float64, Vararg{Any, N} where N}"
71111	"Tuple{Type{Base.Generator{I, F} where F where I}, getfield(DecisionTrees, Symbol("##97#100")), Base.UnitRange{Int64}}"
324346	"Tuple{getfield(DecisionTrees, Symbol("##97#100")), Int64}"
130370	"Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##97#100"))}, Base.EltypeUnknown, Base.HasShape{1}}"
27655	"Tuple{typeof(Base.collect_similar), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##97#100"))}}"
206223	"Tuple{typeof(Base._similar_for), Base.UnitRange{Int64}, Type{T} where T, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##97#100"))}, Base.HasShape{1}}"
93235	"Tuple{typeof(Base.similar), Base.UnitRange{Int64}, Type{Array{Float64, 1}}, Tuple{Base.OneTo{Int64}}}"
638025	"Tuple{typeof(Base.copyto!), Array{Array{Float64, 1}, 1}, Int64, Array{Array{Float64, 1}, 1}, Int64, Int64}"
62025	"Tuple{typeof(Base.collect_to!), Array{Array{Float64, 1}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##97#100"))}, Int64, Int64}"
27259	"Tuple{typeof(Base.collect_to_with_first!), Array{Array{Float64, 1}, 1}, Array{Float64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##97#100"))}, Int64}"
603260	"Tuple{typeof(Base.copyto!), Array{Array{T, 1} where T, 1}, Int64, Array{Array{Float64, 1}, 1}, Int64, Int64}"
78617	"Tuple{typeof(Base.setindex!), Array{Array{T, 1} where T, 1}, Array{String, 1}, Int64}"
262321	"Tuple{typeof(Base.collect_to!), Array{Array{T, 1} where T, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##97#100"))}, Int64, Int64}"
35556	"Tuple{typeof(Base.Broadcast.broadcastable), Array{Array{T, 1} where T, 1}}"
63210	"Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.DefaultArrayStyle{1}, Function, Array{Array{T, 1} where T, 1}}"
62025	"Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.length), Tuple{Array{Array{T, 1} where T, 1}}}"
707161	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.length), Tuple{Base.Broadcast.Extruded{Array{Array{T, 1} where T, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}}"
86914	"Tuple{typeof(Base.getindex), Array{Array{T, 1} where T, 1}, Int64}"
105481	"Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.length), Tuple{Array{Array{T, 1} where T, 1}}}}"
65975	"Tuple{typeof(Base.getindex), Array{Int64, 1}, Int64}"
32395	"Tuple{typeof(Base.Broadcast.broadcastable), Array{String, 1}}"
48987	"Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.DefaultArrayStyle{1}, Function, Array{String, 1}}"
50173	"Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.isvalid), Tuple{Array{String, 1}}}"
34371	"Tuple{typeof(Base.Broadcast.broadcastable), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.isvalid), Tuple{Array{String, 1}}}}"
47013	"Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.DefaultArrayStyle{1}, Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.isvalid), Tuple{Array{String, 1}}}}"
48987	"Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(!)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.isvalid), Tuple{Array{String, 1}}}}}"
973828	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(!)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.isvalid), Tuple{Base.Broadcast.Extruded{Array{String, 1}, Tuple{Bool}, Tuple{Int64}}}}}}, Tuple{Int64}}"
497778	"Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.isvalid), Tuple{Array{String, 1}}}}}}"
328297	"Tuple{typeof(Base.throw_boundserror), Array{String, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}}"
613531	"Tuple{typeof(Base.throw_checksize_error), Array{String, 1}, Tuple{Base.OneTo{Int64}}}"
53334	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{String, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}}"
45037	"Tuple{typeof(Base.getindex), Array{String, 1}, Base.BitArray{1}}"
107852	"Tuple{typeof(Base.repr), Array{String, 1}}"
57680	"Tuple{typeof(Base.length), Base.BitArray{1}}"
235457	"Tuple{typeof(Base.getindex), Base.BitArray{1}, Int64}"
660148	"Tuple{typeof(DecisionTrees.cleanString), String}"
282470	"Tuple{Type{Array{Int64, 1}}, Int64}"
207407	"Tuple{typeof(DecisionTrees.createIntegerIndices), Array{UInt8, 1}}"
1110519	"Tuple{typeof(Base._sortedfindin), Array{Int64, 1}, Array{Int64, 1}}"
512000	"Tuple{typeof(Base.union!), Base.Set{Int64}, Array{Int64, 1}}"
152889	"Tuple{typeof(Base._findin), Array{Int64, 1}, Array{Int64, 1}}"
49383	"Tuple{typeof(Base.findall), Base.Fix2{typeof(Base.in), Array{Int64, 1}}, Array{Int64, 1}}"
21333	"Tuple{typeof(Base.findin), Array{Int64, 1}, Array{Int64, 1}}"
106272	"Tuple{Type{DecisionTrees.DTMTable}, Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, DataFrames.DataFrame, Array{Array{Float64, 1}, 1}, Array{Array{String, 1}, 1}}"
97580	"Tuple{typeof(Base.indexed_iterate), Tuple{DecisionTrees.DTMTable, DecisionTrees.ModelSettings, DataFrames.DataFrame}, Int64}"
80593	"Tuple{typeof(Base.indexed_iterate), Tuple{DecisionTrees.DTMTable, DecisionTrees.ModelSettings, DataFrames.DataFrame}, Int64, Int64}"
90865	"Tuple{typeof(Base.setproperty!), DecisionTrees.ModelSettings, Symbol, Float64}"
56889	"Tuple{typeof(Base.convert), Type{Float64}, Float64}"
262716	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, Expr, Expr, Expr, Vararg{Any, N} where N}"
186074	"Tuple{typeof(Core.Compiler.getindex), Tuple{Float32, Int64}, Int64}"
811853	"Tuple{typeof(Base.getindex), Tuple{Symbol}, Base.UnitRange{Int64}}"
658173	"Tuple{typeof(Base.getindex), Tuple{Symbol, Symbol, Symbol}, Base.UnitRange{Int64}}"
152099	"Tuple{typeof(Core.Compiler.getindex), Tuple{Bool, Base.Sort.QuickSortAlg}, Int64}"
129580	"Tuple{typeof(Core.Compiler.getindex), Tuple{Expr, Int64}, Int64}"
301827	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, QuoteNode, Core.Compiler.Argument, Core.SSAValue}"
285235	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, Tuple{}, Core.SSAValue, Core.SSAValue}"
135112	"Tuple{typeof(Core.Compiler.getindex), Tuple{NamedTuple{(:dims,), Tuple{Base.Val{2}}}, typeof(Base.cat)}, Int64}"
94814	"Tuple{typeof(Core.Compiler.getindex), Tuple{Base.Val{2}, typeof(Base.cat)}, Int64}"
64790	"Tuple{typeof(Core.Compiler.getindex), Tuple{NamedTuple{(:dims,), Tuple{Base.Val{2}}}, typeof(Base.cat_t), DataType}, Int64}"
55308	"Tuple{typeof(Core.Compiler.getindex), Tuple{Base.Val{2}, typeof(Base.cat_t), DataType}, Int64}"
50173	"Tuple{typeof(Core.Compiler.getindex), Tuple{Base.Val{2}, DataType}, Int64}"
111012	"Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Bool, Bool}, Tuple{}}, Int64}"
139457	"Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Int64}, Tuple{Int64}}, Int64}"
119308	"Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Bool, Bool}, Tuple{Int64, Int64}}, Int64}"
302617	"Tuple{typeof(Base._compute_eltype), Type{Tuple{Array{String, 2}, Array{String, 2}, Array{Any, 2}, Array{String, 2}, Array{String, 2}, Array{String, 2}, Array{String, 2}, Array{Any, 2}, Array{String, 2}, Array{String, 2}}}}"
440494	"Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}"
254420	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}"
261136	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, Int64, Core.SSAValue, Int64, Vararg{Any, N} where N}"
289976	"Tuple{typeof(Base._compute_eltype), Type{Tuple{Bool, Bool, String, Int64, Int64, String}}}"
212543	"Tuple{getfield(Base, Symbol("##s624#409")), Any, Any, Any, Any, Any, Any}"
260346	"Tuple{getfield(Base.Cartesian, Symbol("#@ntuple")), LineNumberNode, Module, Int64, Any}"
157630	"Tuple{typeof(Base.Cartesian._nloops), Int64, Symbol, Symbol, Expr, Vararg{Expr, N} where N}"
344099	"Tuple{typeof(Base.Cartesian._nloops), Int64, Symbol, Expr, Expr, Vararg{Expr, N} where N}"
34371	"Tuple{typeof(Base.Cartesian.lreplace!), QuoteNode, Base.Cartesian.LReplace{String}}"
32000	"Tuple{typeof(Base.Cartesian.exprresolve), QuoteNode}"
224395	"Tuple{typeof(Base.haskey), Base.Dict{Symbol, Function}, Expr}"
128395	"Tuple{getfield(Core.Compiler, Symbol("##117#118")){Int64}, Int64}"
275753	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, UInt32, Core.SSAValue, Core.Compiler.Argument, Vararg{Any, N} where N}"
94025	"Tuple{getfield(Core.Compiler, Symbol("##188#189")), JLD2.OnDiskRepresentation{(0, 16), Tuple{String, Array{Any, 1}}, Tuple{JLD2.Vlen{String}, JLD2.Vlen{JLD2.RelOffset}}}}"
124839	"Tuple{typeof(JLD2.odr_sizeof), DataType}"
257976	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, JLD2.OnDiskRepresentation{(0, 16), Tuple{String, Array{Any, 1}}, Tuple{JLD2.Vlen{String}, JLD2.Vlen{JLD2.RelOffset}}}}"
284840	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, Core.Compiler.Argument, Core.SSAValue, Int64, Vararg{Any, N} where N}"
277334	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, Core.Compiler.Argument, Core.SSAValue, Core.SSAValue, Vararg{Any, N} where N}"
264691	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, Core.SSAValue, Float64, Core.SSAValue, Vararg{Core.SSAValue, N} where N}"
317234	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, Expr, Core.SSAValue}"
283655	"Tuple{typeof(Base._compute_eltype), Type{Tuple{Array{String, 2}, Array{Any, 2}}}}"
382025	"Tuple{typeof(Base.diff_names), Tuple{Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}"
272988	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, Core.SSAValue, Int64, Int64, Vararg{Any, N} where N}"
297086	"Tuple{typeof(Base._compute_eltype), Type{Tuple{Array{String, 2}, Array{Float64, 2}}}}"
153679	"Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{Int64}}, Int64}"
88098	"Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}}, Int64}"
69135	"Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}}, Int64}"
63210	"Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}}, Int64}"
67951	"Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}}, Int64}"
67951	"Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}}, Int64}"
114568	"Tuple{typeof(Core.Compiler.getindex), Tuple{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(FileIO.save), String}, Int64}"
103901	"Tuple{getfield(Core.Compiler, Symbol("##192#193")), Core.Compiler.Const, Type{T} where T}"
280889	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, Core.SSAValue, String, Int64, Vararg{Any, N} where N}"
343309	"Tuple{getfield(StatsBase, Symbol("##s174#130")), Type{T} where T, Type{T} where T, Tuple{DataType}}"
278914	"Tuple{typeof(Base._compute_eltype), Type{Tuple{Array{Any, 2}, Array{String, 2}}}}"
136296	"Tuple{typeof(Core.Compiler.getindex), Tuple{Int64, String, Float64}, Int64}"
126025	"Tuple{typeof(Core.Compiler.getindex), Tuple{Int64, String, String, Float64, Float64}, Int64}"
456296	"Tuple{getfield(JLD2, Symbol("##s36#29")), Type{T} where T, Type{T} where T, Type{T} where T}"
253630	"Tuple{typeof(JLD2.hasdata), DataType}"
32395	"Tuple{typeof(JLD2.writeas), Type{T} where T}"
125235	"Tuple{typeof(JLD2.hasfielddata), Type{T} where T}"
87704	"Tuple{typeof(Base.zeros), Type{Int64}, Int64}"
65186	"Tuple{typeof(Base.:(<=)), Int64, Int32}"
114963	"Tuple{getfield(JLD2, Symbol("##s36#21")), Type{T} where T, Type{T} where T, Type{T} where T, Type{T} where T}"
48987	"Tuple{getfield(Core.Compiler, Symbol("##188#189")), Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64}}"
438124	"Tuple{Type{PyCall.PyObject}, UInt64}"
158420	"Tuple{typeof(JLD2.samelayout), DataType}"
104691	"Tuple{getfield(Core.Compiler, Symbol("##188#189")), Tuple{Int64, Int64}}"
132346	"Tuple{typeof(JLD2.odr_sizeof), JLD2.OnDiskRepresentation{(0, 16), Tuple{String, Array{Any, 1}}, Tuple{JLD2.Vlen{String}, JLD2.Vlen{JLD2.RelOffset}}}}"
116148	"Tuple{getfield(JLD2, Symbol("##s36#30")), Type{T} where T, Type{T} where T, Type{T} where T}"
107061	"Tuple{typeof(Base.iterate), Core.SimpleVector}"
39112	"Tuple{typeof(Base.:(==)), JLD2.HasReferences, JLD2.HasReferences}"
92444	"Tuple{typeof(JLD2.ismutabletype), DataType}"
90864	"Tuple{getfield(Core.Compiler, Symbol("##188#189")), JLD2.OnDiskRepresentation{(0, 8, 16, 24, 32, 40, 48, 56, 64), Tuple{Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, DataFrames.DataFrame, Array{Array{Float64, 1}, 1}, Array{Array{String, 1}, 1}}, Tuple{JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset}}}"
231901	"Tuple{typeof(Core.Compiler.getindex), Type{Any}, Any, JLD2.OnDiskRepresentation{(0, 8, 16, 24, 32, 40, 48, 56, 64), Tuple{Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, DataFrames.DataFrame, Array{Array{Float64, 1}, 1}, Array{Array{String, 1}, 1}}, Tuple{JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset}}}"
175803	"Tuple{typeof(JLD2.odr_sizeof), JLD2.OnDiskRepresentation{(0, 8, 16, 24, 32, 40, 48, 56, 64), Tuple{Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, DataFrames.DataFrame, Array{Array{Float64, 1}, 1}, Array{Array{String, 1}, 1}}, Tuple{JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset}}}"
126815	"Tuple{typeof(Core.Compiler.getindex), Tuple{String, String}, Int64}"
399802	"Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol}}"
11862527	"Tuple{getfield(DecisionTrees, Symbol("##101#106")), Int64}"
145778	"Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##101#106"))}, Base.EltypeUnknown, Base.HasShape{1}}"
814223	"Tuple{typeof(Base.cmd_gen), Tuple{Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}}}"
1045729	"Tuple{typeof(Base.open), Base.Cmd, String, Base.DevNullStream}"
226766	"Tuple{typeof(Base.read), Base.Cmd}"
17383	"Tuple{typeof(Base.read), Base.Cmd, Type{String}}"
16987	"Tuple{typeof(Base.readstring), Base.Cmd}"
354371	"Tuple{typeof(Base.Filesystem.cd), String}"
50568	"Tuple{typeof(DecisionTrees.get_sha1)}"
3602176	"Tuple{typeof(Base.hash), Array{Float64, 1}, UInt64}"
1104198	"Tuple{typeof(Base.:(>=)), PyCall.PyObject, PyCall.PyObject}"
463803	"Tuple{getfield(DecisionTrees, Symbol("##102#107")), Int64}"
129975	"Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##102#107"))}, Base.EltypeUnknown, Base.HasShape{1}}"
312494	"Tuple{getfield(DecisionTrees, Symbol("##103#108")), Int64}"
119309	"Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##103#108"))}, Base.EltypeUnknown, Base.HasShape{1}}"
272593	"Tuple{Type{PyCall.PyObject}, UInt8}"
353185	"Tuple{typeof(DecisionTrees.print_some_settings), DecisionTrees.ModelSettings, Array{String, 1}}"
1648989	"Tuple{typeof(Base.vect), DecisionTrees.Leaf}"
82963	"Tuple{typeof(DecisionTrees.create_leaves_array), DecisionTrees.Tree}"
18225793	"Tuple{typeof(Base.getindex), Array{DecisionTrees.Rulepath{T} where T<:Unsigned, 1}, Int64}"
723753	"Tuple{typeof(Base.push!), Array{Int64, 1}, Nothing}"
276149	"Tuple{typeof(DecisionTrees.variable_importance_internal), Array{DecisionTrees.Leaf, 1}, Array{String, 1}, Int64}"
400592	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(/)), Tuple{Base.Broadcast.Extruded{Array{Int64, 1}, Tuple{Bool}, Tuple{Int64}}, Int64}}, Tuple{Int64}}"
217680	"Tuple{Type{Array{String, N} where N}, Int64, Int64}"
383210	"Tuple{typeof(Base.throw_boundserror), Array{String, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}}"
525827	"Tuple{typeof(Base.setindex_shape_check), Array{String, 1}, Int64, Int64}"
142223	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{String, 2}, Array{String, 1}, Base.Slice{Base.OneTo{Int64}}, Int64}"
920494	"Tuple{typeof(Base.Broadcast.broadcast), typeof(Base.:(/)), Array{Int64, 1}, Int64}"
336593	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(>)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Int64}}, Tuple{Int64}}"
577976	"Tuple{typeof(Base.throw_boundserror), Array{String, 2}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}, Base.Slice{Base.OneTo{Int64}}}}"
866371	"Tuple{typeof(Base.throw_checksize_error), Array{String, 2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}}"
76247	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{String, 2}, Base.LogicalIndex{Int64, Base.BitArray{1}}, Base.Slice{Base.OneTo{Int64}}}"
170272	"Tuple{typeof(Base.throw_boundserror), Array{Float64, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}}"
626963	"Tuple{typeof(Base.throw_checksize_error), Array{Float64, 1}, Tuple{Base.OneTo{Int64}}}"
52543	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}}"
1001878	"Tuple{typeof(Base.throw_boundserror), Array{String, 2}, Tuple{Array{Int64, 1}, Base.Slice{Base.OneTo{Int64}}}}"
531358	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{String, 2}, Array{Int64, 1}, Base.Slice{Base.OneTo{Int64}}}"
592593	"Tuple{typeof(DecisionTrees.variable_importance), Array{DecisionTrees.Leaf, 1}, Array{String, 1}, Int64}"
431408	"Tuple{Type{Array{DecisionTrees.ExcelSheet, N} where N}, Int64}"
86519	"Tuple{Type{Array{DecisionTrees.Chart, N} where N}, Int64}"
40296	"Tuple{typeof(DecisionTrees.createSingleTreeExcel), Array{Int64, 1}, Array{Int64, 1}, DecisionTrees.ModelSettings, DecisionTrees.Tree, Array{DecisionTrees.Leaf, 1}, Array{Float64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}"
860445	"Tuple{typeof(Base.getindex), Array{Any, 2}, Int64}"
77827	"Tuple{typeof(Base.permutedims!), Array{Any, 2}, Array{Any, 2}, Tuple{Int64, Int64}}"
170667	"Tuple{typeof(Base.throw_boundserror), Array{Any, 2}, Tuple{Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}}"
766815	"Tuple{typeof(Base.throw_checksize_error), Array{Any, 2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}}"
67556	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Any, 2}, Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}"
594173	"Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Float64, 2}, Base.IndexLinear, Array{Any, 2}}"
448791	"Tuple{typeof(DataFrames.gennames), Int64}"
155654	"Tuple{typeof(Base.throw_boundserror), Array{Any, 2}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}}"
198322	"Tuple{typeof(Base.throw_boundserror), Base.SubArray{Any, 1, Array{Any, 2}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{Int64}}"
1084445	"Tuple{typeof(DecisionTrees.nodesize), DecisionTrees.Tree}"
96790	"Tuple{typeof(DecisionTrees.number_of_nodes), DecisionTrees.Tree}"
63210	"Tuple{typeof(DecisionTrees.maxdepth), DecisionTrees.Tree}"
898371	"Tuple{typeof(Base.hidigit), Float64, Int64}"
312099	"Tuple{typeof(Base._round), Float64, Base.Rounding.RoundingMode{:Nearest}, Int64, Nothing, Int64}"
33185	"Tuple{typeof(Base.signif), Float64, Int64}"
183704	"Tuple{typeof(Base.round), Float64, Int64}"
196741	"Tuple{typeof(DecisionTrees.graph), DecisionTrees.Tree}"
822914	"Tuple{typeof(DecisionTrees.write_tree), Array{Array{Float64, 1}, 1}, DecisionTrees.Leaf, Int64, Array{String, 2}, Array{String, 2}, Int64, Base.IOStream, Array{String, 1}, Array{Array{String, 1}, 1}}"
60445	"Tuple{typeof(DecisionTrees.write_tree), Array{Array{Float64, 1}, 1}, DecisionTrees.Tree, Int64, Array{String, 2}, Array{String, 2}, Int64, String, Array{String, 1}, Array{Array{String, 1}, 1}}"
12984504	"Tuple{typeof(Base.throw_boundserror), Array{Float64, 1}, Tuple{Array{Int64, 1}}}"
128000	"Tuple{typeof(Base.throw_boundserror), Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Tuple{Int64}}"
518321	"Tuple{typeof(Base.mapfoldl_impl), typeof(Base.identity), typeof(Base.add_sum), Float64, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Tuple{Base.OneTo{Int64}, Int64}}"
961976	"Tuple{typeof(DecisionTrees.initSettingsWhichAreTheSameForBoostingAndBagging), Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, DecisionTrees.ModelSettings}"
239803	"Tuple{Type{Array{Float64, N} where N}, Int64}"
333827	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Float64}}, Tuple{Int64}}"
376495	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}}"
237432	"Tuple{Type{Array{Array{Array{Int64, 1}, 1}, N} where N}, Int64}"
109037	"Tuple{Type{Array{Array{Int64, 1}, N} where N}, Int64}"
154864	"Tuple{Type{Array{Union{DecisionTrees.Leaf, DecisionTrees.Node{UInt16}, DecisionTrees.Node{UInt8}}, N} where N}, Int64}"
97186	"Tuple{Type{Array{Float64, N} where N}, Int64, Int64}"
204247	"Tuple{typeof(Base.deepcopy), Array{Float64, 2}}"
86518	"Tuple{Type{Array{Int64, N} where N}, Int64, Int64}"
122469	"Tuple{typeof(Base.throw_boundserror), Array{Int64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}}"
353581	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Int64, 2}, Int64, Base.Slice{Base.OneTo{Int64}}, Int64}"
454716	"Tuple{typeof(Base.throw_boundserror), LinearAlgebra.Transpose{Float64, Array{Float64, 1}}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}}"
128791	"Tuple{typeof(Base.copyto!), LinearAlgebra.Transpose{Float64, Array{Float64, 1}}, LinearAlgebra.Transpose{Float64, Array{Float64, 1}}}"
142222	"Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}}"
834371	"Tuple{typeof(Base.setindex_shape_check), LinearAlgebra.Transpose{Float64, Array{Float64, 1}}, Int64, Int64}"
314074	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Float64, 2}, LinearAlgebra.Transpose{Float64, Array{Float64, 1}}, Base.Slice{Base.OneTo{Int64}}, Int64}"
269038	"Tuple{Type{Array{Array{DecisionTrees.Leaf, 1}, N} where N}, Int64}"
90864	"Tuple{Type{Array{DecisionTrees.Leaf, N} where N}, Int64}"
141037	"Tuple{typeof(ProgressMeter.tty_width), String}"
3174718	"Tuple{typeof(Base.deepcopy), Array{Int64, 1}}"
1853237	"Tuple{typeof(DecisionTrees.randint), Int64}"
127605	"Tuple{typeof(DecisionTrees.randomFeatureSelection), Int64, Float64}"
163555	"Tuple{typeof(DecisionTrees.some_tree_settings), Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{String, 1}, 1}, Float64, Array{Float64, 1}, Float64, Int64}"
310914	"Tuple{Type{Array{Union{Array{Float64, 1}, Array{String, 1}}, 1}}, Int64}"
123259	"Tuple{typeof(DecisionTrees.get_feature_pools), DataFrames.DataFrame}"
2662324	"Tuple{typeof(DecisionTrees.find_max_type), DataFrames.DataFrame}"
997136	"Tuple{typeof(DecisionTrees.printover), String}"
1453828	"Tuple{Type{PyCall.PyObject}, Float64}"
3370275	"Tuple{getfield(Distributed, Symbol("##131#132")){Distributed.ProcessGroup, Distributed.RRID, typeof(Distributed.def_rv_channel)}}"
60049	"Tuple{typeof(Base.lock), getfield(Distributed, Symbol("##131#132")){Distributed.ProcessGroup, Distributed.RRID, typeof(Distributed.def_rv_channel)}, Base.Threads.RecursiveTatasLock}"
39111	"Tuple{typeof(Distributed.fetch_ref), Distributed.RRID}"
365433	"Tuple{getfield(Distributed, Symbol("##137#138")){Distributed.ProcessGroup, Distributed.RRID, Int64}}"
47802	"Tuple{typeof(Base.lock), getfield(Distributed, Symbol("##137#138")){Distributed.ProcessGroup, Distributed.RRID, Int64}, Base.Threads.RecursiveTatasLock}"
133531	"Tuple{typeof(Distributed.send_del_client), Distributed.Future}"
24494	"Tuple{typeof(Base.fetch), Distributed.Future}"
581926	"Tuple{typeof(DecisionTrees.build_tree_iteration!), Array{Int64, 1}, Array{Int64, 1}, DecisionTrees.ModelSettings, DecisionTrees.Tree, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, DataFrames.DataFrame, Int64, Float64, Array{DecisionTrees.Rulepath{T} where T<:Unsigned, 1}, Bool, Int64, Array{Float64, 1}}"
99161	"Tuple{typeof(Base.setproperty!), DecisionTrees.Tree, Symbol, DecisionTrees.Leaf}"
458272	"Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Array{DecisionTrees.Leaf, 1}, getfield(DecisionTrees, Symbol("##17#18"))}, Int64, Int64}"
30815	"Tuple{typeof(Base._collect), Array{DecisionTrees.Leaf, 1}, Base.Generator{Array{DecisionTrees.Leaf, 1}, getfield(DecisionTrees, Symbol("##17#18"))}, Base.EltypeUnknown, Base.HasShape{1}}"
109037	"Tuple{typeof(DecisionTrees.set_leaf_numbers!), DecisionTrees.Tree}"
96000	"Tuple{typeof(DecisionTrees.build_tree!), Array{Int64, 1}, Array{Int64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{String, 1}, 1}, DecisionTrees.ModelSettings, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, DataFrames.DataFrame, Array{Float64, 1}}"
713482	"Tuple{typeof(Base.unique), Array{Int64, 1}}"
417185	"Tuple{typeof(Base.Sort.searchsorted), Array{Int64, 1}, Int64, Int64, Int64, Base.Order.ForwardOrdering}"
1398915	"Tuple{typeof(DecisionTrees.sampleData!), Array{Int64, 1}, Int64, Array{Int64, 1}}"
261926	"Tuple{typeof(DecisionTrees.apply_tree_by_leaf_iteration!), Array{Int64, 1}, DecisionTrees.Leaf, DataFrames.DataFrame, Array{Float64, 1}, Array{Int64, 1}}"
172642	"Tuple{typeof(DecisionTrees.apply_tree_by_leaf_iteration!), Array{Int64, 1}, DecisionTrees.Node{UInt16}, DataFrames.DataFrame, Array{Float64, 1}, Array{Int64, 1}}"
149334	"Tuple{typeof(DecisionTrees.apply_tree_by_leaf_iteration!), Array{Int64, 1}, DecisionTrees.Node{UInt8}, DataFrames.DataFrame, Array{Float64, 1}, Array{Int64, 1}}"
56494	"Tuple{typeof(DecisionTrees.sample_data_and_build_tree!), Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{String, 1}, 1}, DecisionTrees.ModelSettings, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, DataFrames.DataFrame, Int64, Int64, Array{Int64, 1}}"
942618	"Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.min), Base.IndexLinear, Array{Float64, 1}}"
333827	"Tuple{typeof(Base.getindex), Array{Union{DecisionTrees.Leaf, DecisionTrees.Node{UInt16}, DecisionTrees.Node{UInt8}}, 1}, Int64}"
941433	"Tuple{typeof(Base.setindex_shape_check), Array{Int64, 1}, Int64, Int64}"
133531	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Int64, 2}, Array{Int64, 1}, Base.Slice{Base.OneTo{Int64}}, Int64}"
982519	"Tuple{typeof(DecisionTrees.update_and_derive_scores!), Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}}"
1847310	"Tuple{typeof(DecisionTrees.correctSmallNegativeValues!), Array{Float64, 1}}"
1501236	"Tuple{typeof(Base.throw_boundserror), Array{Int64, 1}, Tuple{Array{Int64, 1}}}"
1216396	"Tuple{typeof(Base.mapfoldl_impl), getfield(Base, Symbol("##99#101")), typeof(Base.add_sum), Int64, Tuple{Array{Any, 2}, Array{Any, 2}}, Int64}"
1098273	"Tuple{typeof(Base.setindex_shape_check), Array{Any, 2}, Int64, Int64}"
237037	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Any, 2}, Array{Any, 2}, Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}"
96395	"Tuple{typeof(Base.typed_vcat), Type{Any}, Array{Any, 2}, Array{Any, 2}}"
752198	"Tuple{typeof(DecisionTrees.excelLetter), Int64}"
62420	"Tuple{typeof(Base.print_to_string), String, Vararg{Any, N} where N}"
197136	"Tuple{getfield(DecisionTrees, Symbol("#kw##defineRelativityChart")), NamedTuple{(:xscale,), Tuple{Float64}}, typeof(DecisionTrees.defineRelativityChart), String, String, String, Int64, Int64, Int64}"
4300645	"Tuple{typeof(Base.gc_enable), Bool}"
200297	"Tuple{typeof(DecisionTrees.map_these_values), Array{Float64, 1}, Array{Int64, 1}}"
3108348	"Tuple{typeof(Base.mapfoldl_impl), getfield(Base, Symbol("##99#101")), typeof(Base.add_sum), Int64, Tuple{Array{String, 2}, Array{Float64, 2}}, Int64}"
1032692	"Tuple{typeof(Base.setindex_shape_check), Array{Float64, 2}, Int64, Int64}"
165926	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Any, 2}, Array{Float64, 2}, Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}"
816198	"Tuple{typeof(Base.setindex_shape_check), Array{String, 2}, Int64, Int64}"
150914	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Any, 2}, Array{String, 2}, Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}"
101926	"Tuple{typeof(Base.typed_vcat), Type{Any}, Array{String, 2}, Array{Float64, 2}}"
877433	"Tuple{Type{Base.Dict{AbstractString, Base.Dict{AbstractString, Any}}}}"
690173	"Tuple{typeof(Base.isequal), PyCall.PyObject, String}"
1157137	"Tuple{typeof(Base.rehash!), Base.Dict{Any, Any}, Int64}"
64790	"Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, String}"
141432	"Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, String, String}"
442865	"Tuple{Type{Base.Dict{AbstractString, Any}}}"
136296	"Tuple{Type{Base.Dict{AbstractString, Any}}, Base.Dict{Any, Any}}"
1535211	"Tuple{typeof(Base.rehash!), Base.Dict{AbstractString, Base.Dict{AbstractString, Any}}, Int64}"
61235	"Tuple{typeof(Base.ht_keyindex2!), Base.Dict{AbstractString, Base.Dict{AbstractString, Any}}, String}"
252840	"Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, Base.Dict{AbstractString, Any}}, Base.Dict{Any, Any}, String}"
526617	"Tuple{typeof(Base.deepcopy_internal), Base.Dict{Any, Any}, Base.IdDict{Any, Any}}"
566124	"Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Bool, String}"
642766	"Tuple{typeof(Base.map), typeof(Base.Unicode.uppercase), String}"
48593	"Tuple{typeof(DecisionTrees.defineScoreChart), String, String, String, Int64, Int64, Int64, Int64, Int64}"
4861633	"Tuple{Type{Array{Any, 2}}, Int64, Int64}"
362667	"Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Array{Int64, 1}, Int64}}"
543211	"Tuple{typeof(Base.throw_boundserror), Base.SubArray{Float64, 1, Array{Float64, 2}, Tuple{Array{Int64, 1}, Int64}, false}, Tuple{Int64}}"
136296	"Tuple{typeof(DecisionTrees.calcErrors), Float64, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Base.SubArray{Float64, 1, Array{Float64, 2}, Tuple{Array{Int64, 1}, Int64}, false}}"
585877	"Tuple{typeof(DecisionTrees.tariffEstStats), Float64, Array{Float64, 1}, Array{Float64, 2}, Float64, Array{Int64, 1}, Array{Int64, 1}, String}"
1347557	"Tuple{typeof(DecisionTrees.calcErrors), Float64, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}}"
369778	"Tuple{typeof(DecisionTrees.tariffEstStats), Float64, Array{Float64, 1}, Array{Float64, 1}, Float64, Array{Int64, 1}, Array{Int64, 1}, String, Int64}"
296691	"Tuple{typeof(Base.throw_boundserror), Array{String, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}}}"
625778	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{String, 2}, Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}}"
163556	"Tuple{typeof(Base.throw_boundserror), Array{Any, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}}}"
591013	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Any, 2}, Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}}"
665284	"Tuple{typeof(Base.collect_to!), Array{String, 2}, Base.Generator{Array{String, 2}, getfield(DecisionTrees, Symbol("##19#21"))}, Int64, Int64}"
35556	"Tuple{typeof(Base.collect), Base.Generator{Array{String, 2}, getfield(DecisionTrees, Symbol("##19#21"))}}"
105877	"Tuple{typeof(Base._throw_dmrsa), Tuple{Int64, Int64}, Int64}"
561383	"Tuple{typeof(Base.collect_to!), Array{String, 2}, Base.Generator{Array{String, 2}, getfield(DecisionTrees, Symbol("##20#22"))}, Int64, Int64}"
35160	"Tuple{typeof(Base.collect), Base.Generator{Array{String, 2}, getfield(DecisionTrees, Symbol("##20#22"))}}"
775112	"Tuple{typeof(Base.mapfoldl_impl), getfield(Base, Symbol("##99#101")), typeof(Base.add_sum), Int64, Tuple{Array{String, 2}, Array{Any, 2}}, Int64}"
359507	"Tuple{typeof(Base.typed_vcat), Type{Any}, Array{String, 2}, Array{Any, 2}}"
751012	"Tuple{typeof(Base.unsafe_copyto!), Array{Any, 2}, Int64, Array{Any, 2}, Int64, Int64}"
749828	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Any, 2}, Array{Any, 2}, Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}}"
108247	"Tuple{typeof(Base.typed_hcat), Type{Any}, Array{Any, 2}, Array{Any, 2}}"
1865088	"Tuple{typeof(Base.floatrange), Type{Float64}, Int64, Int64, Int64, Int64}"
260741	"Tuple{Base.Colon, Float64, Float64, Float64}"
636445	"Tuple{typeof(Base.vcat), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}}"
2894225	"Tuple{typeof(Base.throw_boundserror), Array{String, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}"
549531	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{String, 2}, Array{String, 1}, Base.UnitRange{Int64}, Base.UnitRange{Int64}}"
90864	"Tuple{typeof(Base.repeat), Array{String, 1}, Int64, Int64}"
585482	"Tuple{typeof(Base.mapfoldl_impl), getfield(Base, Symbol("##99#101")), typeof(Base.add_sum), Int64, Tuple{Array{Any, 2}, Array{String, 2}}, Int64}"
341334	"Tuple{typeof(Base.typed_vcat), Type{Any}, Array{Any, 2}, Array{String, 2}}"
1252346	"Tuple{getfield(DecisionTrees, Symbol("#kw##defineChartWithNSeries")), NamedTuple{(:categoriescol, :yaxisformat, :xscale), Tuple{Int64, String, Float64}}, typeof(DecisionTrees.defineChartWithNSeries), String, String, String, String, Int64, Int64, Array{Int64, 1}, Int64, String, String, String}"
671606	"Tuple{getfield(DecisionTrees, Symbol("#kw##defineChartWithNSeries")), NamedTuple{(:categoriescol, :xaxisformat, :yaxisformat, :yscale, :xscale), Tuple{Int64, String, String, Float64, Float64}}, typeof(DecisionTrees.defineChartWithNSeries), String, String, String, String, Int64, Int64, Array{Int64, 1}, Int64, String, String, String}"
1098667	"Tuple{typeof(DecisionTrees.addTariffEstimationStatsAndGraphs!), DecisionTrees.ExcelData, Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 2}}"
449581	"Tuple{typeof(Base.collect_to!), Array{String, 1}, Base.Generator{Array{DecisionTrees.ExcelSheet, 1}, getfield(DecisionTrees, Symbol("##73#75"))}, Int64, Int64}"
33580	"Tuple{typeof(Base.collect), Base.Generator{Array{DecisionTrees.ExcelSheet, 1}, getfield(DecisionTrees, Symbol("##73#75"))}}"
8694921	"Tuple{typeof(Base.iterate), DataFrames.SubDataFrame{Array{Int64, 1}}}"
39506	"Tuple{typeof(Base.start), DataFrames.SubDataFrame{Array{Int64, 1}}}"
1020050	"Tuple{typeof(Base.collect_to!), Array{UInt8, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##74#76")){Array{Int64, 1}}}, Int64, Int64}"
50568	"Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##74#76")){Array{Int64, 1}}}, Base.EltypeUnknown, Base.HasShape{1}}"
2936891	"Tuple{typeof(DecisionTrees.boosted_tree), DecisionTrees.DTMTable, DecisionTrees.ModelSettings}"
1279606	"Tuple{typeof(DecisionTrees.csharp_write_pub_str), Base.IOStream, String, String}"
3327608	"Tuple{Type{Array{Array{Bool, 1}, N} where N}, Int64}"
235062	"Tuple{typeof(Base.throw_boundserror), Array{Array{Int64, 1}, 1}, Tuple{Base.UnitRange{Int64}}}"
1255902	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(|)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(>)), Tuple{Base.Broadcast.Extruded{Array{Int64, 1}, Tuple{Bool}, Tuple{Int64}}, Int64}}, Base.Broadcast.Extruded{Array{Bool, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}}"
1224692	"Tuple{typeof(Base.copyto!), Base.BitArray{1}, Base.BitArray{1}}"
23704	"Tuple{typeof(Base.unaliascopy), Base.BitArray{1}}"
208198	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Bool, 1}, Base.BitArray{1}, Base.Slice{Base.OneTo{Int64}}}"
4174225	"Tuple{typeof(DecisionTrees.determine_used_variables), DecisionTrees.BoostedTree}"
760890	"Tuple{Type{Array{Array{String, 1}, N} where N}, Int64}"
304592	"Tuple{typeof(Base.replace), String, Char, String}"
196346	"Tuple{typeof(Base.replace), String, Char, Char}"
784594	"Tuple{typeof(Base.:(==)), Array{String, 1}, Array{String, 1}}"
144987	"Tuple{typeof(DecisionTrees.write_and_create_boollist_num), Base.IOStream, Array{String, 1}, Int64, Array{Array{Float64, 1}, 1}, Array{Array{Bool, 1}, 1}}"
1491755	"Tuple{typeof(Base.replace), Base.SubString{String}, Char, String}"
231506	"Tuple{typeof(DecisionTrees.create_custom_string), String}"
293926	"Tuple{typeof(DecisionTrees.write_and_create_boollist_char), Base.IOStream, Array{Array{String, 1}, 1}, Array{String, 1}, Int64, Array{Array{Bool, 1}, 1}}"
370963	"Tuple{typeof(DecisionTrees.csharp_write_RequiredElementsProvided), Base.IOStream, Array{String, 1}, Array{Bool, 1}}"
734421	"Tuple{typeof(DecisionTrees.csharp_write_ScoreErrorResponseCodeCheck), Base.IOStream, Array{Array{String, 1}, 1}, Array{Array{String, 1}, 1}, Array{String, 1}, Array{Array{Float64, 1}, 1}, Array{Array{String, 1}, 1}, Array{Array{Bool, 1}, 1}, Array{Array{Bool, 1}, 1}, Array{Bool, 1}}"
1163062	"Tuple{typeof(Base.throw_boundserror), Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}}"
540050	"Tuple{typeof(DecisionTrees.csharp_write_elseif_ScoreMap), Base.IOStream, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}}"
275753	"Tuple{typeof(DecisionTrees.csharp_write_GenerateScore), Base.IOStream, DecisionTrees.BoostedTree}"
283655	"Tuple{typeof(DecisionTrees.csharp_write_writeIterations), Int64, Base.IOStream, Int64, DecisionTrees.BoostedTree, Array{Array{String, 1}, 1}, Array{Array{String, 1}, 1}, Array{String, 1}, Array{Array{Float64, 1}, 1}, Array{Array{String, 1}, 1}, Int64}"
180148	"Tuple{typeof(DecisionTrees.write_csharp_code), Array{Array{DecisionTrees.Leaf, 1}, 1}, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, DecisionTrees.BoostedTree, String, String, Array{Array{String, 1}, 1}, Int64, DecisionTrees.ModelSettings}"
1509927	"Tuple{typeof(DecisionTrees.write_and_create_boollist_num_vba), Base.IOStream, Array{String, 1}, Int64, Array{Array{Float64, 1}, 1}, Array{Array{Bool, 1}, 1}}"
851359	"Tuple{typeof(DecisionTrees.write_and_create_boollist_char_vba), Base.IOStream, Array{Array{String, 1}, 1}, Array{String, 1}, Int64, Array{Array{Bool, 1}, 1}}"
814618	"Tuple{typeof(DecisionTrees.vba_write_booleans), Base.IOStream, Array{Array{String, 1}, 1}, Array{Array{String, 1}, 1}, Array{String, 1}, Array{Array{Float64, 1}, 1}, Array{Array{String, 1}, 1}, Array{Array{Bool, 1}, 1}, Array{Array{Bool, 1}, 1}, Array{Bool, 1}}"
479210	"Tuple{typeof(DecisionTrees.vba_write_writeIterations_recursive), Float64, Int64, Base.IOStream, DecisionTrees.Leaf, Array{Array{String, 1}, 1}, Array{Array{String, 1}, 1}, Array{String, 1}, Array{Array{Float64, 1}, 1}, Array{Array{String, 1}, 1}, Int64}"
58469	"Tuple{typeof(DecisionTrees.vba_write_writeIterations), Int64, Base.IOStream, Int64, DecisionTrees.BoostedTree, Array{Array{String, 1}, 1}, Array{Array{String, 1}, 1}, Array{String, 1}, Array{Array{Float64, 1}, 1}, Array{Array{String, 1}, 1}, Int64}"
2184298	"Tuple{typeof(DecisionTrees.vba_write_elseif_ScoreMap), Base.IOStream, Int64, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}}"
57679	"Tuple{typeof(DecisionTrees.vba_write_ScoreMap), Base.IOStream, Array{Float64, 1}, Array{Float64, 1}}"
103507	"Tuple{typeof(DecisionTrees.write_vba_code), Array{Array{DecisionTrees.Leaf, 1}, 1}, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, DecisionTrees.BoostedTree, String, String, Array{Array{String, 1}, 1}, Int64, DecisionTrees.ModelSettings}"
877433	"Tuple{typeof(DecisionTrees.write_tree), Array{Array{Float64, 1}, 1}, DecisionTrees.Leaf, Int64, Int64, String, Array{String, 1}, Array{Array{String, 1}, 1}}"
8472500	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Base.Broadcast.Extruded{Array{Int64, 1}, Tuple{Bool}, Tuple{Int64}}, Int64}}, Tuple{Int64}}"
604445	"Tuple{typeof(Base.vcat), Array{Int64, 1}, Array{Int64, 1}}"
378864	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(+)), Tuple{Base.Broadcast.Extruded{Array{Int64, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Extruded{Array{Int64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}}"
547952	"Tuple{typeof(DecisionTrees.calcIterationsPerCore), Int64, Int64}"
2382619	"Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Array{DecisionTrees.TreeWithErrorStats, 1}, getfield(DecisionTrees, Symbol("##23#24")){String}}, Int64, Int64}"
43852	"Tuple{typeof(Base.collect), Base.Generator{Array{DecisionTrees.TreeWithErrorStats, 1}, getfield(DecisionTrees, Symbol("##23#24")){String}}}"
28554294	"Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.add_sum), Array{Float64, 1}, Int64, Int64, Int64}"
170271	"Tuple{typeof(DecisionTrees.customInverseNormalized!), Array{Float64, 1}}"
357532	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.isfinite), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}}"
1316741	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Int64}}, Tuple{Int64}}"
129186	"Tuple{typeof(Base.Broadcast.broadcast), typeof(Base.:(*)), Array{Float64, 1}, Int64}"
788939	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(/)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Int64}}, Tuple{Int64}}"
120889	"Tuple{typeof(Base.Broadcast.broadcast), typeof(Base.:(/)), Array{Float64, 1}, Int64}"
183703	"Tuple{typeof(DecisionTrees.defineWeightPerTree), Array{DecisionTrees.TreeWithErrorStats, 1}, String}"
1142915	"Tuple{typeof(DecisionTrees.bagged_tree), DecisionTrees.DTMTable, DecisionTrees.ModelSettings}"
387951	"Tuple{typeof(Base._toq)}"
1466075	"Tuple{typeof(Base.arg_gen), Array{String, 1}}"
197926	"Tuple{typeof(Base.cmd_gen), Tuple{Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}, Tuple{String}, Tuple{Array{String, 1}}}}"
165926	"Tuple{typeof(DecisionTrees.createZipFile), String, Array{String, 1}, Bool}"
3177879	"Tuple{typeof(DecisionTrees.run_model_actual), DecisionTrees.DTMTable, DecisionTrees.ModelSettings, String}"
45432	"Tuple{typeof(DecisionTrees.dtm), DecisionTrees.DTMTable, DecisionTrees.ModelSettings}"
238617	"Tuple{typeof(Base.task_local_storage), Symbol, Tuple{UInt64, Tuple{UInt64, Tuple{}}}}"
180149	"Tuple{typeof(Base.deepcopy_internal), Array{Int64, 1}, Base.IdDict{Any, Any}}"
175012	"Tuple{typeof(Base.deepcopy_internal), Array{Float64, 1}, Base.IdDict{Any, Any}}"
194766	"Tuple{typeof(Base.issorted), Array{Int64, 1}}"
112988	"Tuple{typeof(Base.Sort.searchsorted), Array{Int64, 1}, Int64}"
130371	"Tuple{typeof(Base.length), Base.UnitRange{Int64}}"
189235	"Tuple{typeof(Base._similar_for), Base.UnitRange{Int64}, Type{T} where T, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##101#106"))}, Base.HasShape{1}}"
94815	"Tuple{typeof(Base.similar), Base.UnitRange{Int64}, Type{Int64}, Tuple{Base.OneTo{Int64}}}"
448396	"Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##101#106"))}, Int64, Int64}"
28444	"Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##101#106"))}, Int64}"
180938	"Tuple{typeof(Base.which), Any, Any}"
257185	"Tuple{getfield(Base, Symbol("##open#510")), Bool, Bool, Function, Base.Cmd, Base.DevNullStream}"
116149	"Tuple{typeof(Base._spawn), Base.Cmd, Tuple{Base.DevNullStream, Base.Pipe, Base.TTY}}"
2164545	"Tuple{typeof(Base._jl_spawn), String, Array{String, 1}, Base.Cmd, Tuple{Base.DevNullStream, Base.PipeEndpoint, Base.TTY}}"
84938	"Tuple{getfield(Base, Symbol("##501#502")){Base.Cmd}, Tuple{Base.DevNullStream, Base.PipeEndpoint, Base.TTY}}"
299062	"Tuple{typeof(Base.close), Base.TTY}"
116543	"Tuple{typeof(Base.setup_stdio), getfield(Base, Symbol("##501#502")){Base.Cmd}, Tuple{Base.DevNullStream, Base.Pipe, Base.TTY}}"
58865	"Tuple{getfield(Base, Symbol("##_spawn#500")), Nothing, Function, Base.Cmd, Tuple{Base.DevNullStream, Base.Pipe, Base.TTY}}"
1101433	"Tuple{typeof(Base.wait_readnb), Base.PipeEndpoint, Int64}"
33185	"Tuple{typeof(Base.read), Base.Pipe}"
506470	"Tuple{typeof(Base.uv_alloc_buf), Ptr{Nothing}, UInt64, Ptr{Nothing}}"
141432	"Tuple{typeof(Base.uv_readcb), Ptr{Nothing}, Int64, Ptr{Nothing}}"
62815	"Tuple{typeof(Base.setproperty!), DecisionTrees.ModelSettings, Symbol, String}"
2416989	"Tuple{typeof(Base.hash), Array{Int64, 1}, UInt64}"
3329188	"Tuple{typeof(Base.hash), DecisionTrees.PooledArraysDTM.PooledArray{Float64, UInt8, 1, Array{UInt8, 1}}, UInt64}"
2072890	"Tuple{typeof(Base.hash), DecisionTrees.PooledArraysDTM.PooledArray{String, UInt8, 1, Array{UInt8, 1}}, UInt64}"
105087	"Tuple{typeof(Base.to_indices), Array{Float64, 1}, Tuple{Array{Int64, 1}}}"
132740	"Tuple{typeof(Base.map), getfield(Base, Symbol("##121#122")){Array{Float64, 1}}, Tuple{Array{Int64, 1}}}"
195161	"Tuple{typeof(Base.checkbounds), Array{Float64, 1}, Array{Int64, 1}}"
96395	"Tuple{typeof(Base.unsafe_view), Array{Float64, 1}, Array{Int64, 1}}"
308148	"Tuple{typeof(Base.sum), Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}}"
51358	"Tuple{typeof(Base.:(*)), Float64, Float64}"
79803	"Tuple{typeof(Base.:(>=)), Float64, Int64}"
62420	"Tuple{typeof(Base.:(*)), Int64, Float64}"
45433	"Tuple{typeof(Base.:(>=)), Float64, Float64}"
72297	"Tuple{typeof(Base.:(>)), Float64, Int64}"
281679	"Tuple{getfield(Base, Symbol("##sprint#336")), Nothing, Int64, Function, Function, Array{Int64, 1}, Vararg{Any, N} where N}"
335408	"Tuple{typeof(Base.setproperty!), Base.Iterators.Stateful{Array{Int64, 1}, Union{Nothing, Tuple{Int64, Int64}}}, Symbol, Nothing}"
177778	"Tuple{typeof(Base.join), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Int64, 1}, Char}"
178173	"Tuple{typeof(Base._similar_for), Base.UnitRange{Int64}, Type{T} where T, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##102#107"))}, Base.HasShape{1}}"
399408	"Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##102#107"))}, Int64, Int64}"
26074	"Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##102#107"))}, Int64}"
45827	"Tuple{typeof(Base.length), Array{Float64, 1}}"
163951	"Tuple{typeof(Base._similar_for), Base.UnitRange{Int64}, Type{T} where T, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##103#108"))}, Base.HasShape{1}}"
425087	"Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##103#108"))}, Int64, Int64}"
26864	"Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##103#108"))}, Int64}"
58864	"Tuple{typeof(Base._maximum), Array{Int64, 1}, Base.Colon}"
50568	"Tuple{typeof(Base.max), Int64, Int64}"
78618	"Tuple{typeof(Base.:(>)), Int64, UInt8}"
127605	"Tuple{getfield(Base, Symbol("#kw##sort")), NamedTuple{(:rev,), Tuple{Bool}}, typeof(Base.sort), Array{Int64, 1}}"
293531	"Tuple{getfield(Base.Sort, Symbol("##sort#8")), Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:rev,), Tuple{Bool}}}, Function, Array{Int64, 1}}"
407309	"Tuple{getfield(Base.Sort, Symbol("##sort!#7")), Base.Sort.QuickSortAlg, Function, Function, Bool, Base.Order.ForwardOrdering, Function, Array{Int64, 1}}"
106272	"Tuple{typeof(Base.Order.ord), Function, Function, Bool, Base.Order.ForwardOrdering}"
346074	"Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}}"
350025	"Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}}"
55704	"Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.QuickSortAlg, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}}"
20938	"Tuple{typeof(Base.sort!), Array{Int64, 1}, Base.Sort.QuickSortAlg, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}}"
52543	"Tuple{typeof(Base.join), Array{Int64, 1}, String}"
465383	"Tuple{typeof(Base.join), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Int64, 1}, String}"
81383	"Tuple{typeof(Base.setproperty!), Base.Iterators.Stateful{Array{Int64, 1}, Union{Nothing, Tuple{Int64, Int64}}}, Symbol, Tuple{Int64, Int64}}"
76247	"Tuple{typeof(Base.convert), Type{Union{Nothing, Tuple{Int64, Int64}}}, Tuple{Int64, Int64}}"
131161	"Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, DecisionTrees.SortByMean}"
376099	"Tuple{Type{Base.IOContext{IO_t} where IO_t<:IO}, Base.GenericIOBuffer{Array{UInt8, 1}}, Base.Pair{Symbol, Any}}"
100346	"Tuple{Type{Base.IOContext{IO_t} where IO_t<:IO}, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Base.Pair{Symbol, Any}}"
267457	"Tuple{typeof(Base.show_default), Base.GenericIOBuffer{Array{UInt8, 1}}, Any}"
64790	"Tuple{Type{Base.ImmutableDict{Symbol, Any}}, Base.ImmutableDict{Symbol, Any}, Symbol, DecisionTrees.SortByMean}"
51753	"Tuple{Type{Base.ImmutableDict{Symbol, Any}}, Base.ImmutableDict{Symbol, Any}, Symbol, Type{T} where T}"
353580	"Tuple{typeof(Base.sum), Array{Int64, 1}}"
318420	"Tuple{getfield(Base, Symbol("##sprint#336")), Nothing, Int64, Function, Function, Array{Float64, 1}, Vararg{Any, N} where N}"
577185	"Tuple{typeof(Base.setproperty!), Base.Iterators.Stateful{Array{Float64, 1}, Union{Nothing, Tuple{Float64, Int64}}}, Symbol, Nothing}"
322371	"Tuple{typeof(Base.isempty), Base.Iterators.Stateful{Array{Float64, 1}, Union{Nothing, Tuple{Float64, Int64}}}}"
158025	"Tuple{typeof(Base.join), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Float64, 1}, String}"
124840	"Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, DecisionTrees.DifferenceSplit}"
64791	"Tuple{Type{Base.ImmutableDict{Symbol, Any}}, Base.ImmutableDict{Symbol, Any}, Symbol, DecisionTrees.DifferenceSplit}"
73482	"Tuple{typeof(Base.string), String, Dates.DateTime, Vararg{Any, N} where N}"
241383	"Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Dates.DateTime}"
208593	"Tuple{typeof(Base.push!), Array{Union{Array{Float64, 1}, Array{String, 1}}, 1}, Array{Float64, 1}}"
218469	"Tuple{typeof(Base.deepcopy), Array{String, 1}}"
166322	"Tuple{typeof(Base.push!), Array{Union{Array{Float64, 1}, Array{String, 1}}, 1}, Array{String, 1}}"
129185	"Tuple{typeof(Base.deepcopy), DecisionTrees.Node{UInt8}}"
242173	"Tuple{typeof(Base.deepcopy_internal), Array{UInt8, 1}, Base.IdDict{Any, Any}}"
231111	"Tuple{typeof(Base.deepcopy_internal), Array{DecisionTrees.ExcelSheet, 1}, Base.IdDict{Any, Any}}"
82173	"Tuple{typeof(Base.similar), Array{DecisionTrees.ExcelSheet, 1}}"
54519	"Tuple{typeof(Base.length), Array{DecisionTrees.ExcelSheet, 1}}"
151308	"Tuple{typeof(Base.deepcopy_internal), Array{DecisionTrees.Chart, 1}, Base.IdDict{Any, Any}}"
63210	"Tuple{typeof(Base.similar), Array{DecisionTrees.Chart, 1}}"
53334	"Tuple{typeof(Base.length), Array{DecisionTrees.Chart, 1}}"
302618	"Tuple{Type{Array{Any, N} where N}, Int64, Int64}"
92049	"Tuple{Type{DecisionTrees.Tree}, DecisionTrees.Node{UInt8}, Array{Array{Int64, 1}, 1}, Array{Array{Float64, 1}, 1}, Array{Array{String, 1}, 1}, Array{Int64, 1}, DecisionTrees.ModelSettings, DecisionTrees.ExcelData, Array{Union{Array{Float64, 1}, Array{String, 1}}, 1}}"
1129482	"Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Any, 1}, Char, Char, Char, Bool, Int64, Int64}"
39112	"Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Union}"
609975	"Tuple{typeof(Base.throw_boundserror), Array{Any, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}}"
502914	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Any, 2}, Base.Slice{Base.OneTo{Int64}}, Int64}"
126420	"Tuple{getfield(DataFrames, Symbol("##DataFrame#57")), Bool, Type{T} where T, Array{Any, 2}, Array{Symbol, 1}}"
1023210	"Tuple{Type{Array{DecisionTrees.Splitdef{UInt8}, 1}}, Int64}"
448001	"Tuple{typeof(Base.copyto!), Array{DecisionTrees.Splitdef{UInt8}, 1}, Int64, Array{DecisionTrees.Splitdef{UInt8}, 1}, Int64, Int64}"
387951	"Tuple{typeof(DecisionTrees.subset_splitlist), Array{DecisionTrees.Splitdef{UInt8}, 1}, Float64}"
587457	"Tuple{typeof(Base.throw_boundserror), Array{DecisionTrees.Splitdef{UInt8}, 1}, Tuple{Array{Int64, 1}}}"
424296	"Tuple{typeof(Base.throw_checksize_error), Array{DecisionTrees.Splitdef{UInt8}, 1}, Tuple{Base.OneTo{Int64}}}"
41482	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{DecisionTrees.Splitdef{UInt8}, 1}, Array{Int64, 1}}"
75852	"Tuple{typeof(DecisionTrees.sort_splitlist), Array{DecisionTrees.Splitdef{UInt8}, 1}}"
504494	"Tuple{typeof(DecisionTrees._split), UInt8, Int64, Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Symbol, 1}, Any, Float64, Int64, Float64, DecisionTrees.DifferenceSplit, Int64, Int64, Array{Int64, 1}, Int64, DecisionTrees.SortByMean}"
784988	"Tuple{typeof(Base.throw_boundserror), DecisionTrees.PooledArraysDTM.PooledArray{Float64, UInt8, 1, Array{UInt8, 1}}, Tuple{Array{Int64, 1}}}"
453136	"Tuple{typeof(Base.vcat), Base.UnitRange{UInt8}}"
540050	"Tuple{typeof(DecisionTrees.countsort!), Array{UInt8, 1}}"
1523359	"Tuple{typeof(Base._sortedfindin), Array{Int64, 1}, Int64}"
462618	"Tuple{Type{Base.Set{Int64}}, Int64}"
151704	"Tuple{typeof(Base._findin), Array{Int64, 1}, Int64}"
53333	"Tuple{typeof(Base.findall), Base.Fix2{typeof(Base.in), Int64}, Array{Int64, 1}}"
24099	"Tuple{typeof(Base.findin), Array{Int64, 1}, Int64}"
314469	"Tuple{typeof(Base._deleteat!), Array{Int64, 1}, Array{Int64, 1}}"
297482	"Tuple{typeof(Base._deleteat!), Array{Float64, 1}, Array{Int64, 1}}"
118914	"Tuple{typeof(DecisionTrees.build_listOfMeanResponse), DecisionTrees.DifferenceSplit, Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Base.SubArray{Float64, 1, DecisionTrees.PooledArraysDTM.PooledArray{Float64, UInt8, 1, Array{UInt8, 1}}, Tuple{Array{Int64, 1}}, false}, Array{UInt8, 1}, Float64}"
1035062	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(/)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}}"
423902	"Tuple{typeof(Base.throw_boundserror), Array{UInt8, 1}, Tuple{Array{Int64, 1}}}"
423111	"Tuple{typeof(Base.throw_checksize_error), Array{UInt8, 1}, Tuple{Base.OneTo{Int64}}}"
43852	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{UInt8, 1}, Array{Int64, 1}}"
97185	"Tuple{typeof(DecisionTrees.myresort!), Array{UInt8, 1}, Array{Int64, 1}}"
580741	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 1}, Array{Int64, 1}}"
90075	"Tuple{typeof(DecisionTrees.myresort!), Array{Float64, 1}, Array{Int64, 1}}"
133136	"Tuple{typeof(DecisionTrees.sortlists!), DecisionTrees.SortByMean, Array{UInt8, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}"
2311903	"Tuple{Type{Base.BitArray{1}}, Int64}"
1178865	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.identity), Tuple{Base.Broadcast.Extruded{Base.BitArray{1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}}"
573630	"Tuple{typeof(Base.throw_boundserror), Array{UInt8, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}}"
524247	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{UInt8, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}}"
104297	"Tuple{Type{Array{UInt64, N} where N}, Int64}"
310913	"Tuple{typeof(DecisionTrees.calculateSplitValue), DecisionTrees.DifferenceSplit, Symbol, Int64, Array{UInt8, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Float64, DecisionTrees.MyGrayCodeSubsetsHALF}"
3692645	"Tuple{typeof(DecisionTrees.calculateSplitValue), DecisionTrees.DifferenceSplit, Symbol, Int64, Array{UInt8, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Float64, DecisionTrees.MyIncreasingSubsets}"
351605	"Tuple{typeof(Base.vect), DecisionTrees.Splitdef{UInt8}}"
1664397	"Tuple{Type{Array{DecisionTrees.Splitdef{T} where T<:Unsigned, N} where N}, Int64}"
798815	"Tuple{typeof(DecisionTrees.calculateSplitValue), DecisionTrees.DifferenceSplit, Symbol, Int64, Array{UInt8, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Float64, DecisionTrees.MyGrayCodeSubsetsHALF, Int64}"
2267656	"Tuple{typeof(DecisionTrees.calculateSplitValue), DecisionTrees.DifferenceSplit, Symbol, Int64, Array{UInt8, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Float64, DecisionTrees.MyIncreasingSubsets, Int64}"
149729	"Tuple{typeof(DecisionTrees._split_feature), UInt8, Int64, Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Symbol, DecisionTrees.PooledArraysDTM.PooledArray{Float64, UInt8, 1, Array{UInt8, 1}}, Float64, DecisionTrees.DifferenceSplit, Int64, Float64, Int64, DecisionTrees.SortByMean}"
232296	"Tuple{Type{Array{UInt8, 1}}, Array{UInt8, 1}}"
683458	"Tuple{typeof(Base.throw_boundserror), DecisionTrees.PooledArraysDTM.PooledArray{String, UInt8, 1, Array{UInt8, 1}}, Tuple{Array{Int64, 1}}}"
823704	"Tuple{typeof(DecisionTrees.build_listOfMeanResponse), DecisionTrees.DifferenceSplit, Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Base.SubArray{String, 1, DecisionTrees.PooledArraysDTM.PooledArray{String, UInt8, 1, Array{UInt8, 1}}, Tuple{Array{Int64, 1}}, false}, Array{UInt8, 1}, Float64}"
357926	"Tuple{typeof(DecisionTrees._split_feature), UInt8, Int64, Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Symbol, DecisionTrees.PooledArraysDTM.PooledArray{String, UInt8, 1, Array{UInt8, 1}}, Float64, DecisionTrees.DifferenceSplit, Int64, Float64, Int64, DecisionTrees.SortByMean}"
478816	"Tuple{getfield(Base.Sort, Symbol("##sortperm#11")), Base.Sort.QuickSortAlg, Function, Function, Nothing, Base.Order.ForwardOrdering, Function, Array{Float64, 1}}"
68741	"Tuple{Type{Base.Order.Perm{O, V} where V<:(AbstractArray{T, 1} where T) where O<:Base.Order.Ordering}, Base.Order.ForwardOrdering, Array{Float64, 1}}"
419951	"Tuple{typeof(Base.Sort.Float.nans2right!), Array{Int64, 1}, Base.Order.Perm{Base.Order.ForwardOrdering, Array{Float64, 1}}, Int64, Int64}"
432988	"Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.Perm{Base.Sort.Float.Left, Array{Float64, 1}}}"
502124	"Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.Perm{Base.Sort.Float.Left, Array{Float64, 1}}}"
60839	"Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Sort.Float.Left, Array{Float64, 1}}}"
353581	"Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.Perm{Base.Sort.Float.Right, Array{Float64, 1}}}"
488296	"Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.Perm{Base.Sort.Float.Right, Array{Float64, 1}}}"
65186	"Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Sort.Float.Right, Array{Float64, 1}}}"
50172	"Tuple{typeof(Base.Sort.Float.fpsort!), Array{Int64, 1}, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Order.ForwardOrdering, Array{Float64, 1}}}"
26470	"Tuple{typeof(Base.sort!), Array{Int64, 1}, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Order.ForwardOrdering, Array{Float64, 1}}}"
522272	"Tuple{getfield(Base.Sort, Symbol("##sortperm#11")), Base.Sort.QuickSortAlg, Function, Function, Bool, Base.Order.ForwardOrdering, Function, Array{Float64, 1}}"
66766	"Tuple{Type{Base.Order.Perm{O, V} where V<:(AbstractArray{T, 1} where T) where O<:Base.Order.Ordering}, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Array{Float64, 1}}"
425482	"Tuple{typeof(Base.Sort.Float.nans2left!), Array{Int64, 1}, Base.Order.Perm{Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Array{Float64, 1}}, Int64, Int64}"
155259	"Tuple{typeof(Base.Sort.Float.fpsort!), Array{Int64, 1}, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Array{Float64, 1}}}"
29235	"Tuple{typeof(Base.sort!), Array{Int64, 1}, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Array{Float64, 1}}}"
74667	"Tuple{typeof(Base.sort!), Array{UInt8, 1}}"
86519	"Tuple{Type{DecisionTrees.Rulepath{T} where T<:Unsigned}, Int64, Array{UInt8, 1}, Bool}"
198717	"Tuple{typeof(Base.push!), Array{DecisionTrees.Rulepath{T} where T<:Unsigned, 1}, DecisionTrees.Rulepath{UInt8}}"
65976	"Tuple{typeof(Base.getindex), Array{Array{Int64, 1}, 1}, Int64}"
87704	"Tuple{typeof(Base.lastindex), Array{UInt8, 1}}"
81778	"Tuple{typeof(Base.getindex), Array{Int64, 1}, UInt8}"
82173	"Tuple{typeof(Base.setindex!), Array{Int64, 1}, Int64, UInt8}"
384395	"Tuple{typeof(Base.throw_boundserror), Array{Float64, 1}, Tuple{Array{UInt8, 1}}}"
418766	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 1}, Array{UInt8, 1}}"
52938	"Tuple{typeof(Base.getindex), Array{Float64, 1}, Array{UInt8, 1}}"
434568	"Tuple{typeof(DecisionTrees.lrIndices), Array{Int64, 1}, DecisionTrees.PooledArraysDTM.PooledArray{Float64, UInt8, 1, Array{UInt8, 1}}, Array{UInt8, 1}}"
82173	"Tuple{typeof(Base.size), Array{Int64, 1}, Int64}"
62420	"Tuple{typeof(Base.:(<)), Float64, Float64}"
58469	"Tuple{typeof(Base.:(>)), Float64, Float64}"
209383	"Tuple{typeof(Base.iterate), Array{UInt8, 1}}"
142222	"Tuple{typeof(Base.iterate), Array{UInt8, 1}, Int64}"
315259	"Tuple{typeof(Base.throw_boundserror), Array{String, 1}, Tuple{Array{UInt8, 1}}}"
404544	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{String, 1}, Array{UInt8, 1}}"
44642	"Tuple{typeof(Base.getindex), Array{String, 1}, Array{UInt8, 1}}"
506865	"Tuple{typeof(DecisionTrees.lrIndices), Array{Int64, 1}, DecisionTrees.PooledArraysDTM.PooledArray{String, UInt8, 1, Array{UInt8, 1}}, Array{UInt8, 1}}"
98766	"Tuple{typeof(Base.maximum), Array{UInt8, 1}}"
41876	"Tuple{typeof(Base.fetch), Any}"
56494	"Tuple{typeof(Base.abs), Int64}"
97975	"Tuple{Type{DecisionTrees.Node{T} where T<:Unsigned}, Int64, Int64, Array{UInt8, 1}, DecisionTrees.Leaf, DecisionTrees.Node{UInt8}, Array{DecisionTrees.Rulepath{T} where T<:Unsigned, 1}}"
98766	"Tuple{Type{DecisionTrees.Node{T} where T<:Unsigned}, Int64, Int64, Array{UInt8, 1}, DecisionTrees.Node{UInt8}, DecisionTrees.Leaf, Array{DecisionTrees.Rulepath{T} where T<:Unsigned, 1}}"
65975	"Tuple{typeof(Base.setproperty!), DecisionTrees.Tree, Symbol, DecisionTrees.Node{UInt8}}"
37531	"Tuple{typeof(Base.convert), Type{Union{DecisionTrees.Leaf, DecisionTrees.Node{UInt16}, DecisionTrees.Node{UInt8}}}, DecisionTrees.Node{UInt8}}"
412445	"Tuple{typeof(Base.vcat), Array{DecisionTrees.Leaf, 1}, Array{DecisionTrees.Leaf, 1}}"
27259	"Tuple{typeof(DecisionTrees.create_leaves_array), DecisionTrees.Node{UInt8}}"
907063	"Tuple{typeof(Base.Sort.sortperm_int_range), Array{Int64, 1}, Int64, Int64}"
208592	"Tuple{getfield(Base.Sort, Symbol("##sortperm#11")), Base.Sort.QuickSortAlg, Function, Function, Nothing, Base.Order.ForwardOrdering, Function, Array{Int64, 1}}"
75062	"Tuple{Type{Base.Order.Perm{O, V} where V<:(AbstractArray{T, 1} where T) where O<:Base.Order.Ordering}, Base.Order.ForwardOrdering, Array{Int64, 1}}"
413630	"Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.Perm{Base.Order.ForwardOrdering, Array{Int64, 1}}}"
529778	"Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.Perm{Base.Order.ForwardOrdering, Array{Int64, 1}}}"
61234	"Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Order.ForwardOrdering, Array{Int64, 1}}}"
23704	"Tuple{typeof(Base.sort!), Array{Int64, 1}, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Order.ForwardOrdering, Array{Int64, 1}}}"
149334	"Tuple{typeof(DecisionTrees.apply_tree_by_leaf!), Array{Float64, 1}, Array{Int64, 1}, Array{Int64, 1}, DecisionTrees.Node{UInt8}, DataFrames.DataFrame}"
434174	"Tuple{getfield(Base, Symbol("##print_to_string#337")), Nothing, Function, Float64, Vararg{Any, N} where N}"
75062	"Tuple{typeof(Base.size), Array{DecisionTrees.Leaf, 1}, Int64}"
919310	"Tuple{typeof(Base.typed_hcat), Type{Any}, Array{String, 1}, Array{Int64, 1}, Array{Float64, 1}}"
33975	"Tuple{typeof(Base.hcat), Array{String, 1}, Array{Int64, 1}, Array{Float64, 1}}"
606815	"Tuple{typeof(Base.copyto!), Array{Any, 2}, Int64, Array{String, 1}, Int64, Int64}"
655804	"Tuple{typeof(Base.copyto!), Array{Any, 2}, Int64, Array{Int64, 1}, Int64, Int64}"
574815	"Tuple{typeof(Base.copyto!), Array{Any, 2}, Int64, Array{Float64, 1}, Int64, Int64}"
5107362	"Tuple{typeof(Base.throw_boundserror), Array{Float64, 1}, Tuple{Base.OneTo{Int64}}}"
252444	"Tuple{typeof(Base.mightalias), Array{Float64, 1}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}}"
282470	"Tuple{typeof(Base._throw_dmrs), Int64, String, Int64}"
319605	"Tuple{typeof(Base.vcat), Base.OneTo{Int64}}"
39111	"Tuple{typeof(Base.unaliascopy), Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}}"
26469	"Tuple{typeof(Base.unalias), Array{Float64, 1}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}}"
131161	"Tuple{typeof(Base.copyto!), Array{Float64, 1}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}}"
406123	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Base.Broadcast.Extruded{Array{Int64, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}}"
408890	"Tuple{typeof(DecisionTrees.gini_single_argument), Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}}"
1854026	"Tuple{typeof(DecisionTrees.calc_sum_squares), Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}}"
16615914	"Tuple{typeof(DecisionTrees.poissonError), Array{Float64, 1}, Array{Float64, 1}}"
1775804	"Tuple{getfield(DecisionTrees, Symbol("#kw##defineRelativityChart")), NamedTuple{(:headerrow2, :headercol2, :datarow2, :xtitle, :ytitle, :xscale, :title, :datarow, :valuescol, :categoriescol, :valuescol2, :yscale), Tuple{Int64, Int64, Int64, String, String, Float64, String, Int64, Int64, Int64, Int64, Float64}}, typeof(DecisionTrees.defineRelativityChart), String, String, String, Int64, Int64, Int64}"
1359409	"Tuple{typeof(DecisionTrees.createTrnValStats!), Array{Int64, 1}, Array{Int64, 1}, DecisionTrees.ModelSettings, String, String, DecisionTrees.ExcelData, DecisionTrees.Tree, Array{DecisionTrees.Leaf, 1}, Array{Float64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}"
861630	"Tuple{typeof(Base.__cat), Array{Any, 1}, Tuple{Int64}, Tuple{Bool}, Array{Int64, 1}, Vararg{Any, N} where N}"
169877	"Tuple{typeof(Base.cat_indices), Array{Int64, 1}, Int64}"
77828	"Tuple{typeof(Base.cat_size), Array{Int64, 1}, Int64}"
406124	"Tuple{typeof(Base.setindex!), Array{Any, 1}, Array{Int64, 1}, Base.UnitRange{Int64}}"
215309	"Tuple{typeof(Base.fill!), Base.SubArray{Any, 1, Array{Any, 1}, Tuple{Base.UnitRange{Int64}}, true}, String}"
1522174	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(/)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Float64}}, Tuple{Int64}}"
137482	"Tuple{typeof(Base.Broadcast.broadcast), typeof(Base.:(/)), Array{Float64, 1}, Float64}"
4662127	"Tuple{typeof(DecisionTrees.buildStatistics), Array{String, 2}, Array{Any, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Any, Array{Float64, 1}, Array{Float64, 1}, Any}"
4917338	"Tuple{typeof(DecisionTrees.pushsum!), Array{Float64, 1}}"
2282668	"Tuple{typeof(Base.unalias), Array{Float64, 1}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, true}}"
130371	"Tuple{typeof(Base.throw_boundserror), Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Tuple{Int64}}"
67160	"Tuple{typeof(Base.copyto!), Array{Float64, 1}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, true}}"
99556	"Tuple{typeof(Base.unaliascopy), Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, true}}"
274568	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Base.Broadcast.Extruded{Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.literal_pow), Tuple{Base.RefValue{typeof(Base.:(^))}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Base.Broadcast.Extruded{Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Tuple{Bool}, Tuple{Int64}}, Float64}}, Base.RefValue{Base.Val{2}}}}}}, Tuple{Int64}}"
1838619	"Tuple{typeof(DecisionTrees.buildStatisticsInternal), Any, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Any, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}"
105086	"Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.DefaultArrayStyle{1}, Function, Array{Float64, 1}, Array{Float64, 1}}"
82963	"Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(/)), Tuple{Array{Float64, 1}, Array{Float64, 1}}}"
920099	"Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(/)), Tuple{Array{Float64, 1}, Array{Float64, 1}}}}"
361482	"Tuple{typeof(Base.sum), Array{Float64, 1}}"
57284	"Tuple{typeof(Base.:(/)), Array{Float64, 1}, Float64}"
530963	"Tuple{typeof(Base._mean), Array{Float64, 1}, Base.Colon}"
608396	"Tuple{typeof(Base.Math.throw_complex_domainerror), Symbol, Float64}"
374914	"Tuple{typeof(StatsBase.corm), Array{Float64, 1}, Float64, Array{Float64, 1}, Float64}"
24099	"Tuple{typeof(StatsBase.cor), Array{Float64, 1}, Array{Float64, 1}}"
97975	"Tuple{typeof(Base.lastindex), Array{Float64, 1}}"
52148	"Tuple{typeof(DecisionTrees.reversals), Array{Float64, 1}}"
567704	"Tuple{Type{Base.BitArray{N} where N}, Int64}"
449976	"Tuple{getfield(DecisionTrees, Symbol("##reversals#53")), Bool, Function, Array{Float64, 1}}"
248494	"Tuple{typeof(Base.push!), Array{Float64, 1}, Float64}"
75852	"Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(-)), Tuple{Array{Float64, 1}, Array{Float64, 1}}}"
929977	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(-)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}}"
192790	"Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Array{Float64, 1}, Array{Float64, 1}}}}"
393481	"Tuple{typeof(Base.view), Array{Float64, 1}, Base.UnitRange{Int64}}"
41086	"Tuple{typeof(Base.Broadcast.broadcastable), Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, true}}"
58074	"Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.DefaultArrayStyle{1}, Function, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, true}}"
60049	"Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.abs), Tuple{Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, true}}}"
701630	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.abs), Tuple{Base.Broadcast.Extruded{Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}}"
172642	"Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.abs), Tuple{Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, true}}}}"
421531	"Tuple{typeof(DecisionTrees.wAverage), Array{Float64, 1}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, true}}"
1005827	"Tuple{typeof(Base.copyto!), Array{Any, 2}, Int64, Array{Any, 1}, Int64, Int64}"
854915	"Tuple{typeof(Base.setindex_shape_check), Array{Any, 1}, Int64, Int64}"
185679	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Any, 2}, Array{Any, 1}, Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}}"
744692	"Tuple{typeof(Base.setindex_shape_check), Array{Float64, 1}, Int64, Int64}"
186469	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Any, 2}, Array{Float64, 1}, Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}}"
154864	"Tuple{typeof(Base.typed_hcat), Type{Any}, Array{Any, 1}, Array{Float64, 1}, Array{Float64, 1}, Vararg{Array{Float64, 1}, N} where N}"
134321	"Tuple{typeof(Base.hcat), Array{Any, 1}, Array{Float64, 1}, Array{Float64, 1}, Vararg{Array{Float64, 1}, N} where N}"
65976	"Tuple{typeof(Base.promote_eltype), Array{Any, 1}, Array{Float64, 1}, Vararg{Array{Float64, 1}, N} where N}"
52938	"Tuple{typeof(Base.promote_eltype), Array{Float64, 1}, Array{Float64, 1}, Vararg{Array{Float64, 1}, N} where N}"
1133433	"Tuple{typeof(Base.__cat), Array{String, 2}, Tuple{Int64, Int64}, Tuple{Bool, Bool}, String, Vararg{Any, N} where N}"
466174	"Tuple{typeof(Base.throw_boundserror), Base.SubArray{String, 2, Array{String, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}, Tuple{Int64, Int64}}"
153284	"Tuple{typeof(Base.fill!), Base.SubArray{String, 2, Array{String, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}, String}"
178568	"Tuple{typeof(Base.cat_indices), Array{String, 2}, Int64}"
67950	"Tuple{typeof(Base.cat_size), Array{String, 2}, Int64}"
527408	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{String, 2}, Array{String, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}}"
99556	"Tuple{typeof(Base.similar), Array{String, 2}}"
71506	"Tuple{typeof(Base.length), Array{String, 2}}"
180938	"Tuple{typeof(Base.hcat), String, Float64, Array{String, 2}}"
174617	"Tuple{getfield(Base, Symbol("#kw##cat_t")), NamedTuple{(:dims,), Tuple{Base.Val{2}}}, typeof(Base.cat_t), Type{Any}, String, Float64, Vararg{Any, N} where N}"
83358	"Tuple{getfield(Base, Symbol("##cat_t#107")), Base.Val{2}, Function, Type{Any}, String, Vararg{Any, N} where N}"
235457	"Tuple{typeof(Base._cat_t), Base.Val{2}, Type{T} where T, String, Vararg{Any, N} where N}"
106272	"Tuple{typeof(Base.map), typeof(Base.cat_size), Tuple{String, Float64, Array{String, 2}}}"
86123	"Tuple{typeof(Base.cat_shape), Tuple{Bool, Bool}, Tuple{}, Tuple{Int64}, Tuple{Int64}, Vararg{Tuple, N} where N}"
299852	"Tuple{typeof(Base.cat_shape), Tuple{Bool, Bool}, Tuple{Int64, Int64}, Tuple{Int64}, Tuple{Int64, Int64}}"
88888	"Tuple{Type{Array{Any, N} where N}, UndefInitializer, Tuple{Int64, Int64}}"
1099457	"Tuple{typeof(Base.throw_boundserror), Array{Any, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}"
266272	"Tuple{typeof(Base.__cat), Array{Any, 2}, Tuple{Int64, Int64}, Tuple{Bool, Bool}, String, Vararg{Any, N} where N}"
446420	"Tuple{typeof(Base.throw_boundserror), Base.SubArray{Any, 2, Array{Any, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}, Tuple{Int64, Int64}}"
148938	"Tuple{typeof(Base.fill!), Base.SubArray{Any, 2, Array{Any, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}, String}"
103506	"Tuple{typeof(Base.cat_indices), Float64, Int64}"
538074	"Tuple{typeof(Base.fill!), Base.SubArray{Any, 2, Array{Any, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}, Float64}"
634469	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Any, 2}, Array{String, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}}"
367803	"Tuple{typeof(Base.hcat), String, Float64}"
636445	"Tuple{typeof(Base.mapfoldl_impl), getfield(Base, Symbol("##99#101")), typeof(Base.add_sum), Int64, Tuple{Array{Any, 2}, Array{Any, 2}, Array{Any, 2}}, Int64}"
314865	"Tuple{typeof(Base.typed_vcat), Type{Any}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}}"
27259	"Tuple{typeof(Base.vcat), Array{Any, 2}, Array{Any, 2}, Array{Any, 2}}"
1597236	"Tuple{typeof(Base.copyto!), Array{Any, 2}, Int64, Array{String, 2}, Int64, Int64}"
882569	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Any, 2}, Array{String, 2}, Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}}"
158024	"Tuple{typeof(Base.typed_hcat), Type{Any}, Array{Any, 2}, Array{String, 2}}"
30815	"Tuple{typeof(Base.hcat), Array{Any, 2}, Array{String, 2}}"
163556	"Tuple{getfield(Base, Symbol("#kw##cat_t")), NamedTuple{(:dims,), Tuple{Base.Val{2}}}, typeof(Base.cat_t), Type{Any}, String, Int64, Vararg{Any, N} where N}"
143012	"Tuple{typeof(Base.map), typeof(Base.cat_size), Tuple{String, Int64, Array{String, 2}}}"
100346	"Tuple{typeof(Base.cat_indices), Int64, Int64}"
525827	"Tuple{typeof(Base.fill!), Base.SubArray{Any, 2, Array{Any, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}, Int64}"
170271	"Tuple{typeof(Base.hcat), String, Int64, Array{String, 2}}"
124840	"Tuple{typeof(Base.vcat), Array{String, 2}, Array{String, 2}, Array{Any, 2}, Vararg{Union{Array{T, 2} where T, Array{T, 1} where T, LinearAlgebra.AbstractTriangular{T, A} where A<:(Array{T, 2} where T) where T, LinearAlgebra.Adjoint{#s624, #s623} where #s623<:(Array{T, 1} where T) where #s624, LinearAlgebra.Hermitian{T, A} where A<:(Array{T, 2} where T) where T, LinearAlgebra.RowVector{#s620, #s619} where #s619<:(Array{T, 1} where T) where #s620, LinearAlgebra.Symmetric{T, A} where A<:(Array{T, 2} where T) where T, LinearAlgebra.Transpose{#s622, #s621} where #s621<:(Array{T, 1} where T) where #s622}, N} where N}"
133926	"Tuple{typeof(Base.promote_eltype), Array{String, 2}, Array{String, 2}, Vararg{Any, N} where N}"
96790	"Tuple{typeof(Base.promote_eltype), Array{String, 2}, Array{Any, 2}, Vararg{Any, N} where N}"
75062	"Tuple{typeof(Base.promote_eltype), Array{Any, 2}, Array{String, 2}, Vararg{Any, N} where N}"
534914	"Tuple{typeof(Base.typed_vcat), Type{Any}, Array{String, 2}, Array{String, 2}, Array{Any, 2}, Vararg{Union{AbstractArray{T, 2}, AbstractArray{T, 1}} where T, N} where N}"
81778	"Tuple{typeof(Base.sum), Function, Tuple{Array{String, 2}, Array{String, 2}, Array{Any, 2}, Array{String, 2}, Array{String, 2}, Array{String, 2}, Array{String, 2}, Array{Any, 2}, Array{String, 2}, Array{String, 2}}}"
58469	"Tuple{typeof(Base.mapreduce), Function, Function, Tuple{Array{String, 2}, Array{String, 2}, Array{Any, 2}, Array{String, 2}, Array{String, 2}, Array{String, 2}, Array{String, 2}, Array{Any, 2}, Array{String, 2}, Array{String, 2}}}"
95605	"Tuple{typeof(Base.mapfoldl), Function, Function, Tuple{Array{String, 2}, Array{String, 2}, Array{Any, 2}, Array{String, 2}, Array{String, 2}, Array{String, 2}, Array{String, 2}, Array{Any, 2}, Array{String, 2}, Array{String, 2}}}"
102321	"Tuple{typeof(Base.mapreduce_first), getfield(Base, Symbol("##99#101")), Function, Array{String, 2}}"
216099	"Tuple{typeof(Base.mapfoldl_impl), getfield(Base, Symbol("##99#101")), typeof(Base.add_sum), Int64, Tuple{Array{String, 2}, Array{String, 2}, Array{Any, 2}, Array{String, 2}, Array{String, 2}, Array{String, 2}, Array{String, 2}, Array{Any, 2}, Array{String, 2}, Array{String, 2}}, Int64}"
63605	"Tuple{typeof(Base.size), Array{String, 2}, Int64}"
57679	"Tuple{typeof(Base.size), Array{Any, 2}, Int64}"
407704	"Tuple{typeof(Base.setindex!), Array{Any, 2}, Array{String, 2}, Base.UnitRange{Int64}, Function}"
354371	"Tuple{typeof(Base.setindex!), Array{Any, 2}, Array{Any, 2}, Base.UnitRange{Int64}, Function}"
97975	"Tuple{typeof(Base.vcat), Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Vararg{Array{Any, 2}, N} where N}"
572445	"Tuple{typeof(Base.typed_vcat), Type{Any}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Vararg{Array{Any, 2}, N} where N}"
54914	"Tuple{typeof(Base.sum), Function, Tuple{Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}}}"
47012	"Tuple{typeof(Base.mapreduce), Function, Function, Tuple{Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}}}"
87309	"Tuple{typeof(Base.mapfoldl), Function, Function, Tuple{Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}}}"
97185	"Tuple{typeof(Base.mapreduce_first), getfield(Base, Symbol("##99#101")), Function, Array{Any, 2}}"
145382	"Tuple{typeof(Base.mapfoldl_impl), getfield(Base, Symbol("##99#101")), typeof(Base.add_sum), Int64, Tuple{Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}, Array{Any, 2}}, Int64}"
60444	"Tuple{typeof(Base.vcat), Array{Any, 2}, Array{Any, 2}}"
54913	"Tuple{getfield(DataFrames, Symbol("##48#50")), Array{Any, 1}}"
271012	"Tuple{Type{Array{AbstractString, N} where N}, Int64, Int64}"
183309	"Tuple{typeof(Base.throw_boundserror), Array{AbstractString, 2}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}}"
67160	"Tuple{typeof(DecisionTrees.writeAllFieldsToArray), Any}"
642766	"Tuple{typeof(Base.ntuple), getfield(Base, Symbol("##9#10")){DataType}, Int64}"
22914	"Tuple{typeof(Base.fieldnames), DecisionTrees.ModelSettings}"
172642	"Tuple{typeof(Base._ntuple), Function, Int64}"
121284	"Tuple{typeof(Base.typed_hcat), Type{T} where T, String, String}"
340543	"Tuple{getfield(Base, Symbol("#kw##cat_t")), NamedTuple{(:dims,), Tuple{Base.Val{2}}}, typeof(Base.cat_t), Type{AbstractString}, String, String}"
870322	"Tuple{typeof(Base.throw_boundserror), Array{AbstractString, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}"
493037	"Tuple{typeof(Base.throw_boundserror), Base.SubArray{AbstractString, 2, Array{AbstractString, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}, Tuple{Int64, Int64}}"
144593	"Tuple{typeof(Base.fill!), Base.SubArray{AbstractString, 2, Array{AbstractString, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}, String}"
128790	"Tuple{typeof(Base.__cat), Array{AbstractString, 2}, Tuple{Int64, Int64}, Tuple{Bool, Bool}, String, Vararg{String, N} where N}"
224790	"Tuple{typeof(Base.getindex), Array{AbstractString, 2}, Base.Colon}"
443655	"Tuple{typeof(Base.setindex_shape_check), Array{AbstractString, 1}, Int64, Int64}"
120889	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{AbstractString, 2}, Array{AbstractString, 1}, Int64, Base.Slice{Base.OneTo{Int64}}}"
72297	"Tuple{typeof(Base.string), Float64}"
62815	"Tuple{typeof(Base.string), DecisionTrees.DifferenceSplit}"
295506	"Tuple{getfield(Base, Symbol("##print_to_string#337")), Nothing, Function, DecisionTrees.DifferenceSplit}"
55309	"Tuple{typeof(Base.string), DecisionTrees.SortByMean}"
295901	"Tuple{getfield(Base, Symbol("##print_to_string#337")), Nothing, Function, DecisionTrees.SortByMean}"
74667	"Tuple{typeof(Base.string), Array{Int64, 1}}"
1685335	"Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Int64, 1}, Char, String, String, Bool, Int64, Int64}"
879013	"Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Int64, 1}, String, String, Char, Bool, Int64, Int64}"
821729	"Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Int64, 1}, Char, String, Char, Bool, Int64, Int64}"
95605	"Tuple{typeof(Base.show_vector), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Int64, 1}, Char, Char}"
47012	"Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Int64, 1}}"
145383	"Tuple{getfield(Base, Symbol("##print_to_string#337")), Nothing, Function, Array{Int64, 1}}"
71901	"Tuple{typeof(Base.string), Array{String, 1}}"
250865	"Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{String, 1}}"
126025	"Tuple{getfield(Base, Symbol("##print_to_string#337")), Nothing, Function, Array{String, 1}}"
77037	"Tuple{typeof(Base.string), Array{Float64, 1}}"
1799508	"Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Float64, 1}, Char, String, String, Bool, Int64, Int64}"
860840	"Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Float64, 1}, String, String, Char, Bool, Int64, Int64}"
803556	"Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Float64, 1}, Char, String, Char, Bool, Int64, Int64}"
76247	"Tuple{typeof(Base.show_vector), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Float64, 1}, Char, Char}"
41877	"Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Float64, 1}}"
138272	"Tuple{getfield(Base, Symbol("##print_to_string#337")), Nothing, Function, Array{Float64, 1}}"
431012	"Tuple{typeof(Base.throw_boundserror), Array{AbstractString, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}}"
470914	"Tuple{typeof(Base.throw_checksize_error), Array{AbstractString, 1}, Tuple{Base.OneTo{Int64}}}"
49383	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{AbstractString, 2}, Base.Slice{Base.OneTo{Int64}}, Int64}"
91654	"Tuple{getfield(DataFrames, Symbol("##DataFrame#57")), Bool, Type{T} where T, Array{AbstractString, 2}, Array{Symbol, 1}}"
50963	"Tuple{getfield(DataFrames, Symbol("##48#50")), Array{AbstractString, 1}}"
279704	"Tuple{typeof(Base.vect), DecisionTrees.ExcelSheet, Vararg{DecisionTrees.ExcelSheet, N} where N}"
696890	"Tuple{getfield(DecisionTrees, Symbol("##defineRelativityChart#133")), Int64, Int64, Int64, String, Any, Any, String, Int64, Int64, Int64, Int64, Float64, typeof(DecisionTrees.defineRelativityChart), String, String, String, Int64, Int64, Int64}"
1502421	"Tuple{typeof(Base.rehash!), Base.Dict{AbstractString, Any}, Int64}"
51754	"Tuple{typeof(Base.ht_keyindex2!), Base.Dict{AbstractString, Any}, String}"
135506	"Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, Any}, String, String}"
166321	"Tuple{Type{Base.Dict{Any, Any}}, Base.Pair{String, String}, Vararg{Base.Pair{String, String}, N} where N}"
181334	"Tuple{Type{Base.Dict{Any, Any}}, Base.Pair{String, String}, Vararg{Base.Pair{A, B} where B where A, N} where N}"
270222	"Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, Any}, Bool, String}"
220839	"Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Base.Dict{Any, Any}, String}"
280889	"Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, Any}, Base.Dict{Any, Any}, String}"
57679	"Tuple{Type{Base.Pair{A, B} where B where A}, String, Float64}"
409679	"Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Float64, String}"
45433	"Tuple{Type{Base.Dict{Any, Any}}, Base.Pair{String, Float64}, Vararg{Base.Pair{String, Float64}, N} where N}"
267457	"Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, Any}, Float64, String}"
654223	"Tuple{typeof(Base.deepcopy_internal), Base.Dict{AbstractString, Any}, Base.IdDict{Any, Any}}"
96790	"Tuple{typeof(Base.deepcopy_internal), Base.Dict{AbstractString, Base.Dict{AbstractString, Any}}, Base.IdDict{Any, Any}}"
219655	"Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, Base.Dict{AbstractString, Any}}, Base.Dict{AbstractString, Any}, String}"
71112	"Tuple{typeof(Base.setproperty!), DecisionTrees.Tree, Symbol, DecisionTrees.ExcelData}"
35556	"Tuple{typeof(Base.convert), Type{DecisionTrees.ExcelData}, DecisionTrees.ExcelData}"
1050865	"Tuple{Type{Base.Dict{AbstractString, Array{Any, 1}}}}"
86913	"Tuple{typeof(DecisionTrees.create_custom_dict), DataFrames.DataFrame}"
133531	"Tuple{typeof(DecisionTrees.writeDFtoExcel), DecisionTrees.ExcelData, String, Int64, Int64, Bool, Bool}"
791705	"Tuple{typeof(Base.ht_keyindex), Base.Dict{AbstractString, Base.Dict{AbstractString, Any}}, String}"
819358	"Tuple{typeof(Base.collect_to!), Array{String, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##131#132"))}, Int64, Int64}"
46223	"Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(DecisionTrees, Symbol("##131#132"))}}"
288000	"Tuple{typeof(DecisionTrees.addChartToWorkbook!), PyCall.PyObject, PyCall.PyObject, Base.Dict{AbstractString, Base.Dict{AbstractString, Any}}, String}"
77432	"Tuple{typeof(DecisionTrees.write_statistics), DecisionTrees.ExcelData, String, Bool, Bool}"
359111	"Tuple{typeof(DecisionTrees.writeStatisticsFile!), String, DecisionTrees.ExcelData, Array{String, 1}}"
189235	"Tuple{getfield(PyCall, Symbol("#kw#PyObject")), NamedTuple{(:engine,), Tuple{String}}, PyCall.PyObject, String}"
1171754	"Tuple{typeof(Base.collect_to!), Array{Base.Pair{String, String}, 1}, Base.Generator{Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:engine,), Tuple{String}}}, getfield(PyCall, Symbol("##83#84"))}, Int64, Int64}"
52543	"Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:engine,), Tuple{String}}}, getfield(PyCall, Symbol("##83#84"))}}"
159605	"Tuple{Type{Base.Dict{AbstractString, Any}}, Array{Base.Pair{String, String}, 1}}"
478815	"Tuple{Type{PyCall.PyObject}, Base.Dict{AbstractString, Any}}"
158420	"Tuple{getfield(PyCall, Symbol("##_pycall#82")), Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:engine,), Tuple{String}}}, Function, PyCall.PyObject, String}"
217680	"Tuple{typeof(PyCall.pybytes), String}"
60049	"Tuple{typeof(Base.unsafe_convert), Type{Ptr{PyCall.PyObject_struct}}, PyCall.PyObject}"
364247	"Tuple{typeof(Base.ht_keyindex), Base.Dict{AbstractString, Any}, String}"
38321	"Tuple{typeof(Base.getindex), Base.Dict{AbstractString, Any}, String}"
634470	"Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Any, 1}, Base.IndexLinear, Array{AbstractString, 1}}"
1685334	"Tuple{typeof(Base.rehash!), Base.Dict{AbstractString, Array{Any, 1}}, Int64}"
73482	"Tuple{typeof(Base.ht_keyindex2!), Base.Dict{AbstractString, Array{Any, 1}}, String}"
182123	"Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, Array{Any, 1}}, Array{AbstractString, 1}, String}"
110222	"Tuple{getfield(PyCall, Symbol("#kw##pycall")), NamedTuple{(:columns,), Tuple{Array{Symbol, 1}}}, typeof(PyCall.pycall), PyCall.PyObject, Type{PyCall.PyObject}, Base.Dict{AbstractString, Array{Any, 1}}}"
1567211	"Tuple{typeof(PyCall.array2py), Array{Any, 1}, Int64, Int64}"
135111	"Tuple{Type{PyCall.PyObject}, Base.Dict{AbstractString, Array{Any, 1}}}"
651062	"Tuple{typeof(Base.collect_to!), Array{Base.Pair{String, Array{Symbol, 1}}, 1}, Base.Generator{Base.Iterators.Pairs{Symbol, Array{Symbol, 1}, Tuple{Symbol}, NamedTuple{(:columns,), Tuple{Array{Symbol, 1}}}}, getfield(PyCall, Symbol("##83#84"))}, Int64, Int64}"
50568	"Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Pairs{Symbol, Array{Symbol, 1}, Tuple{Symbol}, NamedTuple{(:columns,), Tuple{Array{Symbol, 1}}}}, getfield(PyCall, Symbol("##83#84"))}}"
379260	"Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, Any}, Array{Symbol, 1}, String}"
48592	"Tuple{Type{Base.Dict{AbstractString, Any}}, Array{Base.Pair{String, Array{Symbol, 1}}, 1}}"
178964	"Tuple{getfield(PyCall, Symbol("##_pycall#82")), Base.Iterators.Pairs{Symbol, Array{Symbol, 1}, Tuple{Symbol}, NamedTuple{(:columns,), Tuple{Array{Symbol, 1}}}}, Function, PyCall.PyObject, Base.Dict{AbstractString, Array{Any, 1}}}"
357531	"Tuple{typeof(Base.ht_keyindex), Base.Dict{AbstractString, Array{Any, 1}}, String}"
43061	"Tuple{typeof(Base.getindex), Base.Dict{AbstractString, Array{Any, 1}}, String}"
1014914	"Tuple{typeof(PyCall.array2py), Array{Symbol, 1}, Int64, Int64}"
18568	"Tuple{Type{PyCall.PyObject}, Array{Symbol, 1}}"
103111	"Tuple{getfield(PyCall, Symbol("#kw##pycall")), NamedTuple{(:header, :index, :sheet_name, :startrow, :startcol, :encoding), Tuple{Bool, Bool, String, Int64, Int64, String}}, typeof(PyCall.pycall), PyCall.PyObject, Type{PyCall.PyAny}, PyCall.PyObject}"
567309	"Tuple{typeof(Base.isempty), Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:header, :index, :sheet_name, :startrow, :startcol, :encoding), Tuple{Bool, Bool, String, Int64, Int64, String}}}}"
316445	"Tuple{getfield(PyCall, Symbol("##83#84")), Base.Pair{Symbol, Any}}"
68740	"Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:header, :index, :sheet_name, :startrow, :startcol, :encoding), Tuple{Bool, Bool, String, Int64, Int64, String}}}, getfield(PyCall, Symbol("##83#84"))}}"
161581	"Tuple{getfield(PyCall, Symbol("##_pycall#82")), Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:header, :index, :sheet_name, :startrow, :startcol, :encoding), Tuple{Bool, Bool, String, Int64, Int64, String}}}, Function, PyCall.PyObject, PyCall.PyObject}"
58469	"Tuple{Type{Base.Pair{A, B} where B where A}, String, Bool}"
55309	"Tuple{typeof(Base._array_for), Type{Base.Pair{String, Bool}}, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:header, :index, :sheet_name, :startrow, :startcol, :encoding), Tuple{Bool, Bool, String, Int64, Int64, String}}}, Base.HasLength}"
754174	"Tuple{typeof(Base.copyto!), Array{Base.Pair{String, Bool}, 1}, Int64, Array{Base.Pair{String, Bool}, 1}, Int64, Int64}"
67160	"Tuple{typeof(Base.collect_to!), Array{Base.Pair{String, Bool}, 1}, Base.Generator{Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:header, :index, :sheet_name, :startrow, :startcol, :encoding), Tuple{Bool, Bool, String, Int64, Int64, String}}}, getfield(PyCall, Symbol("##83#84"))}, Int64, Int64}"
47013	"Tuple{typeof(Base.collect_to_with_first!), Array{Base.Pair{String, Bool}, 1}, Base.Pair{String, Bool}, Base.Generator{Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:header, :index, :sheet_name, :startrow, :startcol, :encoding), Tuple{Bool, Bool, String, Int64, Int64, String}}}, getfield(PyCall, Symbol("##83#84"))}, Int64}"
63210	"Tuple{Type{Array{Base.Pair{String, _} where _, 1}}, UndefInitializer, Int64}"
593383	"Tuple{typeof(Base.copyto!), Array{Base.Pair{String, _} where _, 1}, Int64, Array{Base.Pair{String, Bool}, 1}, Int64, Int64}"
67951	"Tuple{typeof(Base.setindex!), Array{Base.Pair{String, _} where _, 1}, Base.Pair{String, String}, Int64}"
242568	"Tuple{typeof(Base.collect_to!), Array{Base.Pair{String, _} where _, 1}, Base.Generator{Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:header, :index, :sheet_name, :startrow, :startcol, :encoding), Tuple{Bool, Bool, String, Int64, Int64, String}}}, getfield(PyCall, Symbol("##83#84"))}, Int64, Int64}"
56098	"Tuple{Type{Base.Pair{A, B} where B where A}, String, Int64}"
130766	"Tuple{typeof(Base.getindex), Array{Base.Pair{String, _} where _, 1}, Int64}"
62420	"Tuple{Type{Base.Dict{AbstractString, Any}}, Array{Base.Pair{String, _} where _, 1}}"
291951	"Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, Any}, Int64, String}"
202272	"Tuple{Type{PyCall.PyObject}, Bool}"
344889	"Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, Array{Any, 1}}, Array{Any, 1}, String}"
106667	"Tuple{typeof(Base.getindex), PyCall.PyObject, Symbol}"
241778	"Tuple{typeof(Base.convert), Type{Base.Dict{PyCall.PyAny, PyCall.PyAny}}, PyCall.PyObject}"
69926	"Tuple{Type{PyCall.PyDict{PyCall.PyAny, PyCall.PyAny, true}}, PyCall.PyObject}"
679507	"Tuple{typeof(Base.next), PyCall.PyDict{PyCall.PyAny, PyCall.PyAny, true}, PyCall.PyDict_Iterator}"
73876	"Tuple{typeof(Base.copy), PyCall.PyDict{PyCall.PyAny, PyCall.PyAny, true}}"
82964	"Tuple{typeof(Base.unsafe_convert), Type{Ref{Int64}}, Base.RefValue{Int64}}"
79803	"Tuple{typeof(Base.unsafe_convert), Type{Ref{Ptr{PyCall.PyObject_struct}}}, Base.RefValue{Ptr{PyCall.PyObject_struct}}}"
46222	"Tuple{Type{Base.Pair{A, B} where B where A}, String, PyCall.PyObject}"
242963	"Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, PyCall.PyObject, String}"
367407	"Tuple{typeof(Base.ht_keyindex), Base.Dict{Any, Any}, String}"
35556	"Tuple{typeof(Base.getindex), Base.Dict{Any, Any}, String}"
506469	"Tuple{getfield(PyCall, Symbol("##_pycall#82")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, PyCall.PyObject, Base.Dict{AbstractString, Any}}"
71901	"Tuple{typeof(PyCall.pycall), PyCall.PyObject, Type{PyCall.PyAny}, Base.Dict{AbstractString, Any}}"
84148	"Tuple{typeof(Base.getindex), Base.Dict{AbstractString, Base.Dict{AbstractString, Any}}, String}"
408889	"Tuple{Type{PyCall.PyObject}, Base.Dict{Any, Any}}"
68345	"Tuple{typeof(PyCall.pycall), PyCall.PyObject, Type{PyCall.PyAny}, String, Vararg{Any, N} where N}"
61234	"Tuple{getfield(PyCall, Symbol("##pycall#86")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, PyCall.PyObject, Type{PyCall.PyAny}, String, Vararg{Any, N} where N}"
52149	"Tuple{typeof(PyCall._pycall), PyCall.PyObject, String, Vararg{Any, N} where N}"
636445	"Tuple{getfield(PyCall, Symbol("##_pycall#82")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, PyCall.PyObject, String, Vararg{Any, N} where N}"
55309	"Tuple{typeof(Base.map), Type{T} where T, Tuple{String, PyCall.PyObject}}"
33185	"Tuple{Type{PyCall.PyObject}, PyCall.PyObject}"
57680	"Tuple{typeof(Base.getindex), Tuple{PyCall.PyObject, PyCall.PyObject}, Int64}"
65185	"Tuple{PyCall.PyObject}"
374124	"Tuple{getfield(PyCall, Symbol("##_pycall#82")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, PyCall.PyObject}"
148148	"Tuple{typeof(Base.setindex!), Array{Float64, 2}, Float64, Int64}"
132741	"Tuple{typeof(Base.setindex!), Array{Float64, 2}, Int64, Int64}"
1065877	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 2}, Base.Slice{Base.OneTo{Int64}}, Int64}"
128790	"Tuple{getfield(DataFrames, Symbol("##DataFrame#57")), Bool, Type{T} where T, Array{Float64, 2}, Array{Symbol, 1}}"
52148	"Tuple{typeof(Base.unique), Array{Int64, 1}}"
580741	"Tuple{typeof(Base.unique), Array{Symbol, 1}}"
170272	"Tuple{getfield(DataFrames, Symbol("##names!#7")), Bool, Bool, Function, DataFrames.Index, Array{Symbol, 1}}"
58074	"Tuple{typeof(Base.setproperty!), DecisionTrees.Tree, Symbol, DataFrames.DataFrame}"
35160	"Tuple{typeof(Base.convert), Type{DataFrames.DataFrame}, DataFrames.DataFrame}"
93235	"Tuple{typeof(DecisionTrees.nodesize), DecisionTrees.Node{UInt8}}"
98766	"Tuple{typeof(DecisionTrees.number_of_nodes), DecisionTrees.Node{UInt8}}"
95210	"Tuple{typeof(DecisionTrees.maxdepth), DecisionTrees.Node{UInt8}}"
59655	"Tuple{typeof(Base.getindex), Array{Array{Float64, 1}, 1}, Int64}"
86913	"Tuple{typeof(Base.getindex), Array{Float64, 1}, UInt8}"
158815	"Tuple{typeof(DecisionTrees.numeratorsum), DecisionTrees.Node{UInt8}}"
101531	"Tuple{typeof(DecisionTrees.denominatorsum), DecisionTrees.Node{UInt8}}"
18173	"Tuple{typeof(DecisionTrees.fittedratio), DecisionTrees.Node{UInt8}}"
160790	"Tuple{typeof(DecisionTrees.total_n_subnodes), DecisionTrees.Node{UInt8}}"
976199	"Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{UInt8, 1}, getfield(DecisionTrees, Symbol("##138#139"))}, Int64, Int64}"
34765	"Tuple{typeof(Base.collect), Base.Generator{Array{UInt8, 1}, getfield(DecisionTrees, Symbol("##138#139"))}}"
134716	"Tuple{typeof(Base.throw_boundserror), Array{String, 1}, Tuple{Array{Int64, 1}}}"
373334	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{String, 1}, Array{Int64, 1}}"
247704	"Tuple{typeof(DecisionTrees.graph), DecisionTrees.Node{UInt8}, Int64, String, DecisionTrees.ModelSettings, String, Array{Array{String, 1}, 1}, Array{Array{Float64, 1}, 1}, Float64}"
204642	"Tuple{typeof(DecisionTrees.graph), DecisionTrees.Leaf, Int64, String, DecisionTrees.ModelSettings, String, Any, Array{Array{Float64, 1}, 1}, Float64}"
961976	"Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{UInt8, 1}, getfield(DecisionTrees, Symbol("##31#32"))}, Int64, Int64}"
39111	"Tuple{typeof(Base.collect), Base.Generator{Array{UInt8, 1}, getfield(DecisionTrees, Symbol("##31#32"))}}"
311704	"Tuple{typeof(DecisionTrees.write_tree), Array{Array{Float64, 1}, 1}, DecisionTrees.Node{UInt8}, Int64, Array{String, 2}, Array{String, 2}, Int64, Base.IOStream, Array{String, 1}, Array{Array{String, 1}, 1}}"
279309	"Tuple{getfield(DecisionTrees, Symbol("##my_write#28")), Char, Function, Base.IOStream, Array{String, 2}}"
783408	"Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{UInt8, 1}, getfield(DecisionTrees, Symbol("##33#34"))}, Int64, Int64}"
44247	"Tuple{typeof(Base.collect), Base.Generator{Array{UInt8, 1}, getfield(DecisionTrees, Symbol("##33#34"))}}"
276148	"Tuple{typeof(DecisionTrees.write_tree), Array{Array{Float64, 1}, 1}, DecisionTrees.Node{UInt8}, Int64, Int64, Base.IOStream, Array{String, 1}, Array{Array{String, 1}, 1}}"
1214816	"Tuple{typeof(DecisionTrees.write_tree_at_each_node!), Array{Array{Float64, 1}, 1}, DecisionTrees.Leaf, Int64, Int64, Base.IOStream, Array{String, 1}, Array{Array{String, 1}, 1}, String, Float64}"
834371	"Tuple{getfield(DecisionTrees, Symbol("##write_sas_code#38")), String, Int64, Function, Array{Array{Float64, 1}, 1}, DecisionTrees.Tree, Int64, String, Array{String, 1}, String, Array{Array{String, 1}, 1}, Float64}"
152889	"Tuple{typeof(Base.write), Base.IOStream, String, String, String}"
876642	"Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{UInt8, 1}, getfield(DecisionTrees, Symbol("##41#42"))}, Int64, Int64}"
33185	"Tuple{typeof(Base.collect), Base.Generator{Array{UInt8, 1}, getfield(DecisionTrees, Symbol("##41#42"))}}"
274964	"Tuple{typeof(DecisionTrees.write_tree_at_each_node!), Array{Array{Float64, 1}, 1}, DecisionTrees.Node{UInt8}, Int64, Int64, Base.IOStream, Array{String, 1}, Array{Array{String, 1}, 1}, String, Float64}"
62815	"Tuple{typeof(DelimitedFiles.writecsv), String, Array{Any, 2}}"
115358	"Tuple{getfield(DelimitedFiles, Symbol("##writecsv#3")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, String, Array{Any, 2}}"
169876	"Tuple{getfield(Base, Symbol("##open#304")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, getfield(DelimitedFiles, Symbol("##19#20")){Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Array{Any, 2}, Char}, String, Vararg{String, N} where N}"
493432	"Tuple{getfield(DelimitedFiles, Symbol("##writedlm#15")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, Base.IOStream, Array{Any, 2}, Char}"
363853	"Tuple{typeof(DelimitedFiles.writedlm_cell), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Char, Bool}"
52938	"Tuple{typeof(DelimitedFiles.writedlm_cell), Base.GenericIOBuffer{Array{UInt8, 1}}, Int64, Char, Bool}"
50173	"Tuple{typeof(DelimitedFiles.writedlm_cell), Base.GenericIOBuffer{Array{UInt8, 1}}, Float64, Char, Bool}"
113382	"Tuple{typeof(Base.getindex), Tuple{UInt64, Tuple{UInt64, Tuple{}}}, Int64}"
85334	"Tuple{typeof(Base.setproperty!), DecisionTrees.ModelSettings, Symbol, Int64}"
252840	"Tuple{Type{ProgressMeter.Progress}, Int64, Int64, String, Int64, Symbol, Base.TTY}"
171062	"Tuple{getfield(ProgressMeter, Symbol("##Progress#1#2")), Int64, String, Symbol, Base.TTY, Int64, ProgressMeter.BarGlyphs, Type{T} where T, Int64}"
713878	"Tuple{typeof(Base.vcat), Array{String, 1}, Array{String, 1}}"
50568	"Tuple{getfield(DecisionTrees, Symbol("##createScorebandsUTF8List#27")), Bool, Function, Array{Int64, 1}, Int64}"
65580	"Tuple{typeof(Base.string), String, Char, Vararg{Any, N} where N}"
3533040	"Tuple{typeof(DecisionTrees.InsertionSort!), Array{Float64, 1}, Array{Int64, 1}, Int64, Int64}"
154074	"Tuple{typeof(DecisionTrees.quicksort!), Array{Float64, 1}, Array{Int64, 1}, Int64, Int64}"
45432	"Tuple{typeof(DecisionTrees.my_sortperm_you_should_regularily_check_if_sortperm_in_base_has_become_more_efficient!), Array{Int64, 1}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}}"
248099	"Tuple{typeof(Base.mightalias), Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Array{Int64, 1}}"
162766	"Tuple{typeof(Base.throw_boundserror), Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Tuple{Array{Int64, 1}}}"
586272	"Tuple{typeof(Base.throw_checksize_error), Array{Int64, 1}, Tuple{Base.OneTo{Int64}}}"
45827	"Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Int64, 1}, Array{Int64, 1}}"
1221532	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Base.Broadcast.Extruded{Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Extruded{Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}}"
585087	"Tuple{typeof(DecisionTrees.cumulativeToIncremental!), Array{Int64, 1}}"
178963	"Tuple{typeof(DecisionTrees.cumulativeToIncremental!), Array{Float64, 1}}"
801581	"Tuple{getfield(DecisionTrees, Symbol("##constructScores!#54")), Bool, Function, Bool, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Float64, Int64, Bool}"
1031902	"Tuple{typeof(DecisionTrees.derive_scores_main_aggregation_step!), Int64, Float64, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Any, Array{Int64, 1}, Array{Float64, 1}}"
120494	"Tuple{typeof(Base.length), Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}}"
172642	"Tuple{typeof(Base.getindex), Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Int64}"
939457	"Tuple{typeof(DecisionTrees.aggregate_values_per_score), Int64, Array{Int64, 1}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Any, Any}"
97975	"Tuple{typeof(Base.:(/)), Float64, Int64}"
325531	"Tuple{typeof(DecisionTrees.sum_up_ratios!), Array{Float64, 1}, Any, Int64, Any, Array{Float64, 1}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Int64, Int64}"
2767805	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(-)), Tuple{Float64, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.literal_pow), Tuple{Base.RefValue{typeof(Base.:(^))}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(/)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Int64}}, Int64}}, Base.RefValue{Base.Val{2}}}}}}, Tuple{Int64}}"
462222	"Tuple{typeof(Base.unshift!), Array{Float64, 1}, Float64}"
295507	"Tuple{typeof(DecisionTrees.mylinreg), Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}"
289580	"Tuple{typeof(Base.shift!), Array{Float64, 1}}"
316445	"Tuple{typeof(DecisionTrees.lowessSmoothVector!), Array{Float64, 1}, Float64}"
534124	"Tuple{typeof(DecisionTrees.enforce_monotonicity!), Array{Float64, 1}}"
102716	"Tuple{typeof(DecisionTrees.smooth_scores), Array{Float64, 1}, Any, Any}"
505680	"Tuple{typeof(DecisionTrees.insert_gaps_to_scores!), Float64, Int64, Int64, Array{Float64, 1}, Array{Float64, 1}, Any, Array{Float64, 1}, Array{Int64, 1}, Array{Float64, 1}, Any, Any}"
147358	"Tuple{typeof(Base.insert!), Array{Float64, 1}, Int64, Float64}"
1580249	"Tuple{typeof(Base._findin), Array{String, 2}, Array{String, 1}}"
24493	"Tuple{typeof(Base.findin), Array{String, 2}, Array{String, 1}}"
554272	"Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.max), Base.IndexLinear, Array{Float64, 1}}"
157630	"Tuple{typeof(DecisionTrees.createTrnValStatsForThisIteration), Array{String, 1}, Int64, Array{Int64, 1}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Any, Any, Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Array{Int64, 1}}, false}, Any, Any, Any, Any, Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Array{Int64, 1}}, false}, DecisionTrees.ModelSettings}"
767211	"Tuple{typeof(Base.throw_boundserror), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Array{Int64, 1}}, false}, Tuple{Int64}}"
387950	"Tuple{typeof(DecisionTrees.aggregateScores), Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Array{Int64, 1}}, false}, Array{Int64, 1}}"
99556	"Tuple{typeof(Base.hcat), Array{String, 1}, Array{Float64, 1}, Array{Float64, 1}, Vararg{Array{Float64, 1}, N} where N}"
65580	"Tuple{typeof(Base.promote_eltype), Array{String, 1}, Array{Float64, 1}, Vararg{Array{Float64, 1}, N} where N}"
1451063	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Any, 2}, Array{String, 1}, Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}}"
139851	"Tuple{typeof(Base.typed_hcat), Type{Any}, Array{String, 1}, Array{Float64, 1}, Array{Float64, 1}, Vararg{Array{Float64, 1}, N} where N}"
152099	"Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Bool}"
94420	"Tuple{typeof(Base.hcat), Int64, Float64, Float64, Vararg{Number, N} where N}"
84939	"Tuple{typeof(Base.promote_typeof), Int64, Float64, Vararg{Any, N} where N}"
78223	"Tuple{typeof(Base.promote_typeof), Float64, Float64, Vararg{Any, N} where N}"
97580	"Tuple{typeof(Base.promote_typeof), Float64, Int64, Vararg{Any, N} where N}"
75852	"Tuple{typeof(Base.promote_typeof), Int64, Int64, Vararg{Any, N} where N}"
76642	"Tuple{Type{Array{Float64, 2}}, UndefInitializer, Int64, Int64}"
299457	"Tuple{typeof(Base.hvcat_fill), Array{Float64, 2}, Tuple{Int64, Float64, Float64, Float64, Float64, Float64, Float64, Int64, Int64, Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64}}"
81778	"Tuple{typeof(Base.vcat), Array{String, 2}, Array{Float64, 2}}"
1825977	"Tuple{typeof(ProgressMeter.durationstring), Float64}"
1142124	"Tuple{typeof(ProgressMeter.durationstring), Int64}"
327902	"Tuple{getfield(ProgressMeter, Symbol("##updateProgress!#5")), Array{Any, 1}, Symbol, Function, ProgressMeter.Progress}"
313284	"Tuple{typeof(Base._compute_eltype), Type{Tuple{Array{Any, 2}, Array{Float64, 2}}}}"
803556	"Tuple{typeof(Base.mapfoldl_impl), getfield(Base, Symbol("##99#101")), typeof(Base.add_sum), Int64, Tuple{Array{Any, 2}, Array{Float64, 2}}, Int64}"
443260	"Tuple{typeof(Base.typed_vcat), Type{Any}, Array{Any, 2}, Array{Float64, 2}}"
28839	"Tuple{typeof(Base.vcat), Array{Any, 2}, Array{Float64, 2}}"
496198	"Tuple{typeof(Base.view), Array{UInt8, 1}, Array{Int64, 1}}"
586272	"Tuple{typeof(Base.throw_boundserror), Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Array{Int64, 1}}, false}, Tuple{Int64}}"
290371	"Tuple{typeof(Base.unique), Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Array{Int64, 1}}, false}}"
24098	"Tuple{typeof(Base.unique), Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Array{Int64, 1}}, false}}"
344099	"Tuple{typeof(Base.union!), Base.Set{UInt8}, Array{UInt8, 1}}"
345284	"Tuple{typeof(Base.delete!), Base.Dict{UInt8, Nothing}, UInt8}"
66370	"Tuple{typeof(Base.mapfoldl_impl), typeof(Base.identity), typeof(Base.delete!), Base.Set{UInt8}, Array{UInt8, 1}}"
461828	"Tuple{typeof(Base.pop!), Base.Dict{UInt8, Nothing}, UInt8}"
88889	"Tuple{typeof(Base.mapfilter), getfield(Base, Symbol("##87#88")){typeof(Base.in), typeof(Base.pop!), Base.Set{UInt8}}, typeof(Base.push!), Array{UInt8, 1}, Array{UInt8, 1}}"
35555	"Tuple{typeof(Base.setdiff), Array{UInt8, 1}, Array{UInt8, 1}}"
81382	"Tuple{Type{DecisionTrees.Splitdef{T} where T<:Unsigned}, Int64, Int64, Symbol, Array{UInt8, 1}, Float64, Float64, Float64}"
97185	"Tuple{Type{DecisionTrees.Node{T} where T<:Unsigned}, Int64, Int64, Array{UInt8, 1}, DecisionTrees.Node{UInt8}, DecisionTrees.Node{UInt8}, Array{DecisionTrees.Rulepath{T} where T<:Unsigned, 1}}"
600099	"Tuple{getfield(ProgressMeter, Symbol("##barstring#17")), ProgressMeter.BarGlyphs, Function, Int64, Float64}"
212939	"Tuple{getfield(Base, Symbol("##258#259")){Tuple{Char, String, Char, String, Char}}, Base.GenericIOBuffer{Array{UInt8, 1}}}"
235062	"Tuple{typeof(ProgressMeter.move_cursor_up_while_clearing_lines), Base.TTY, Int64}"
833581	"Tuple{typeof(Base.print), Base.TTY, Char, String}"
216099	"Tuple{typeof(ProgressMeter.printover), Base.TTY, String, Symbol}"
851754	"Tuple{getfield(Base, Symbol("##with_output_color#680")), Bool, Function, Function, Symbol, Base.TTY, String}"
532149	"Tuple{typeof(Base.:(*)), PyCall.PyObject, String}"
224790	"Tuple{getfield(ProgressMeter, Symbol("##printvalues!#16")), Symbol, Function, ProgressMeter.Progress, Array{Any, 1}}"
963161	"Tuple{getfield(Base, Symbol("##with_output_color#680")), Bool, Function, Function, Symbol, Base.TTY, String, Vararg{String, N} where N}"
295506	"Tuple{getfield(Base, Symbol("##258#259")){Tuple{Char, String, Char}}, Base.GenericIOBuffer{Array{UInt8, 1}}}"
103111	"Tuple{typeof(Base.vcat), Array{Any, 2}, Array{String, 2}}"
1143310	"Tuple{typeof(DecisionTrees.defineChartWith2Series), String, String, String, String, Int64, Int64, Int64, Int64}"
562568	"Tuple{typeof(DecisionTrees.defineChartWithNSeries), String, String, String, String, Int64, Int64, Array{Int64, 1}, Int64, String, String, String}"
678717	"Tuple{typeof(DecisionTrees.add_iteration_charts!), DecisionTrees.ExcelData, DecisionTrees.ModelSettings, Any}"
244544	"Tuple{Type{Base.Dict{Any, Any}}, Base.Pair{String, Int64}, Vararg{Base.Pair{A, B} where B where A, N} where N}"
324741	"Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Int64, String}"
812643	"Tuple{getfield(DecisionTrees, Symbol("##defineChartWithNSeries#135")), String, Int64, String, Any, Int64, Float64, Function, String, String, String, String, Int64, Int64, Array{Int64, 1}, Int64, String, String, String}"
910618	"Tuple{typeof(Base.unsafe_copyto!), Array{Float64, 2}, Int64, Array{Float64, 1}, Int64, Int64}"
710716	"Tuple{typeof(Base.copyto!), Array{Float64, 2}, Int64, Array{Int64, 1}, Int64, Int64}"
230717	"Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}}}"
610765	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Float64, 2}, Array{Float64, 1}, Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}}"
643952	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Float64, 2}, Array{Int64, 1}, Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}}"
145777	"Tuple{typeof(Base.typed_hcat), Type{Float64}, Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Vararg{Array{Float64, 1}, N} where N}"
3150225	"Tuple{typeof(Base.getindex), DataFrames.DataFrame, Array{Int64, 1}, Int64}"
502124	"Tuple{typeof(DecisionTrees.createPredictorData), Array{Int64, 1}, Any, Any, Array{Array{Float64, 1}, 1}, Any, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, DataFrames.DataFrame}"
150124	"Tuple{getfield(Base, Symbol("#kw##cat_t")), NamedTuple{(:dims,), Tuple{Base.Val{2}}}, typeof(Base.cat_t), Type{String}, String, String, Vararg{String, N} where N}"
77432	"Tuple{getfield(Base, Symbol("##cat_t#107")), Base.Val{2}, Function, Type{String}, String, Vararg{String, N} where N}"
127210	"Tuple{typeof(Base.map), typeof(Base.cat_size), Tuple{String, String, String, String, String, String, String, String}}"
229136	"Tuple{typeof(Base.cat_shape), Tuple{Bool, Bool}, Tuple{Int64, Int64}, Tuple{Int64}, Tuple{Int64}, Vararg{Tuple{Int64}, N} where N}"
195160	"Tuple{typeof(Base.cat_shape), Tuple{Bool, Bool}, Tuple{Int64, Int64}, Tuple{Int64}}"
94420	"Tuple{Type{Array{String, N} where N}, UndefInitializer, Tuple{Int64, Int64}}"
99556	"Tuple{typeof(Base.deepcopy), String}"
382420	"Tuple{typeof(Base.getindex), DecisionTrees.PooledArraysDTM.PooledArray{Float64, UInt8, 1, Array{UInt8, 1}}, Array{Int64, 1}}"
52939	"Tuple{typeof(Missings.levels), DecisionTrees.PooledArraysDTM.PooledArray{Float64, UInt8, 1, Array{UInt8, 1}}}"
474865	"Tuple{typeof(DecisionTrees.defineUnivariateChart), String, String, String, String, Int64, Int64, Int64, Int64, Int64}"
488297	"Tuple{typeof(DecisionTrees.defineUnivariateChartWith2Lines), String, String, String, String, Int64, Int64, Int64, Int64, Int64, Int64}"
1984792	"Tuple{typeof(DecisionTrees.addPredictorData), Array{Float64, 1}, Array{String, 2}, DecisionTrees.ModelSettings, Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Array{Int64, 1}}, false}, Array{Float64, 1}, Any, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Any, Any, Any, Int64}"
1308841	"Tuple{typeof(DecisionTrees.aggregate_data), DecisionTrees.PooledArraysDTM.PooledArray{Float64, UInt8, 1, Array{UInt8, 1}}, Any, Array{Float64, 1}, Any, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}}"
127605	"Tuple{typeof(Base.zeros), Type{Int64}, UInt8}"
178568	"Tuple{typeof(Base.getindex), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Array{Int64, 1}}, false}, Int64}"
55308	"Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.isnan), Tuple{Array{Int64, 1}}}"
989235	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.isnan), Tuple{Base.Broadcast.Extruded{Array{Int64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}}"
448000	"Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.isnan), Tuple{Array{Int64, 1}}}}"
175803	"Tuple{typeof(DecisionTrees.replace_in_vector!), Array{Int64, 1}, Int64, Int64}"
67556	"Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Int64, 1}, Array{Int64, 1}}"
49777	"Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(/)), Tuple{Array{Int64, 1}, Array{Int64, 1}}}"
33185	"Tuple{typeof(Base.Broadcast.broadcastable), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(/)), Tuple{Array{Int64, 1}, Array{Int64, 1}}}}"
47012	"Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.DefaultArrayStyle{1}, Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(/)), Tuple{Array{Int64, 1}, Array{Int64, 1}}}}"
50568	"Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.round), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(/)), Tuple{Array{Int64, 1}, Array{Int64, 1}}}}}"
951309	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.round), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(/)), Tuple{Base.Broadcast.Extruded{Array{Int64, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Extruded{Array{Int64, 1}, Tuple{Bool}, Tuple{Int64}}}}}}, Tuple{Int64}}"
196346	"Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.round), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(/)), Tuple{Array{Int64, 1}, Array{Int64, 1}}}}}}"
108643	"Tuple{typeof(Base.axes), Array{Float64, 1}}"
96395	"Tuple{typeof(Base.similar), Type{Array{Int64, N} where N}, Tuple{Base.OneTo{Int64}}}"
103901	"Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Int64, 1}}"
139852	"Tuple{typeof(Base.iterate), Array{Float64, 1}}"
131160	"Tuple{typeof(Base.convert), Type{Int64}, Float64}"
117728	"Tuple{typeof(Base.iterate), Array{Float64, 1}, Int64}"
73482	"Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float64, 1}, Array{Float64, 1}}"
409679	"Tuple{typeof(Base.promote_shape), Array{Float64, 1}, Array{Float64, 1}}"
1026372	"Tuple{typeof(Base.Broadcast.broadcast), typeof(Base.:(-)), Array{Float64, 1}, Array{Float64, 1}}"
28839	"Tuple{typeof(Base.:(-)), Array{Float64, 1}, Array{Float64, 1}}"
120099	"Tuple{typeof(Base.hcat), Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Vararg{Array{T, 1} where T, N} where N}"
101136	"Tuple{typeof(Base.promote_eltype), Array{Float64, 1}, Array{Float64, 1}, Vararg{Any, N} where N}"
667260	"Tuple{typeof(Base.typed_hcat), Type{Float64}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Vararg{Union{AbstractArray{T, 2}, AbstractArray{T, 1}} where T, N} where N}"
67160	"Tuple{typeof(Base.size), Array{Float64, 1}, Int64}"
104297	"Tuple{typeof(Base.similar), Array{Float64, 1}, Type{Float64}, Int64, Int64}"
174222	"Tuple{typeof(Base.copyto!), Array{Float64, 2}, Int64, Array{Float64, 1}, Int64, Int64}"
199112	"Tuple{typeof(Base._compute_eltype), Type{Tuple{Array{String, 2}, Array{Float64, 2}, Array{String, 2}}}}"
694914	"Tuple{typeof(Base.mapfoldl_impl), getfield(Base, Symbol("##99#101")), typeof(Base.add_sum), Int64, Tuple{Array{String, 2}, Array{Float64, 2}, Array{String, 2}}, Int64}"
432198	"Tuple{typeof(Base.typed_vcat), Type{Any}, Array{String, 2}, Array{Float64, 2}, Array{String, 2}}"
30025	"Tuple{typeof(Base.vcat), Array{String, 2}, Array{Float64, 2}, Array{String, 2}}"
66370	"Tuple{typeof(Base.vcat), Array{String, 2}, Array{Any, 2}}"
374124	"Tuple{typeof(Base.getindex), DecisionTrees.PooledArraysDTM.PooledArray{String, UInt8, 1, Array{UInt8, 1}}, Array{Int64, 1}}"
182123	"Tuple{typeof(Missings.levels), DecisionTrees.PooledArraysDTM.PooledArray{String, UInt8, 1, Array{UInt8, 1}}}"
1949631	"Tuple{typeof(DecisionTrees.addPredictorData), Array{String, 1}, Array{String, 2}, DecisionTrees.ModelSettings, Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Array{Int64, 1}}, false}, Array{Float64, 1}, Any, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Any, Any, Any, Int64}"
1291063	"Tuple{typeof(DecisionTrees.aggregate_data), DecisionTrees.PooledArraysDTM.PooledArray{String, UInt8, 1, Array{UInt8, 1}}, Any, Array{Float64, 1}, Any, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}}"
113382	"Tuple{typeof(Base.hcat), Array{String, 1}, Array{Float64, 1}, Array{Float64, 1}, Vararg{Array{T, 1} where T, N} where N}"
105877	"Tuple{typeof(Base.promote_eltype), Array{String, 1}, Array{Float64, 1}, Vararg{Any, N} where N}"
673185	"Tuple{typeof(Base.typed_hcat), Type{Any}, Array{String, 1}, Array{Float64, 1}, Array{Float64, 1}, Vararg{Union{AbstractArray{T, 2}, AbstractArray{T, 1}} where T, N} where N}"
79012	"Tuple{typeof(Base.size), Array{String, 1}, Int64}"
106667	"Tuple{typeof(Base.similar), Array{String, 1}, Type{Any}, Int64, Int64}"
196346	"Tuple{typeof(Base._compute_eltype), Type{Tuple{Array{String, 2}, Array{Any, 2}, Array{String, 2}}}}"
669630	"Tuple{typeof(Base.mapfoldl_impl), getfield(Base, Symbol("##99#101")), typeof(Base.add_sum), Int64, Tuple{Array{String, 2}, Array{Any, 2}, Array{String, 2}}, Int64}"
385186	"Tuple{typeof(Base.typed_vcat), Type{Any}, Array{String, 2}, Array{Any, 2}, Array{String, 2}}"
101530	"Tuple{typeof(Base.vcat), Array{String, 2}, Array{Any, 2}, Array{String, 2}}"
77827	"Tuple{typeof(Base.push!), Array{DecisionTrees.Chart, 1}, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, Vararg{DecisionTrees.Chart, N} where N}"
557827	"Tuple{typeof(Base._append!), Array{DecisionTrees.Chart, 1}, Base.HasLength, Tuple{DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart}}"
45433	"Tuple{typeof(Base.append!), Array{DecisionTrees.Chart, 1}, Tuple{DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart}}"
72296	"Tuple{typeof(Base.convert), Type{DataFrames.DataFrame}, Array{Any, 2}}"
2148347	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Any, 2}, Array{Any, 1}, Base.UnitRange{Int64}, Base.UnitRange{Int64}}"
88494	"Tuple{typeof(Base.repeat), Array{Any, 1}, Int64, Int64}"
1456199	"Tuple{typeof(DecisionTrees.defineTwoWayCharts), String, String, String, String, Int64, Int64, Int64, Int64, Int64, String, String, String}"
1384692	"Tuple{typeof(DecisionTrees.createTwoWayValidationCharts), Array{Int64, 1}, Array{Int64, 1}, String, Array{String, 1}, Any, Any, Any, Any, Any, Any, Any, Array{Float64, 1}, DataFrames.DataFrame}"
353975	"Tuple{typeof(Base.view), Array{Float64, 1}, Array{Int64, 1}}"
84543	"Tuple{typeof(Base.similar), Array{Any, 2}}"
52544	"Tuple{typeof(Base.length), Array{Any, 2}}"
133136	"Tuple{typeof(Base.iterate), Array{Int64, 1}}"
680692	"Tuple{typeof(Base.typed_vcat), Type{UInt8}, Base.UnitRange{Int64}}"
283654	"Tuple{typeof(Random.rand!), Random.MersenneTwister, Array{Int64, 1}, Base.UnitRange{Int64}}"
23704	"Tuple{typeof(Base.rand), Base.UnitRange{Int64}, Int64}"
488297	"Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{UInt8, 1}, Base.IndexLinear, Array{Int64, 1}}"
28049	"Tuple{typeof(Base.convert), Type{Array{UInt8, 1}}, Array{Int64, 1}}"
50568	"Tuple{typeof(Base.string), UInt8}"
606421	"Tuple{typeof(DecisionTrees.update_matched_vectors!), Array{Int64, 1}, Array{Int64, 1}, Base.BitArray{1}, Base.BitArray{1}, Any, Any}"
47407	"Tuple{typeof(Base.Broadcast.broadcastable), UInt8}"
84939	"Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.DefaultArrayStyle{0}, Function, UInt8, UInt8}"
75852	"Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{UInt8, UInt8}}"
114173	"Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0}, Nothing, typeof(Base.:(==)), Tuple{UInt8, UInt8}}}"
768396	"Tuple{typeof(Base.throw_boundserror), Array{Int64, 1}, Tuple{Base.OneTo{Int64}}}"
108247	"Tuple{typeof(Base.unalias), Array{Int64, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}}"
57284	"Tuple{typeof(Base.copyto!), Array{Int64, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}}"
20938	"Tuple{typeof(Base.copymutable), Base.LogicalIndex{Int64, Base.BitArray{1}}}"
254025	"Tuple{typeof(Base.copy), Base.LogicalIndex{Int64, Base.BitArray{1}}}"
50963	"Tuple{typeof(Base.unaliascopy), Base.LogicalIndex{Int64, Base.BitArray{1}}}"
674371	"Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.LogicalIndex{Int64, Base.BitArray{1}}, getfield(Base, Symbol("##385#386"))}, Int64, Tuple{Int64, Int64}}"
55309	"Tuple{typeof(Base.collect), Base.Generator{Base.LogicalIndex{Int64, Base.BitArray{1}}, getfield(Base, Symbol("##385#386"))}}"
71901	"Tuple{typeof(Base.view), Array{Float64, 1}, Base.BitArray{1}}"
252050	"Tuple{typeof(Base.to_indices), Array{Float64, 1}, Tuple{Base.BitArray{1}}}"
120889	"Tuple{typeof(Base.map), getfield(Base, Symbol("##121#122")){Array{Float64, 1}}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}}"
124839	"Tuple{typeof(Base.checkbounds), Array{Float64, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}}"
101926	"Tuple{typeof(Base.unsafe_view), Array{Float64, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}}"
418371	"Tuple{typeof(Base.throw_boundserror), Array{Int64, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}}"
76642	"Tuple{typeof(Base.view), Array{Int64, 1}, Base.BitArray{1}}"
190420	"Tuple{typeof(Base._compute_eltype), Type{Tuple{Array{String, 1}, Array{String, 2}}}}"
704395	"Tuple{typeof(Base.mapfoldl_impl), getfield(Base, Symbol("##99#101")), typeof(Base.add_sum), Int64, Tuple{Array{String, 1}, Array{String, 2}}, Int64}"
335408	"Tuple{typeof(Base.throw_boundserror), Array{String, 2}, Tuple{Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}}"
593383	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{String, 2}, Array{String, 2}, Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}"
617482	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{String, 2}, Array{String, 1}, Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}"
107062	"Tuple{typeof(Base.typed_vcat), Type{String}, Array{String, 1}, Array{String, 2}}"
21333	"Tuple{typeof(Base.vcat), Array{String, 1}, Array{String, 2}}"
789729	"Tuple{typeof(Base.typed_hcat), Type{Any}, Array{Any, 1}, Array{String, 2}, Array{Any, 2}}"
32791	"Tuple{typeof(Base.hcat), Array{Any, 1}, Array{String, 2}, Array{Any, 2}}"
206223	"Tuple{typeof(Base.copyto!), Array{Any, 2}, Int64, Array{Any, 2}, Int64, Int64}"
220840	"Tuple{typeof(Base.deepcopy), Array{Any, 2}}"
112197	"Tuple{typeof(Base.length), Array{UInt8, 1}}"
640395	"Tuple{getfield(DecisionTrees, Symbol("##defineTwoWayCharts#134")), String, Int64, String, String, Any, Float64, Function, String, String, String, String, Int64, Int64, Int64, Int64, Int64, String, String, String}"
413630	"Tuple{typeof(Base.hcat), DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, Vararg{DecisionTrees.Chart, N} where N}"
71506	"Tuple{typeof(Base.similar), Array{DecisionTrees.Chart, 2}}"
50568	"Tuple{typeof(Base.length), Array{DecisionTrees.Chart, 2}}"
485136	"Tuple{typeof(Base._append!), Array{DecisionTrees.Chart, 1}, Base.HasLength, Tuple{DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart}}"
26864	"Tuple{typeof(Base.append!), Array{DecisionTrees.Chart, 1}, Tuple{DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart, DecisionTrees.Chart}}"
907063	"Tuple{typeof(Base.unsafe_copyto!), Array{String, 2}, Int64, Array{String, 2}, Int64, Int64}"
320000	"Tuple{typeof(Base.copyto!), Array{String, 2}, Int64, Array{String, 1}, Int64, Int64}"
753778	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{String, 2}, Array{String, 2}, Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}}"
608791	"Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{String, 2}, Array{String, 1}, Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}}"
135901	"Tuple{typeof(Base.typed_hcat), Type{String}, Array{String, 1}, Array{String, 2}}"
24099	"Tuple{typeof(Base.hcat), Array{String, 1}, Array{String, 2}}"
704791	"Tuple{typeof(Base.StackTraces.lookup), Base.InterpreterIP}"
150914	"Tuple{Type{Base.StackTraces.StackFrame}, Symbol, Symbol, Int64, Core.CodeInfo, Bool, Bool, Int64}"
214518	"Tuple{typeof(Base._compute_eltype), Type{Tuple{Array{String, 2}, Array{String, 2}, Array{Any, 2}, Array{String, 2}, Array{String, 2}}}}"
53729	"Tuple{typeof(Base.sum), Function, Tuple{Array{String, 2}, Array{String, 2}, Array{Any, 2}, Array{String, 2}, Array{String, 2}}}"
44642	"Tuple{typeof(Base.mapreduce), Function, Function, Tuple{Array{String, 2}, Array{String, 2}, Array{Any, 2}, Array{String, 2}, Array{String, 2}}}"
84148	"Tuple{typeof(Base.mapfoldl), Function, Function, Tuple{Array{String, 2}, Array{String, 2}, Array{Any, 2}, Array{String, 2}, Array{String, 2}}}"
191605	"Tuple{typeof(Base.mapfoldl_impl), getfield(Base, Symbol("##99#101")), typeof(Base.add_sum), Int64, Tuple{Array{String, 2}, Array{String, 2}, Array{Any, 2}, Array{String, 2}, Array{String, 2}}, Int64}"
123654	"Tuple{typeof(Base.iterate), Array{Int64, 1}, Int64}"
346075	"Tuple{typeof(Base.getindex), Array{Any, 2}, Base.UnitRange{Int64}, Function}"
90469	"Tuple{typeof(Base.convert), Type{Array{Float64, 2}}, Array{Any, 2}}"
60840	"Tuple{Type{DataFrames.DataFrame}, Array{Float64, 2}}"
431803	"Tuple{typeof(Base.view), Array{Any, 2}, Int64, Function}"
78617	"Tuple{typeof(Base.axes), Base.SubArray{Any, 1, Array{Any, 2}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}, true}}"
86914	"Tuple{typeof(Base.similar), Type{Array{Symbol, N} where N}, Tuple{Base.OneTo{Int64}}}"
188444	"Tuple{typeof(Base.iterate), Base.SubArray{Any, 1, Array{Any, 2}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}, true}}"
190815	"Tuple{typeof(Base.iterate), Base.SubArray{Any, 1, Array{Any, 2}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{Base.OneTo{Int64}, Int64}}"
107852	"Tuple{typeof(DataFrames.names!), DataFrames.DataFrame, Array{Symbol, 1}}"
671210	"Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{UInt64, 1}, Base.IndexLinear, Array{UInt8, 1}}"
88494	"Tuple{Type{DecisionTrees.BoostedTree}, Array{Union{DecisionTrees.Leaf, DecisionTrees.Node{UInt16}, DecisionTrees.Node{UInt8}}, 1}, DecisionTrees.ModelSettings, Array{Array{Array{Int64, 1}, 1}, 1}, Array{Array{Float64, 1}, 1}, Array{Array{String, 1}, 1}, Array{Array{Int64, 1}, 1}, Array{Float64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Float64, Bool, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 2}, DataFrames.DataFrame, DecisionTrees.ExcelData, Array{UInt8, 1}, Array{Union{Array{Float64, 1}, Array{String, 1}}, 1}}"
117729	"Tuple{typeof(DecisionTrees.write_sas_code), Array{Float64, 1}, Array{Array{Float64, 1}, 1}, DecisionTrees.BoostedTree, Int64, String, Array{String, 1}, String, Array{Array{String, 1}, 1}}"
3213830	"Tuple{typeof(Base.fill!), Array{Int64, 2}, Int64}"
2160594	"Tuple{typeof(Base.reduced_indices), Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Int64, Base.OneTo{Int64}}"
1474372	"Tuple{typeof(Base.check_reducedims), Array{Int64, 2}, Array{Int64, 2}}"
595754	"Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.add_sum), Array{Int64, 2}, Int64, Int64, Int64}"
397037	"Tuple{typeof(Base._mapreducedim!), typeof(Base.identity), typeof(Base.add_sum), Array{Int64, 2}, Array{Int64, 2}}"
48197	"Tuple{typeof(Base.sum), Array{Int64, 2}, Int64}"
295902	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(Base.:(>)), Tuple{Base.Broadcast.Extruded{Array{Int64, 2}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}, Int64}}, Tuple{Base.IteratorsMD.CartesianIndex{2}}}"
425482	"Tuple{typeof(Base.Broadcast.throwdm), Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}}"
181333	"Tuple{typeof(Base.throw_checksize_error), Base.BitArray{1}, Tuple{Base.OneTo{Int64}}}"
415605	"Tuple{typeof(DecisionTrees.variablesUsed), DecisionTrees.BoostedTree}"
798816	"Tuple{typeof(Base.throw_boundserror), Base.BitArray{2}, Tuple{Base.UnitRange{Int64}}}"
3215410	"Tuple{typeof(DecisionTrees.sas_write_elseif_ScoreMap), Base.IOStream, String, Int64, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}}"
373333	"Tuple{getfield(DecisionTrees, Symbol("##write_sas_code#35")), String, Int64, Function, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, DecisionTrees.BoostedTree, Int64, String, Array{String, 1}, String, Array{Array{String, 1}, 1}}"
228346	"Tuple{typeof(Base.deepcopy_internal), Array{UInt64, 1}, Base.IdDict{Any, Any}}"
108247	"Tuple{typeof(Base.deepcopy_internal), Tuple{Int64, Int64}, Base.IdDict{Any, Any}}"
75852	"Tuple{typeof(Base.getindex), Array{Array{String, 1}, 1}, Int64}"
54518	"Tuple{Type{Base.Generator{I, F} where F where I}, getfield(DecisionTrees, Symbol("##36#37")), Array{UInt8, 1}}"
425482	"Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{UInt8, 1}, getfield(DecisionTrees, Symbol("##36#37"))}, Int64, Int64}"
40297	"Tuple{typeof(Base.collect), Base.Generator{Array{UInt8, 1}, getfield(DecisionTrees, Symbol("##36#37"))}}"
259951	"Tuple{typeof(Base.getindex), Array{String, 1}, Array{Int64, 1}}"
49778	"Tuple{typeof(Base.join), Array{String, 1}, String}"
148543	"Tuple{typeof(Base.write), Base.IOStream, String, String, String, String, Vararg{Any, N} where N}"
108642	"Tuple{typeof(Base.hcat), Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Vararg{Array{T, 1} where T, N} where N}"
95605	"Tuple{typeof(Base.promote_eltype), Array{String, 1}, Array{Int64, 1}, Vararg{Any, N} where N}"
75457	"Tuple{typeof(Base.promote_eltype), Array{Int64, 1}, Array{Int64, 1}, Vararg{Any, N} where N}"
45432	"Tuple{typeof(Base.promote_eltype), Array{Int64, 1}, Array{Float64, 1}, Vararg{Array{Float64, 1}, N} where N}"
585087	"Tuple{typeof(Base.typed_hcat), Type{Any}, Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Vararg{Union{AbstractArray{T, 2}, AbstractArray{T, 1}} where T, N} where N}"
3008398	"Tuple{typeof(Base.promote_shape), Array{Float64, 1}, Array{Int64, 1}}"
1001877	"Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(+)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Extruded{Array{Int64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}}"
180544	"Tuple{typeof(Base.Broadcast.broadcast), typeof(Base.:(+)), Array{Float64, 1}, Array{Int64, 1}}"
2986669	"Tuple{typeof(DecisionTrees.write_tree), Array{Array{Float64, 1}, 1}, DecisionTrees.BoostedTree, Int64, Int64, Any, Array{String, 1}, Array{Array{String, 1}, 1}}"
170272	"Tuple{typeof(PyCall.pycall), PyCall.PyObject, Type{PyCall.PyAny}, PyCall.PyObject}"
698074	"Tuple{getfield(PyCall, Symbol("##_pycall#82")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, PyCall.PyObject, PyCall.PyObject}"
106667	"Tuple{typeof(Base.Filesystem.mktempdir)}"
74272	"Tuple{Type{AssertionError}, String}"
841482	"Tuple{typeof(Test.ip_has_file_and_func), Ptr{Nothing}, String, Tuple{Symbol, Symbol}}"
551902	"Tuple{getfield(Test, Symbol("##1#2")){String, Tuple{Symbol, Symbol}}, Base.StackTraces.StackFrame}"
66765	"Tuple{typeof(Test.ip_has_file_and_func), Base.InterpreterIP, String, Tuple{Symbol, Symbol}}"
105087	"Tuple{typeof(Base.findnext), getfield(Test, Symbol("##3#5")), Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}, Int64}"
202271	"Tuple{typeof(Base.throw_boundserror), Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}, Tuple{Base.UnitRange{Int64}}}"
1200989	"Tuple{typeof(Base.unsafe_copyto!), Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}, Int64, Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}, Int64, Int64}"
314469	"Tuple{typeof(Test.ip_has_file_and_func), Ptr{Nothing}, String, Tuple{Symbol}}"
484742	"Tuple{getfield(Test, Symbol("##1#2")){String, Tuple{Symbol}}, Base.StackTraces.StackFrame}"
59259	"Tuple{typeof(Test.ip_has_file_and_func), Base.InterpreterIP, String, Tuple{Symbol}}"
83753	"Tuple{typeof(Base.findnext), getfield(Test, Symbol("##4#6")), Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}, Int64}"
223210	"Tuple{typeof(Test.scrub_backtrace), Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}}"
102716	"Tuple{Type{Test.Error}, Symbol, Expr, LoadError, Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}, LineNumberNode}"
295902	"Tuple{getfield(Base, Symbol("##sprint#336")), Nothing, Int64, Function, Function, LoadError, Vararg{Any, N} where N}"
49778	"Tuple{typeof(Base.showerror), Base.GenericIOBuffer{Array{UInt8, 1}}, LoadError, Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}}"
115753	"Tuple{getfield(Base, Symbol("##showerror#620")), Bool, Function, Base.GenericIOBuffer{Array{UInt8, 1}}, LoadError, Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}}"
126815	"Tuple{getfield(Base, Symbol("#kw##showerror")), NamedTuple{(:backtrace,), Tuple{Bool}}, typeof(Base.showerror), Base.GenericIOBuffer{Array{UInt8, 1}}, AssertionError, Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}}"
586667	"Tuple{typeof(Base.show_backtrace), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}}"
52543	"Tuple{getfield(Base, Symbol("##showerror#617")), Bool, Function, Base.GenericIOBuffer{Array{UInt8, 1}}, AssertionError, Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}}"
171062	"Tuple{typeof(Base.showerror), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, AssertionError}"
20938	"Tuple{getfield(Base, Symbol("##618#619")){AssertionError}, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}}"
471704	"Tuple{getfield(Base, Symbol("##process_backtrace#638")), Bool, Function, getfield(Base, Symbol("##636#637")){Array{Any, 1}}, Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}, Int64}"
130766	"Tuple{typeof(Base.getindex), Array{Any, 1}, UInt64}"
109433	"Tuple{typeof(Base.StackTraces.is_loc_meta), Expr, Symbol}"
368198	"Tuple{typeof(Base.print), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, Int64, Vararg{Any, N} where N}"
71111	"Tuple{getfield(Base, Symbol("#kw##show_trace_entry")), NamedTuple{(:prefix,), Tuple{String}}, typeof(Base.show_trace_entry), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Base.StackTraces.StackFrame, Int64}"
51753	"Tuple{typeof(Base.show), Base.GenericIOBuffer{Array{UInt8, 1}}, Any}"
56889	"Tuple{Type{Base.ImmutableDict{Symbol, Any}}, Base.ImmutableDict{Symbol, Any}, Symbol, LoadError}"
62025	"Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Any}"
874667	"Tuple{typeof(Base.show_default), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Any}"
60445	"Tuple{Type{Base.ImmutableDict{Symbol, Any}}, Base.ImmutableDict{Symbol, Any}, Symbol, AssertionError}"
239408	"Tuple{typeof(Base.print), Test.Error}"
129975	"Tuple{typeof(Test.record), Test.DefaultTestSet, Test.Error}"
172642	"Tuple{getfield(Base, Symbol("#kw##printstyled")), NamedTuple{(:color,), Tuple{Symbol}}, typeof(Base.printstyled), String, String}"
118123	"Tuple{getfield(Base, Symbol("##printstyled#682")), Bool, Symbol, Function, String, Vararg{String, N} where N}"
177777	"Tuple{getfield(Base, Symbol("#kw##printstyled")), NamedTuple{(:bold, :color), Tuple{Bool, Symbol}}, typeof(Base.printstyled), Base.TTY, String, Vararg{String, N} where N}"
94025	"Tuple{getfield(Base, Symbol("##printstyled#681")), Bool, Symbol, Function, Base.TTY, String, Vararg{String, N} where N}"
169482	"Tuple{getfield(Base, Symbol("#kw##with_output_color")), NamedTuple{(:bold,), Tuple{Bool}}, typeof(Base.with_output_color), Function, Symbol, Base.TTY, String, Vararg{String, N} where N}"
1006618	"Tuple{typeof(Base.print), Base.TTY, Nothing}"
166321	"Tuple{typeof(Base.show), Base.TTY, Test.Error}"
97581	"Tuple{typeof(Base.print), Base.TTY, Test.Error}"
203062	"Tuple{getfield(Base, Symbol("#kw##printstyled")), NamedTuple{(:bold, :color), Tuple{Bool, Symbol}}, typeof(Base.printstyled), Base.TTY, Symbol, Vararg{Any, N} where N}"
103506	"Tuple{getfield(Base, Symbol("##printstyled#681")), Bool, Symbol, Function, Base.TTY, Symbol, Vararg{Any, N} where N}"
132346	"Tuple{getfield(Base, Symbol("#kw##with_output_color")), NamedTuple{(:bold,), Tuple{Bool}}, typeof(Base.with_output_color), Function, Symbol, Base.TTY, Symbol, Vararg{Any, N} where N}"
839902	"Tuple{getfield(Base, Symbol("##with_output_color#680")), Bool, Function, Function, Symbol, Base.TTY, Symbol, Vararg{Any, N} where N}"
203062	"Tuple{typeof(Base.print), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Symbol, String, Vararg{Any, N} where N}"
108642	"Tuple{typeof(Base.split), String, String}"
90074	"Tuple{typeof(Base.map), Function, Array{Base.SubString{String}, 1}}"
78617	"Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Test, Symbol("##8#10")), Array{Base.SubString{String}, 1}}"
594964	"Tuple{typeof(Base.collect_to!), Array{String, 1}, Base.Generator{Array{Base.SubString{String}, 1}, getfield(Test, Symbol("##8#10"))}, Int64, Int64}"
44642	"Tuple{typeof(Base._collect), Array{Base.SubString{String}, 1}, Base.Generator{Array{Base.SubString{String}, 1}, getfield(Test, Symbol("##8#10"))}, Base.EltypeUnknown, Base.HasShape{1}}"
33185	"Tuple{typeof(Base.collect_similar), Array{Base.SubString{String}, 1}, Base.Generator{Array{Base.SubString{String}, 1}, getfield(Test, Symbol("##8#10"))}}"
968692	"Tuple{typeof(Base.unsafe_copyto!), Array{UInt128, 1}, Int64, Array{UInt128, 1}, Int64, Int64}"
107456	"Tuple{typeof(Base.copy!), Random.MersenneTwister, Random.MersenneTwister}"
285235	"Tuple{typeof(Test.pop_testset)}"
195951	"Tuple{typeof(Base.pop!), Array{Test.AbstractTestSet, 1}}"
467359	"Tuple{typeof(Test.record), Test.DefaultTestSet, Test.DefaultTestSet}"
382815	"Tuple{typeof(Test.get_test_counts), Test.DefaultTestSet}"
1316346	"Tuple{typeof(Test.get_alignment), Test.DefaultTestSet, Int64}"
323556	"Tuple{typeof(Base.lpad), String, Int64, String}"
266667	"Tuple{typeof(Test.print_test_results), Test.DefaultTestSet, Int64}"
1244841	"Tuple{typeof(Base.copyto!), Array{Any, 1}, Int64, Array{Test.Error, 1}, Int64, Int64}"
717037	"Tuple{typeof(Base.copyto!), Array{Any, 1}, Int64, Array{Test.Fail, 1}, Int64, Int64}"
86519	"Tuple{typeof(Test.filter_errors), Test.DefaultTestSet}"
441679	"Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Union{Test.Error, Test.Fail}, 1}, Base.IndexLinear, Array{Any, 1}}"
73482	"Tuple{typeof(Test.finish), Test.DefaultTestSet}"
85729	"Tuple{typeof(Base.map), Function, Array{Any, 1}}"
87309	"Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Test, Symbol("##23#24")){Int64}, Array{Any, 1}}"
281284	"Tuple{typeof(Base._collect), Array{Any, 1}, Base.Generator{Array{Any, 1}, getfield(Test, Symbol("##23#24")){Int64}}, Base.EltypeUnknown, Base.HasShape{1}}"
30420	"Tuple{typeof(Base.collect_similar), Array{Any, 1}, Base.Generator{Array{Any, 1}, getfield(Test, Symbol("##23#24")){Int64}}}"
126814	"Tuple{typeof(Base._similar_for), Array{Any, 1}, Type{T} where T, Base.Generator{Array{Any, 1}, getfield(Test, Symbol("##23#24")){Int64}}, Base.HasShape{1}}"
109037	"Tuple{typeof(Base.similar), Array{Any, 1}, Type{Int64}, Tuple{Base.OneTo{Int64}}}"
479210	"Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Any, 1}, getfield(Test, Symbol("##23#24")){Int64}}, Int64, Int64}"
26865	"Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Array{Any, 1}, getfield(Test, Symbol("##23#24")){Int64}}, Int64}"
142618	"Tuple{getfield(Base, Symbol("#kw##printstyled")), NamedTuple{(:bold, :color), Tuple{Bool, Symbol}}, typeof(Base.printstyled), String, String}"
128790	"Tuple{getfield(Base, Symbol("#kw##printstyled")), NamedTuple{(:bold, :color), Tuple{Bool, Symbol}}, typeof(Base.printstyled), String}"
91654	"Tuple{getfield(Base, Symbol("##printstyled#682")), Bool, Symbol, Function, String}"
392297	"Tuple{typeof(Base.print), String, String}"
346469	"Tuple{typeof(Test.print_counts), Test.DefaultTestSet, Int64, Int64, Int64, Int64, Int64, Int64, Int64}"
130371	"Tuple{getfield(Base, Symbol("#kw##printstyled")), NamedTuple{(:color,), Tuple{Symbol}}, typeof(Base.printstyled), String}"
331852	"Tuple{typeof(Base.vect), Test.Error}"
112592	"Tuple{typeof(Base.setindex!), Array{Union{Test.Error, Test.Fail}, 1}, Test.Error, Int64}"
