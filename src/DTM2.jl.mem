        - __precompile__()
        - info("DTM: BK to fix this - we should not rely on mappings and candmatwomax anymore (if possible)")
        - info("DTM: BK to add purity improvement for each split! Stop splitting if it is > threshold")
        - warn("BK: do not rely on sort!(uniqueRelativitiesSorted,alg=QuickSort) but instead simply sort the relativities (overwrite this arr) and then aggregate it into scores!")
        - warn("BK: do not use df_name_vector anymore, but the symbol in the subset or simply names(features) - possibly also get rid of mappings and candmat....")
        - warn("BK: avoid branching in critical functions / use ifelse or similar constructs")
        - VERSION >= v"0.6-"
        - 
        - module DTM2
        - 
        - srand(1234)
        - export run_model,run_model_actual,define_eltypevector,prepare_dataframe_for_dtm!,updateSettingsMod!,prep_data_from_df_modernized,run_legacy
        - 
        - #using SQLite #currently breaking...
        - using OnlineStats, StatsFuns, SQLite, DataFrames, DataArrays, ProgressMeter, PyCall, HDF5, JLD
        - #using Iterators
        - #using ArrayViews #with Julia 0.5 view() seems to be part of Base, see ?Base.view
        - # using MySQL, # temporarily disabled
        - 
        - #using Totalsizeof
        - #using InitPython #these two are modules which are not "added through Pkg.add(....) "
        - 
        - #export return_file_and_folders, run_model, build_tree, build_tree_iteration!, boosted_tree, _split, apply_tree,index_vector_from_rulepath
        - #include("check_if_python_packages_are_installed.jl")
        - include("types.jl")
        - include("splittingmeasures\\splittingmeasures.jl")
        - include("helper_functions.jl")
        - include("apply_tree_fn.jl")
        - include("decisiontree.jl")
        - include("boosting.jl")
        - include("bagging.jl")
        - include("runmodel.jl")
        - include("runmodel_multi.jl")
        - include("charts.jl")
        - include("dot_graphs.jl")
        - include("roc.jl")
        - #include("onlineStats_addons.jl")
        - #include("sqlite_query.jl")
        - 
        - 
        - 
        - global const pyModPandas = PyNULL()
        - global const_default_splitdef=Splitdef(0,0,Symbol(),Vector{UInt8}(),-Inf,0.0,0.0)
        - 
        - function __init__()
        - 	#we initialize Python here in the beginning, such that Julia would crash (prior to the modelling) in case there is an installation error with python
        - 	#InitPython.initializePython() #todo/tbd check if and when this line is needed
        0 	global const juliaStartedat=now() 
        - 	#unshift!(PyVector(pyimport("sys")["path"]), "") #By default, PyCall doesn't include the current directory in the Python search path. If you want to do that (in order to load a Python module from the current directory) we need to run this
        - 	#unshift!(PyVector(pyimport("sys")["path"]),"C:\\Anaconda3\\Lib\\site-packages")
        - 	#global const pyModPandas=pywrap(pyimport("pandas")) #this line should be equivalent to  @pyimport pandas as pyModPandas
        0     copy!(pyModPandas, pyimport_conda("pandas","pandas"))
        - 
        0 	global const global_number_of_num_f_warning_mandatory_field="Abort. Settings do not contain any value for number_of_num_features (which is mandatory)."
        0 	global const stars="*******************************************************************************"
        0 	global const emptyRulepath=Array{Rulepath}(0)
        0 	global const emptyLeaf=Leaf(0,NaN,NaN,NaN,-1,emptyRulepath,NaN,NaN,0)
        0 	global const emptyNode=Node(0,0,Array{UInt8}(0),deepcopy(emptyLeaf),deepcopy(emptyLeaf),deepcopy(emptyRulepath))
        0 	global const global_const_shift_cols=5+1-1
        0 	global const global_pldamod_valid_types=[String,Float64]
        - 
        0 	global const global_nameOfSettingsSheet="ModelSettings"
        0 	global const global_nameOfModelStatisticsSheet="ModelStatistics"
        0 	global const global_nameOfTWOWayValidationSheet="2Way_ValidationGraphs"
        - 
        0 	global const DifferenceSplitConst      =  DifferenceSplit() #todo/tbd check if we need the constants like Difference at all (I think we do not need these)
        0 	global const MaxValue				   =  MaxValueSplit()
        0 	global const MaxAbsValue			   =  MaxAbsValueSplit()
        0 	global const MaxMinusValue			   =  MaxMinusValueSplit()
        0 	global const MSE                       =  MSESplit()
        0 	global const RankOpt                   =  RankOptSplit()
        0 	global const ROptMinRLostPct           =  ROptMinRLostPctSplit()
        0 	global const ROptMinRLost              =  ROptMinRLostSplit()
        0 	global const SORTBYMEAN				   =  SortByMean()
        - 	#const empty_expr=:("undefined"=="undef")
        - 	#const STRING_WHICH_DOES_NOT_OCCUR_IN_DATA=convert(String,"Z.\???!?Z")
        - 	#global const splittingcrits=["_mse" "_difference" "_difference_rankopt" "_minimize_lost_ranks_maximize_5pct" "_minimize_lost_ranks_maximize_minresidual" "_RankOpt" "_minimize_lost_ranks_difference" "_difference_vectorized" "_difference2" "_difference_devectorized_simd" "_mean_abs_error" "_mean_abs_error_rel" "_sum_abs_error" "_reduction_in_variance" "_reduction_in_standarddeviation" "_min_std" "_min_mean" "_max_mean"]
        - 
        0 	global const global_statsperiter_header=["Iteration" "Correlation" "Std Dev Trn" "Std Dev Val" "Std Dev Ratio" "Lift Trn" "Lift Val" "Reversals Trn" "Reversals Val" "RelDiff TrnObs vs ValObs" "RelDiff ValObs vs TrnFitted" "Min Rel Trn" "Max Rel Trn" "Min Observed Ratio Trn" "Max Observed Ratio Trn"  "Min Rel Val" "Max Rel Val" "Min Observed Ratio Val" "Max Observed Ratio Val" "Gini Num Unweighted Trn" "Gini Numerator Unweighted Val" "Quadratic Weighted Kappa Trn" "Quadratic Weighted Kappa Val"]
        - 
        0 	global const global_debug_csharp=false
        0 	global const global_byte_order_mark='\ufeff'
        0 	global const CSHARP_VALID_CHARS="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_123456789äëöüïÿâêîôûàèìòùáéíóúý" #the list is probably much longer, but this will do for now
        0 	global const DoubleQuote='\"' #note, this is here at the end only because Notepad++ messes up the formatting after this definition
        - end
        - 
        - end #end Module DTM
        - 
