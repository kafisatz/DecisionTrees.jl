function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    precompile(Tuple{typeof(DataFrames.nrow), DataFrames.DataFrame})
    precompile(Tuple{typeof(DataFrames.insert_single_column!), DataFrames.DataFrame, Array{Int64, 1}, Symbol})
    precompile(Tuple{typeof(DataFrames.insert_single_column!), DataFrames.DataFrame, DecisionTrees.PooledArraysDTM.PooledArray{String, UInt8, 1, Array{UInt8, 1}}, Symbol})
    precompile(Tuple{typeof(DataFrames.insert_single_column!), DataFrames.DataFrame, DecisionTrees.PooledArraysDTM.PooledArray{Float64, UInt16, 1, Array{UInt16, 1}}, Symbol})
    precompile(Tuple{typeof(DataFrames.insert_single_column!), DataFrames.DataFrame, Array{Float64, 1}, Symbol})
    precompile(Tuple{typeof(DataFrames.insert_single_column!), DataFrames.DataFrame, DecisionTrees.PooledArraysDTM.PooledArray{Float64, UInt8, 1, Array{UInt8, 1}}, Symbol})
    precompile(Tuple{typeof(DataFrames.insert_single_column!), DataFrames.DataFrame, Array{String, 1}, Symbol})
    precompile(Tuple{typeof(DataFrames.gennames), Int64})
    precompile(Tuple{getfield(DataFrames, Symbol("##DataFrame#175")), Array{UInt8, 1}, Type{Int}, (DataStreams.Data).Schema{true, Tuple{Int64, Float64, Float64, Float64, Float64, Float64, Int64, String, String, String, Int64, String, String, String, String, String, String, String, String, String, String, Int64, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, Int64, String, String, Int64, Int64, String, Int64, Int64, String, Int64, Int64, String, Int64, String, String, String, Int64, String, String, String, String, Int64, Int64, Int64, String, String, String, String, String, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Float64, Int64, Float64, Float64, Float64, Float64, Int64, Int64, Int64, Int64, Int64, Int64}}, Type{(DataStreams.Data).Field}, Bool})
    precompile(Tuple{getfield(DataFrames, Symbol("##make_unique#3")), Bool, typeof(identity), Array{Symbol, 1}})
    precompile(Tuple{getfield(DataFrames, Symbol("##names!#7")), Bool, Bool, typeof(identity), DataFrames.Index, Array{Symbol, 1}})
    precompile(Tuple{getfield(DataFrames, Symbol("##DataFrame#57")), Bool, Type{Int}, Array{Float64, 2}, Array{Symbol, 1}})
    precompile(Tuple{getfield(DataFrames, Symbol("##DataFrame#57")), Bool, Type{Int}, Array{Any, 2}, Array{Symbol, 1}})
    precompile(Tuple{typeof(DataFrames.names!), DataFrames.DataFrame, Array{Symbol, 1}})
    precompile(Tuple{getfield(DataFrames, Symbol("##DataFrame#57")), Bool, Type{Int}, Array{AbstractString, 2}, Array{Symbol, 1}})
    precompile(Tuple{typeof(DataFrames.allocate), Type{Float64}, Int64, Array{UInt8, 1}})
    precompile(Tuple{typeof(DataFrames.allocate), Type{Int64}, Int64, Array{UInt8, 1}})
    precompile(Tuple{getfield(DataFrames, Symbol("##48#50")), Array{Int64, 1}})
    precompile(Tuple{typeof(DataFrames.allocate), Type{String}, Int64, Array{UInt8, 1}})
    precompile(Tuple{getfield(DataFrames, Symbol("##48#50")), Array{AbstractString, 1}})
    precompile(Tuple{getfield(DataFrames, Symbol("##48#50")), Array{Any, 1}})
    precompile(Tuple{getfield(DataFrames, Symbol("##48#50")), Array{Float64, 1}})
    precompile(Tuple{getfield(DataFrames, Symbol("##48#50")), Array{String, 1}})
    precompile(Tuple{getfield(DataFrames, Symbol("##DataFrame#54")), Bool, Type{Int}, Array{Any, 1}, Array{Symbol, 1}})
end
