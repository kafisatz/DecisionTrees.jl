function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, QuoteNode, (Core.Compiler).Argument, Core.SSAValue})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, Expr, Core.SSAValue})
    precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:allowmissing, :types, :categorical, :rows_for_type_detect), Tuple{Symbol, Array{DataType, 1}, Bool, Int64}}, Type{CSV.TransposedSource{I, D} where D where I}, String})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, (Core.Compiler).Argument, Core.SSAValue, Core.SSAValue, Int})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, Bool, Core.SSAValue})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, Core.SSAValue, String, Int64, Int})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, Tuple{}, Core.SSAValue, Core.SSAValue})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, Type{Int}, Int64, Type{Int}})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, UInt32, Core.SSAValue, (Core.Compiler).Argument, Int})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, (Core.Compiler).Argument, Core.SSAValue, Int64, Int})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, Core.SSAValue, Float64, Core.SSAValue, Core.SSAValue})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, Int64, Core.SSAValue, Int64, Int})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, Expr, Expr, Expr, Int})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, Core.SSAValue, (Core.Compiler).Argument, Core.SSAValue, Core.SSAValue})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, Core.SSAValue, Int64, Int64, Int})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, JLD2.OnDiskRepresentation{(0, 16), Tuple{String, Array{Any, 1}}, Tuple{JLD2.Vlen{String}, JLD2.Vlen{JLD2.RelOffset}}}})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, Core.SSAValue, (Core.Compiler).Argument, (Core.Compiler).Argument, Int})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, JLD2.OnDiskRepresentation{(0, 8, 16, 24, 32, 40, 48, 56, 64), Tuple{Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, DataFrames.DataFrame, Array{Array{Float64, 1}, 1}, Array{Array{String, 1}, 1}}, Tuple{JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset}}})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, Expr, (Core.Compiler).Argument, Core.SSAValue})
    precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:allowmissing, :types, :categorical, :rows_for_type_detect), Tuple{Symbol, Array{DataType, 1}, Bool, Int64}}, Type{CSV.Source{I, D} where D where I}, String})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Float32, Int64}, Int64})
    precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:sinkindex, :sortindex, :col), Tuple{Int64, Nothing, Int64}}, Type{DataStreams.Data.QueryColumn{code, T, sourceindex, sinkindex, name, sort, args} where args where sort where name where sinkindex where sourceindex where T where code}, Int64, Array{Any, 1}, Array{String, 1}})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Float64, Int64}, Int64})
    precompile(Tuple{typeof((Core.Compiler).getindex), Type{Any}, Int, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Bool, Base.Sort.QuickSortAlg}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Base.Libc.RawFD, Base.Libc.RawFD, Base.Libc.RawFD}}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{Int64}}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Pkg.API.add)}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Int64, String, String, Float64, Float64}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Int64}, Tuple{Int64}}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Expr, Int64}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{NamedTuple{(:dims,), Tuple{Base.Val{2}}}, typeof(Base.cat)}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Bool, Bool}, Tuple{}}, Int64})
    precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:reference,), Tuple{Array{UInt8, 1}}}, Type{DataFrames.DataFrame}, DataStreams.Data.Schema{true, Tuple{Int64, Float64, Float64, Float64, Float64, Float64, Int64, String, String, String, Int64, String, String, String, String, String, String, String, String, String, String, Int64, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, String, Int64, String, Int64, String, String, Int64, Int64, String, Int64, Int64, String, Int64, Int64, String, Int64, String, String, String, Int64, String, String, String, String, Int64, Int64, Int64, String, String, String, String, String, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Float64, Int64, Float64, Float64, Float64, Float64, Int64, Int64, Int64, Int64, Int64, Int64}}, Type{DataStreams.Data.Field}, Bool})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{String, String}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(PyCall.pycall), PyCall.PyObject, DataType}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{UInt64}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Int64, String, Float64}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Bool, Bool}, Tuple{Int64, Int64}}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{String, typeof(Base.info)}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(FileIO.save), String}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Base.Broadcast.DefaultArrayStyle{0}, typeof(Base.identity), UInt64}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Symbol, Symbol, QuoteNode}, Int64})
    precompile(Tuple{getfield(Core.Compiler, Symbol("##192#193")), (Core.Compiler).Const, Type{Int}})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Base.Val{2}, typeof(Base.cat)}, Int64})
    precompile(Tuple{getfield(Core.Compiler, Symbol("##188#189")), JLD2.OnDiskRepresentation{(0, 8, 16, 24, 32, 40, 48, 56, 64), Tuple{Array{String, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, DataFrames.DataFrame, Array{Array{Float64, 1}, 1}, Array{Array{String, 1}, 1}}, Tuple{JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset, JLD2.RelOffset}}})
    precompile(Tuple{getfield(Core.Compiler, Symbol("##188#189")), JLD2.OnDiskRepresentation{(0, 16), Tuple{String, Array{Any, 1}}, Tuple{JLD2.Vlen{String}, JLD2.Vlen{JLD2.RelOffset}}}})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}}, Int64})
    precompile(Tuple{getfield(Core.Compiler, Symbol("##188#189")), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Float64, Float64}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{PyCall.PyObject}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Bool, Symbol}, Int64})
    precompile(Tuple{getfield(Core.Compiler, Symbol("##188#189")), Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}}, Int64})
    precompile(Tuple{getfield(Core.Compiler, Symbol("##188#189")), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Core.SimpleVector}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{NamedTuple{(:dims,), Tuple{Base.Val{2}}}, typeof(Base.cat_t), DataType}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{LineNumberNode}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Base.Val{2}, typeof(Base.cat_t), DataType}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Base.Val{2}, DataType}, Int64})
    precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(PyCall._pycall), PyCall.PyObject}, Int64})
    precompile(Tuple{getfield(Core.Compiler, Symbol("##188#189")), Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64}})
    precompile(Tuple{getfield(Core.Compiler, Symbol("##188#189")), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
    precompile(Tuple{getfield(Core.Compiler, Symbol("##188#189")), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
    precompile(Tuple{getfield(Core.Compiler, Symbol("##188#189")), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
    precompile(Tuple{getfield(Core.Compiler, Symbol("##188#189")), UInt8})
    precompile(Tuple{getfield(Core.Compiler, Symbol("##188#189")), Nothing})
    precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Type{T} where T, 1}}})
end
